{
  DynamicType.Loaded<T> loaded=implement(sourceType,MethodDelegation.toInstanceField(targetType,FIELD_NAME).filter(isDeclaredBy(targetType)));
  assertThat(loaded.getLoadedAuxiliaryTypes().size(),is(0));
  assertThat(loaded.getLoaded().getDeclaredMethods().length,is(1));
  assertThat(loaded.getLoaded().getDeclaredFields().length,is(1));
  T instance=loaded.getLoaded().newInstance();
  Field field=loaded.getLoaded().getDeclaredField(FIELD_NAME);
  assertThat(field.getModifiers(),is(Modifier.PUBLIC));
  assertEquals(targetType,field.getType());
  field.setAccessible(true);
  field.set(instance,targetType.newInstance());
  assertNotEquals(sourceType,instance.getClass());
  assertThat(instance,instanceOf(sourceType));
  assertThat(loaded.getLoaded().getDeclaredMethod(FOO,parameterTypes).invoke(instance,arguments),(Matcher)matcher);
  instance.assertZeroCalls();
}
