{
  latentMethodMatcher=new SubclassDynamicTypeBuilder.InstrumentableMatcher(ignoredMethods);
  when(typeDescription.asRawType()).thenReturn(typeDescription);
  when(typeDescription.getSort()).thenReturn(GenericTypeDescription.Sort.NON_GENERIC);
  when(otherType.asRawType()).thenReturn(otherType);
  when(otherType.getSort()).thenReturn(GenericTypeDescription.Sort.NON_GENERIC);
}
