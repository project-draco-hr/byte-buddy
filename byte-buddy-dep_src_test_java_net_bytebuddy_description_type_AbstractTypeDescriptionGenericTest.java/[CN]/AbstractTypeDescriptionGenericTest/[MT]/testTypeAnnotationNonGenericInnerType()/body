{
  Class<? extends Annotation> typeAnnotation=(Class<? extends Annotation>)Class.forName(TYPE_ANNOTATION);
  MethodDescription.InDefinedShape value=new TypeDescription.ForLoadedType(typeAnnotation).getDeclaredMethods().getOnly();
  Class<?> samples=Class.forName(TYPE_ANNOTATION_OTHER_SAMPLES);
  TypeDescription.Generic fieldType=describeType(samples.getDeclaredField(BAZ));
  assertThat(fieldType.getSort(),is(TypeDefinition.Sort.NON_GENERIC));
  assertThat(fieldType.getDeclaredAnnotations().size(),is(1));
  assertThat(fieldType.getDeclaredAnnotations().isAnnotationPresent(typeAnnotation),is(true));
  assertThat(fieldType.getDeclaredAnnotations().ofType(typeAnnotation).getValue(value).resolve(Integer.class),is(8));
  assertThat(fieldType.getOwnerType().getSort(),is(TypeDefinition.Sort.NON_GENERIC));
  assertThat(fieldType.getOwnerType().getDeclaredAnnotations().size(),is(1));
  assertThat(fieldType.getOwnerType().getDeclaredAnnotations().isAnnotationPresent(typeAnnotation),is(true));
  assertThat(fieldType.getOwnerType().getDeclaredAnnotations().ofType(typeAnnotation).getValue(value).resolve(Integer.class),is(7));
}
