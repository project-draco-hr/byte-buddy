{
  Class<?> dynamicType=new ByteBuddy().subclass(AbstractGenericType.Inner.class).modifiers(Opcodes.ACC_ABSTRACT | Opcodes.ACC_PUBLIC).method(named(FOO)).withoutCode().make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.CHILD_FIRST).getLoaded();
  assertThat(dynamicType.getDeclaredMethods().length,is(2));
  assertEquals(Void.class,dynamicType.getDeclaredMethod(FOO,Void.class).getReturnType());
  assertThat(dynamicType.getDeclaredMethod(FOO,Void.class).getGenericReturnType(),is((Type)Void.class));
  assertThat(dynamicType.getDeclaredMethod(FOO,Void.class).isBridge(),is(false));
  assertThat(Modifier.isAbstract(dynamicType.getDeclaredMethod(FOO,Void.class).getModifiers()),is(true));
  assertEquals(Object.class,dynamicType.getDeclaredMethod(FOO,Object.class).getReturnType());
  assertThat(dynamicType.getDeclaredMethod(FOO,Object.class).getGenericReturnType(),is((Type)Object.class));
  assertThat(dynamicType.getDeclaredMethod(FOO,Object.class).isBridge(),is(true));
  assertThat(Modifier.isAbstract(dynamicType.getDeclaredMethod(FOO,Object.class).getModifiers()),is(false));
}
