{
  Class<? extends Annotation> typeAnnotationType=(Class<? extends Annotation>)Class.forName(TYPE_VARIABLE_NAME);
  MethodDescription.InDefinedShape value=new TypeDescription.ForLoadedType(typeAnnotationType).getDeclaredMethods().filter(named(VALUE)).getOnly();
  Class<?> type=new ByteBuddy().subclass(TypeDescription.Generic.Builder.rawType(Object.class).build(AnnotationDescription.Builder.ofType(typeAnnotationType).define(VALUE,BAZ).build())).make().load(typeAnnotationType.getClassLoader(),ClassLoadingStrategy.Default.CHILD_FIRST).getLoaded();
  assertThat(type.getSuperclass(),is((Object)Object.class));
  assertThat(TypeDescription.Generic.AnnotationReader.DISPATCHER.resolveSuperClass(type).asList().size(),is(1));
  assertThat(TypeDescription.Generic.AnnotationReader.DISPATCHER.resolveSuperClass(type).asList().ofType(typeAnnotationType).getValue(value,Integer.class),is(BAZ));
}
