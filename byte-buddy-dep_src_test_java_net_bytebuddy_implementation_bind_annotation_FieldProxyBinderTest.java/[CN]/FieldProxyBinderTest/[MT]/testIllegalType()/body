{
  doReturn(Foo.class).when(annotation).declaringType();
  when(annotation.value()).thenReturn(FOO);
  TypeDescription targetType=mock(TypeDescription.class);
  TypeDescription.Generic genericTargetType=mock(TypeDescription.Generic.class);
  when(genericTargetType.asErasure()).thenReturn(targetType);
  when(target.getType()).thenReturn(genericTargetType);
  when(instrumentedType.isAssignableTo(new TypeDescription.ForLoadedType(Foo.class))).thenReturn(true);
  new FieldProxy.Binder(getterMethod,setterMethod).bind(annotationDescription,source,target,implementationTarget,assigner);
}
