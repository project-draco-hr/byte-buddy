{
  when(loadedAnnotationValue.getState()).thenReturn(AnnotationDescription.AnnotationValue.Loaded.State.RESOLVED);
  when(loadedAnnotationValue.resolve()).thenReturn(FOO);
  InvocationHandler invocationHandler=AnnotationDescription.AnnotationInvocationHandler.of(getClass().getClassLoader(),Foo.class,Collections.<String,AnnotationDescription.AnnotationValue<?,?>>singletonMap(FOO,annotationValue));
  assertThat(AnnotationDescription.AnnotationInvocationHandler.of(getClass().getClassLoader(),Foo.class,Collections.<String,AnnotationDescription.AnnotationValue<?,?>>singletonMap(FOO,annotationValue)).invoke(new Object(),Object.class.getDeclaredMethod("equals",Object.class),new Object[]{Proxy.newProxyInstance(getClass().getClassLoader(),new Class<?>[]{Foo.class},invocationHandler)}),is((Object)true));
  verify(loadedAnnotationValue,never()).resolve();
}
