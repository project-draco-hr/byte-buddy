{
  when(loadedAnnotationValue.getState()).thenReturn(AnnotationValue.Loaded.State.RESOLVED);
  when(loadedAnnotationValue.represents(FOO)).thenReturn(true);
  assertThat(Proxy.getInvocationHandler(AnnotationDescription.AnnotationInvocationHandler.of(getClass().getClassLoader(),Foo.class,Collections.<String,AnnotationValue<?,?>>singletonMap(FOO,annotationValue))).invoke(new Object(),Object.class.getDeclaredMethod("equals",Object.class),new Object[]{Proxy.newProxyInstance(getClass().getClassLoader(),new Class<?>[]{Foo.class},new ExplicitFoo(FOO))}),is((Object)true));
  verify(loadedAnnotationValue).represents(FOO);
}
