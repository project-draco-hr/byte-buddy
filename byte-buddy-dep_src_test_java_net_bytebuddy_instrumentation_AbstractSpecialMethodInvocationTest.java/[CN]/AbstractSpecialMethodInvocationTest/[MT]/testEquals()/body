{
  Instrumentation.SpecialMethodInvocation identical=make(FOO,returnType,parameterTypes,targetType);
  assertThat(identical,is(identical));
  assertThat(make(FOO,returnType,parameterTypes,targetType),is(make(FOO,returnType,parameterTypes,targetType)));
  Instrumentation.SpecialMethodInvocation equal=mock(Instrumentation.SpecialMethodInvocation.class);
  when(equal.getTypeDescription()).thenReturn(targetType);
  MethodDescription equalMethod=mock(MethodDescription.class);
  when(equal.getMethodDescription()).thenReturn(equalMethod);
  when(equalMethod.getInternalName()).thenReturn(FOO);
  when(equalMethod.getReturnType()).thenReturn(returnType);
  when(equalMethod.getParameters()).thenReturn(ParameterList.Explicit.latent(equalMethod,parameterTypes));
  assertThat(make(FOO,returnType,parameterTypes,targetType),is(equal));
  Instrumentation.SpecialMethodInvocation equalButType=mock(Instrumentation.SpecialMethodInvocation.class);
  when(equalButType.getTypeDescription()).thenReturn(mock(TypeDescription.class));
  when(equalButType.getMethodDescription()).thenReturn(equalMethod);
  assertThat(make(FOO,returnType,parameterTypes,targetType),not(is(equalButType)));
  Instrumentation.SpecialMethodInvocation equalButName=mock(Instrumentation.SpecialMethodInvocation.class);
  when(equalButName.getTypeDescription()).thenReturn(targetType);
  MethodDescription equalMethodButName=mock(MethodDescription.class);
  when(equalButName.getMethodDescription()).thenReturn(equalMethodButName);
  when(equalMethodButName.getInternalName()).thenReturn(BAR);
  when(equalMethodButName.getReturnType()).thenReturn(returnType);
  when(equalMethodButName.getParameters()).thenReturn(ParameterList.Explicit.latent(equalMethodButName,parameterTypes));
  assertThat(make(FOO,returnType,parameterTypes,targetType),not(is(equalButName)));
  Instrumentation.SpecialMethodInvocation equalButReturn=mock(Instrumentation.SpecialMethodInvocation.class);
  when(equalButName.getTypeDescription()).thenReturn(targetType);
  MethodDescription equalMethodButReturn=mock(MethodDescription.class);
  when(equalButName.getMethodDescription()).thenReturn(equalMethodButReturn);
  when(equalMethodButReturn.getInternalName()).thenReturn(FOO);
  when(equalMethodButReturn.getReturnType()).thenReturn(mock(TypeDescription.class));
  when(equalMethodButReturn.getParameters()).thenReturn(ParameterList.Explicit.latent(equalMethodButReturn,parameterTypes));
  assertThat(make(FOO,returnType,parameterTypes,targetType),not(is(equalButReturn)));
  Instrumentation.SpecialMethodInvocation equalButParameter=mock(Instrumentation.SpecialMethodInvocation.class);
  when(equalButParameter.getTypeDescription()).thenReturn(targetType);
  MethodDescription equalMethodButParameter=mock(MethodDescription.class);
  when(equalButParameter.getMethodDescription()).thenReturn(equalMethodButParameter);
  when(equalMethodButParameter.getInternalName()).thenReturn(FOO);
  when(equalMethodButParameter.getReturnType()).thenReturn(returnType);
  when(equalMethodButParameter.getParameters()).thenReturn(ParameterList.Explicit.latent(equalMethodButParameter,Arrays.asList(mock(TypeDescription.class))));
  assertThat(make(FOO,returnType,parameterTypes,targetType),not(is(equalButParameter)));
  assertThat(make(FOO,returnType,parameterTypes,targetType),not(is(new Object())));
  assertThat(make(FOO,returnType,parameterTypes,targetType),not(is((Object)null)));
}
