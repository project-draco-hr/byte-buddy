{
  TypeDescription typeDescription=typePool.describe(Foo.class.getName());
  assertThat(typeDescription,notNullValue());
  assertThat(typeDescription.getName(),is(Foo.class.getName()));
  assertThat(typeDescription.getDescriptor(),is(Type.getDescriptor(Foo.class)));
  assertThat(typeDescription.getModifiers(),is(Foo.class.getModifiers()));
  assertThat(typeDescription.getDeclaredFields().named(F1).getName(),is(F1));
  assertThat(typeDescription.getDeclaredFields().named(F1).getModifiers(),is(Foo.class.getDeclaredField(F1).getModifiers()));
  assertThat(typeDescription.getDeclaredFields().named(F1).getFieldType(),is((TypeDescription)new TypeDescription.ForLoadedType(boolean.class)));
  assertThat(typeDescription.getDeclaredMethods().size(),is(2));
  assertThat(typeDescription.getDeclaredMethods().filter(isConstructor()).getOnly().getName(),is(Foo.class.getName()));
  assertThat(typeDescription.getDeclaredMethods().filter(isConstructor()).getOnly().getModifiers(),is(Foo.class.getDeclaredConstructor().getModifiers()));
  assertThat(typeDescription.getDeclaredMethods().filter(named(M1)).getOnly().getName(),is(M1));
  assertThat(typeDescription.getDeclaredMethods().filter(named(M1)).getOnly().getModifiers(),is(Foo.class.getDeclaredMethod(M1).getModifiers()));
}
