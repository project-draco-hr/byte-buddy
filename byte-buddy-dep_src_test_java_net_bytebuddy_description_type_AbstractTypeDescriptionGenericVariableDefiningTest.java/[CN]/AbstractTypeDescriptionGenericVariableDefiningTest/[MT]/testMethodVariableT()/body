{
  Class<? extends Annotation> typeAnnotation=(Class<? extends Annotation>)Class.forName(TYPE_ANNOTATION);
  MethodDescription.InDefinedShape value=new TypeDescription.ForLoadedType(typeAnnotation).getDeclaredMethods().getOnly();
  MethodDescription methodDescription=describe(Class.forName(TYPE_ANNOTATION_SAMPLES)).getDeclaredMethods().filter(isMethod()).getOnly();
  TypeDescription.Generic t=methodDescription.getTypeVariables().getOnly();
  assertThat(t.getSort(),is(TypeDefinition.Sort.VARIABLE));
  assertThat(t.getDeclaredAnnotations().size(),is(1));
  assertThat(t.getDeclaredAnnotations().isAnnotationPresent(typeAnnotation),is(true));
  assertThat(t.getDeclaredAnnotations().ofType(typeAnnotation).getValue(value,Integer.class),is(20));
  assertThat(t.getUpperBounds().getOnly().getSort(),is(TypeDefinition.Sort.NON_GENERIC));
  assertThat(t.getUpperBounds().getOnly().getDeclaredAnnotations().size(),is(1));
  assertThat(t.getUpperBounds().getOnly().getDeclaredAnnotations().isAnnotationPresent(typeAnnotation),is(true));
  assertThat(t.getUpperBounds().getOnly().getDeclaredAnnotations().ofType(typeAnnotation).getValue(value,Integer.class),is(21));
}
