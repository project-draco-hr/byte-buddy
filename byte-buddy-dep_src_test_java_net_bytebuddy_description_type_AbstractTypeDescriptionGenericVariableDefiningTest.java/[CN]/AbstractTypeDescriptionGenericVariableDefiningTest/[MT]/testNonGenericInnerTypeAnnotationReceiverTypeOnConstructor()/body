{
  Class<? extends Annotation> typeAnnotation=(Class<? extends Annotation>)Class.forName(TYPE_ANNOTATION);
  MethodDescription.InDefinedShape value=new TypeDescription.ForLoadedType(typeAnnotation).getDeclaredMethods().getOnly();
  TypeDescription.Generic receiverType=describe(Class.forName(RECEIVER_TYPE_SAMPLE + "$" + INNER)).getDeclaredMethods().filter(isConstructor()).getOnly().getReceiverType();
  assertThat(receiverType,notNullValue(TypeDescription.Generic.class));
  assertThat(receiverType.getSort(),is(TypeDefinition.Sort.NON_GENERIC));
  assertThat(receiverType.represents(Class.forName(RECEIVER_TYPE_SAMPLE)),is(true));
  assertThat(receiverType.getDeclaredAnnotations().size(),is(1));
  assertThat(receiverType.getDeclaredAnnotations().isAnnotationPresent(typeAnnotation),is(true));
  assertThat(receiverType.getDeclaredAnnotations().ofType(typeAnnotation).getValue(value,Integer.class),is(2));
}
