{
  try {
    ExtractionClassFileTransformer classFileTransformer=new ExtractionClassFileTransformer(classLoadingDelegate.getClassLoader(),typeName);
    try {
      instrumentation.addTransformer(classFileTransformer,true);
      instrumentation.retransformClasses(classLoadingDelegate.locate(typeName));
      byte[] binaryRepresentation=classFileTransformer.getBinaryRepresentation();
      return binaryRepresentation == null ? Resolution.Illegal.INSTANCE : new Resolution.Explicit(binaryRepresentation);
    }
  finally {
      instrumentation.removeTransformer(classFileTransformer);
    }
  }
 catch (  RuntimeException exception) {
    throw exception;
  }
catch (  Exception ignored) {
    return Resolution.Illegal.INSTANCE;
  }
}
