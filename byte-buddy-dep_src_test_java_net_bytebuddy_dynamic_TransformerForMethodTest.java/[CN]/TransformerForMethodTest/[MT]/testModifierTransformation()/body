{
  MethodDescription.Token transformed=new Transformer.ForMethod.MethodModifierTransformer(Collections.singletonList(modifierContributor)).transform(instrumentedType,methodToken);
  assertThat(transformed.getName(),is(FOO));
  assertThat(transformed.getModifiers(),is((MODIFIERS & ~RANGE) | MASK));
  assertThat(transformed.getReturnType(),is(returnType));
  assertThat(transformed.getTypeVariableTokens().size(),is(1));
  assertThat(transformed.getTypeVariableTokens().get(0),is(new TypeVariableToken(QUX,Collections.singletonList(typeVariableBound))));
  assertThat(transformed.getExceptionTypes().size(),is(1));
  assertThat(transformed.getExceptionTypes().getOnly(),is(exceptionType));
  assertThat(transformed.getParameterTokens().size(),is(1));
  assertThat(transformed.getParameterTokens().getOnly(),is(parameterToken));
}
