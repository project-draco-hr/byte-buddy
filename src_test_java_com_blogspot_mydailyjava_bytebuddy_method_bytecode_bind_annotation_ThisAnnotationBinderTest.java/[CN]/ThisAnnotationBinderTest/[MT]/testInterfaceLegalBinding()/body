{
  final Class<?> instrumentedType=Object.class, firstInterface=Integer.class, secondInterface=Float.class, targetType=Void.class;
  doReturn(instrumentedType).when(typeDescription).getSuperClass();
  when(typeDescription.getInterfaces()).thenReturn(Arrays.<Class<?>>asList(firstInterface,secondInterface));
  when(target.getParameterTypes()).thenReturn(new Class<?>[]{Void.class});
  when(target.getParameterAnnotations()).thenReturn(new Annotation[1][0]);
  when(assigner.assign(any(Class.class),any(Class.class),anyBoolean())).thenReturn(IllegalAssignment.INSTANCE,IllegalAssignment.INSTANCE,LegalTrivialAssignment.INSTANCE);
  AnnotationDrivenBinder.ArgumentBinder.IdentifiedBinding<?> identifiedBinding=This.Binder.INSTANCE.bind(annotation,0,source,target,typeDescription,assigner);
  assertThat(identifiedBinding.isValid(),is(true));
  verify(assigner).assign(instrumentedType,targetType,false);
  verify(assigner).assign(firstInterface,targetType,false);
  verify(assigner).assign(secondInterface,targetType,false);
  verifyNoMoreInteractions(assigner);
  verify(target,atLeast(1)).getParameterTypes();
  verify(target,atLeast(1)).getParameterAnnotations();
  verify(typeDescription,atLeast(1)).getSuperClass();
  verify(typeDescription,atLeast(1)).getInterfaces();
}
