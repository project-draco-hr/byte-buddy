{
  List<T> result=new ArrayList<T>(left.size() + right.size());
  Map<TypeDescription,GenericTypeDescription> types=new HashMap<TypeDescription,GenericTypeDescription>();
  for (  T typeDescription : left) {
    types.put(typeDescription.asErasure(),typeDescription);
    result.add(typeDescription);
  }
  for (  T typeDescription : right) {
    GenericTypeDescription conflictingType=types.put(typeDescription.asErasure(),typeDescription);
    if (conflictingType != null && !conflictingType.equals(typeDescription)) {
      throw new IllegalArgumentException("Conflicting type erasures: " + conflictingType + " and "+ typeDescription);
    }
 else     if (conflictingType == null) {
      result.add(typeDescription);
    }
  }
  return result;
}
