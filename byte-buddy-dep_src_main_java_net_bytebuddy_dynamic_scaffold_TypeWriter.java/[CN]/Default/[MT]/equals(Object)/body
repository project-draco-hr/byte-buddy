{
  if (this == other)   return true;
  if (other == null || getClass() != other.getClass())   return false;
  Default<?> aDefault=(Default<?>)other;
  return instrumentedType.equals(aDefault.instrumentedType) && loadedTypeInitializer.equals(aDefault.loadedTypeInitializer) && typeInitializer.equals(aDefault.typeInitializer)&& explicitAuxiliaryTypes.equals(aDefault.explicitAuxiliaryTypes)&& classFileVersion.equals(aDefault.classFileVersion)&& auxiliaryTypeNamingStrategy.equals(aDefault.auxiliaryTypeNamingStrategy)&& implementationContextFactory.equals(aDefault.implementationContextFactory)&& asmVisitorWrapper.equals(aDefault.asmVisitorWrapper)&& attributeAppender.equals(aDefault.attributeAppender)&& fieldPool.equals(aDefault.fieldPool)&& methodPool.equals(aDefault.methodPool)&& instrumentedMethods.equals(aDefault.instrumentedMethods)&& annotationValueFilterFactory.equals(aDefault.annotationValueFilterFactory);
}
