{
  ClassWriter classWriter=new ClassWriter(ASM_MANUAL_FLAG);
  ClassVisitor classVisitor=classVisitorWrapper.wrap(classWriter);
  classVisitor.visit(classFileVersion.getVersionNumber(),instrumentedType.getActualModifiers(!instrumentedType.isInterface()),instrumentedType.getInternalName(),instrumentedType.getGenericSignature(),(instrumentedType.getSupertype() == null ? TypeDescription.OBJECT : instrumentedType.getSupertype()).getInternalName(),instrumentedType.getInterfaces().toInternalNames());
  attributeAppender.apply(classVisitor,instrumentedType);
  for (  FieldDescription fieldDescription : instrumentedType.getDeclaredFields()) {
    fieldPool.target(fieldDescription).apply(classVisitor,fieldDescription);
  }
  for (  MethodDescription methodDescription : invokeableMethods) {
    methodPool.target(methodDescription).apply(classVisitor,instrumentationContext,methodDescription);
  }
  instrumentationContext.drain(classVisitor,methodPool,Instrumentation.Context.ExtractableView.InjectedCode.None.INSTANCE);
  classVisitor.visitEnd();
  return classWriter.toByteArray();
}
