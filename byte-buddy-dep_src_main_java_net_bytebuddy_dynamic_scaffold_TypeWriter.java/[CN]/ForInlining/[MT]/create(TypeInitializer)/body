{
  try {
    ClassFileLocator.Resolution resolution=classFileLocator.locate(originalType.getName());
    if (!resolution.isResolved()) {
      throw new IllegalArgumentException("Cannot locate the class file for " + originalType + " using "+ classFileLocator);
    }
    int writerFlags=asmVisitorWrapper.mergeWriter(AsmVisitorWrapper.NO_FLAGS), readerFlags=asmVisitorWrapper.mergeReader(AsmVisitorWrapper.NO_FLAGS);
    ClassReader classReader=new ClassReader(resolution.resolve());
    ClassWriter classWriter=new FrameComputingClassWriter(classReader,writerFlags,typePool);
    ContextRegistry contextRegistry=new ContextRegistry();
    classReader.accept(writeTo(asmVisitorWrapper.wrap(instrumentedType,ValidatingClassVisitor.of(classWriter,typeValidation),writerFlags,readerFlags),typeInitializer,contextRegistry),readerFlags);
    return new UnresolvedType(classWriter.toByteArray(),contextRegistry.getAuxiliaryTypes());
  }
 catch (  IOException exception) {
    throw new RuntimeException("The class file could not be written",exception);
  }
}
