{
  when(assignmentBinding.isValid()).thenReturn(true);
  when(methodInvocation.isValid()).thenReturn(true);
  TypeList typeList=mock(TypeList.class);
  when(typeList.size()).thenReturn(2);
  when(target.getParameterTypes()).thenReturn(typeList);
  when(target.getStackSize()).thenReturn(3);
  when(target.getParameterAnnotations()).thenReturn(AnnotationList.Empty.asList(2));
  when(target.getDeclaredAnnotations()).thenReturn(new AnnotationList.Empty());
  MethodDelegationBinder.ParameterBinding<?> firstBinding=prepareArgumentBinder(firstParameterBinder,FirstPseudoAnnotation.class,new Key(FOO),true);
  MethodDelegationBinder.ParameterBinding<?> secondBinding=prepareArgumentBinder(secondParameterBinder,SecondPseudoAnnotation.class,new Key(BAR),true);
  Iterator<AnnotationDescription> defaultsIterator=prepareDefaultProvider(defaultsProvider,Arrays.asList(secondPseudoAnnotation));
  MethodDelegationBinder methodDelegationBinder=new TargetMethodAnnotationDrivenBinder(Arrays.<TargetMethodAnnotationDrivenBinder.ParameterBinder<?>>asList(firstParameterBinder,secondParameterBinder),defaultsProvider,assigner,methodInvoker);
  assertThat(methodDelegationBinder.bind(instrumentationTarget,source,target).isValid(),is(false));
  verify(firstParameterBinder,atLeast(1)).getHandledType();
  verifyNoMoreInteractions(firstParameterBinder);
  verify(secondParameterBinder,atLeast(1)).getHandledType();
  verify((TargetMethodAnnotationDrivenBinder.ParameterBinder)secondParameterBinder).bind(secondPseudoAnnotation,0,source,target,instrumentationTarget,assigner);
  verifyNoMoreInteractions(secondParameterBinder);
  verify(defaultsIterator,times(2)).hasNext();
  verify(defaultsIterator,times(1)).next();
  verifyNoMoreInteractions(defaultsIterator);
  verify(assigner).assign(targetTypeDescription,sourceTypeDescription,false);
  verifyNoMoreInteractions(assigner);
  verifyZeroInteractions(methodInvoker);
  verifyZeroInteractions(firstBinding);
  verify(secondBinding,atLeast(1)).isValid();
  verify(secondBinding).getIdentificationToken();
  verifyNoMoreInteractions(secondBinding);
}
