{
  validateNonStaticAndTypeCompatibleCall(invocationTarget);
  if (methodDescription.isPrivate() || methodDescription.isConstructor()) {
    throw new IllegalArgumentException("Cannot invoke " + invocationTarget + " virtually");
  }
  if (invocationTarget.isInterface()) {
    return INTERFACE.new Invocation(methodDescription,invocationTarget);
  }
 else {
    return VIRTUAL.new Invocation(methodDescription,invocationTarget);
  }
}
