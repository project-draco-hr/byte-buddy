{
  when(stackManipulation.apply(any(MethodVisitor.class),any(Instrumentation.Context.class))).thenReturn(new StackManipulation.Size(0,0));
  when(assigner.assign(any(TypeDescription.class),any(TypeDescription.class),anyBoolean())).thenReturn(stackManipulation);
  when(methodInvoker.invoke(any(MethodDescription.class))).thenReturn(methodInvocation);
  when(methodInvocation.apply(any(MethodVisitor.class),any(Instrumentation.Context.class))).thenReturn(new StackManipulation.Size(0,0));
  TypeDescription declaringType=mock(TypeDescription.class);
  when(declaringType.getInternalName()).thenReturn(FOO);
  when(declaringType.isInterface()).thenReturn(false);
  when(target.getDeclaringType()).thenReturn(declaringType);
  when(target.getInternalName()).thenReturn(BAR);
  when(target.getDescriptor()).thenReturn(BAZ);
  when(target.isStatic()).thenReturn(true);
  doReturn(FirstPseudoAnnotation.class).when(firstPseudoAnnotation).annotationType();
  doReturn(SecondPseudoAnnotation.class).when(secondPseudoAnnotation).annotationType();
  when(sourceTypeDescription.getStackSize()).thenReturn(StackSize.ZERO);
  when(targetTypeDescription.getStackSize()).thenReturn(StackSize.ZERO);
  when(source.getReturnType()).thenReturn(sourceTypeDescription);
  when(target.getReturnType()).thenReturn(targetTypeDescription);
}
