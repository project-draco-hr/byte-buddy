{
  when(source.asToken()).thenReturn(morphToken);
  when(instrumentedType.getInterfaces()).thenReturn(new GenericTypeList.ForLoadedType(Foo.class));
  when(target.getType()).thenReturn(morphType);
  when(morphMethod.getDeclaringType()).thenReturn(morphType);
  when(annotation.defaultMethod()).thenReturn(true);
  doReturn(void.class).when(annotation).defaultTarget();
  when(source.isSpecializableFor(new TypeDescription.ForLoadedType(Foo.class))).thenReturn(true);
  when(implementationTarget.invokeDefault(new TypeDescription.ForLoadedType(Foo.class),morphToken)).thenReturn(specialMethodInvocation);
  MethodDelegationBinder.ParameterBinding<?> parameterBinding=new Morph.Binder(morphMethod).bind(annotationDescription,source,target,implementationTarget,assigner);
  assertThat(parameterBinding.isValid(),is(false));
  verify(specialMethodInvocation).isValid();
}
