{
  when(annotation.value()).thenReturn(AllArguments.Assignment.STRICT);
  when(stackManipulation.isValid()).thenReturn(true);
  when(rawSourceTypeList.iterator()).thenReturn(Arrays.asList(firstSourceType,secondSourceType).iterator());
  when(source.isStatic()).thenReturn(false);
  when(genericTargetType.isArray()).thenReturn(true);
  when(targetType.getComponentType()).thenReturn(componentType);
  when(componentType.getStackSize()).thenReturn(StackSize.SINGLE);
  when(target.getType()).thenReturn(genericTargetType);
  when(target.getDeclaredAnnotations()).thenReturn(new AnnotationList.ForLoadedAnnotation(targetAnnotation));
  MethodDelegationBinder.ParameterBinding<?> parameterBinding=AllArguments.Binder.INSTANCE.bind(annotationDescription,source,target,implementationTarget,assigner);
  assertThat(parameterBinding.isValid(),is(true));
  verify(source,atLeast(1)).getParameters();
  verify(source,atLeast(1)).isStatic();
  verify(target,atLeast(1)).getType();
  verify(target,atLeast(1)).getDeclaredAnnotations();
  verify(assigner).assign(firstSourceType,componentType,Assigner.Typing.of(dynamicallyTyped));
  verify(assigner).assign(secondSourceType,componentType,Assigner.Typing.of(dynamicallyTyped));
  verifyNoMoreInteractions(assigner);
}
