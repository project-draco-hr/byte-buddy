{
  assertThat(objectType.represents(Object.class),is(true));
  assertThat(objectType.represents(int.class),is(false));
  assertThat(objectType.represents(long.class),is(false));
  assertThat(objectType.represents(Number.class),is(false));
  assertThat(objectType.represents(Integer.class),is(false));
  assertThat(objectType.represents(Serializable.class),is(false));
  assertThat(objectType.represents(Object[].class),is(false));
  assertThat(intType.represents(Object.class),is(false));
  assertThat(intType.represents(int.class),is(true));
  assertThat(intType.represents(long.class),is(false));
  assertThat(intType.represents(Number.class),is(false));
  assertThat(intType.represents(Integer.class),is(false));
  assertThat(intType.represents(Serializable.class),is(false));
  assertThat(intType.represents(Object[].class),is(false));
  assertThat(longType.represents(Object.class),is(false));
  assertThat(longType.represents(int.class),is(false));
  assertThat(longType.represents(long.class),is(true));
  assertThat(longType.represents(Number.class),is(false));
  assertThat(longType.represents(Integer.class),is(false));
  assertThat(longType.represents(Serializable.class),is(false));
  assertThat(longType.represents(Object[].class),is(false));
  assertThat(numberType.represents(Object.class),is(false));
  assertThat(numberType.represents(int.class),is(false));
  assertThat(numberType.represents(long.class),is(false));
  assertThat(numberType.represents(Number.class),is(true));
  assertThat(numberType.represents(Integer.class),is(false));
  assertThat(numberType.represents(Serializable.class),is(false));
  assertThat(numberType.represents(Object[].class),is(false));
  assertThat(integerType.represents(Object.class),is(false));
  assertThat(integerType.represents(int.class),is(false));
  assertThat(integerType.represents(long.class),is(false));
  assertThat(integerType.represents(Number.class),is(false));
  assertThat(integerType.represents(Integer.class),is(true));
  assertThat(integerType.represents(Serializable.class),is(false));
  assertThat(integerType.represents(Object[].class),is(false));
  assertThat(serializableType.represents(Object.class),is(false));
  assertThat(serializableType.represents(int.class),is(false));
  assertThat(serializableType.represents(long.class),is(false));
  assertThat(serializableType.represents(Number.class),is(false));
  assertThat(serializableType.represents(Integer.class),is(false));
  assertThat(serializableType.represents(Serializable.class),is(true));
  assertThat(serializableType.represents(Object[].class),is(false));
}
