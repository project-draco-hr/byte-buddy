{
  Generic.Visitor<TypeDescription.Generic> visitor=Generic.Visitor.Substitutor.ForDetachment.of(typeDescription);
  return new Default(typeDescription.getName(),typeDescription.getModifiers(),typeDescription.getSuperType(),typeDescription.getTypeVariables().asTokenList(visitor),typeDescription.getInterfaces().accept(visitor),typeDescription.getDeclaredFields().asTokenList(),typeDescription.getDeclaredMethods().asTokenList(named(typeDescription.getName())),typeDescription.getDeclaredAnnotations(),TypeInitializer.None.INSTANCE,LoadedTypeInitializer.NoOp.INSTANCE,typeDescription.getDeclaringType(),typeDescription.getEnclosingMethod(),typeDescription.getEnclosingType(),typeDescription.getDeclaredTypes(),typeDescription.isMemberClass(),typeDescription.isAnonymousClass(),typeDescription.isLocalClass());
}
