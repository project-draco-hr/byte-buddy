{
  internalName=methodDescription.getInternalName();
  typeVariables=new ArrayList<GenericTypeDescription>(methodDescription.getTypeVariables().size());
  for (  GenericTypeDescription typeVariable : methodDescription.getTypeVariables()) {
    typeVariables.add(new TypeVariableToken(substitutor,typeVariable));
  }
  returnType=methodDescription.getReturnType().accept(substitutor);
  exceptionTypes=methodDescription.getExceptionTypes().accept(substitutor);
  modifiers=methodDescription.getModifiers();
  declaredAnnotations=methodDescription.getDeclaredAnnotations();
  parameters=new ArrayList<ParameterDescription>(methodDescription.getParameters().size());
  for (  ParameterDescription parameterDescription : methodDescription.getParameters()) {
    parameters.add(new ParameterToken(substitutor,parameterDescription));
  }
  defaultValue=methodDescription.getDefaultValue();
}
