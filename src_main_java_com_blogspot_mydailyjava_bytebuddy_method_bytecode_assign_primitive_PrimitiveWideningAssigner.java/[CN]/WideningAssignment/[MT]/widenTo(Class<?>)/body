{
  if (type == boolean.class) {
    return toBooleanAssignment;
  }
 else   if (type == byte.class) {
    return toByteAssignment;
  }
 else   if (type == short.class) {
    return toShortAssignment;
  }
 else   if (type == char.class) {
    return toCharacterAssignment;
  }
 else   if (type == int.class) {
    return toIntegerAssignment;
  }
 else   if (type == long.class) {
    return toLongAssignment;
  }
 else   if (type == float.class) {
    return toFloatAssignment;
  }
 else   if (type == double.class) {
    return toDoubleAssignment;
  }
 else {
    throw new IllegalStateException("Not a primitive type: " + type);
  }
}
