{
  TypeDescription currentType=instrumentedType;
  do {
    for (    FieldDescription fieldDescription : currentType.getDeclaredFields()) {
      if (fieldDescription.getName().equals(name) && fieldDescription.isVisibleTo(instrumentedType)) {
        return fieldDescription;
      }
    }
  }
 while (!(currentType=currentType.getSupertype()).represents(Object.class));
  throw new IllegalArgumentException("There is no field '" + name + " that is visible to "+ instrumentedType);
}
