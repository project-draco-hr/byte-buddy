{
  ObjectPropertyAssertion.of(TypeProxy.class).apply();
  ObjectPropertyAssertion.of(TypeProxy.AbstractMethodErrorThrow.class).apply();
  ObjectPropertyAssertion.of(TypeProxy.SilentConstruction.class).apply();
  ObjectPropertyAssertion.of(TypeProxy.MethodCall.class).skipSynthetic().apply();
  ObjectPropertyAssertion.of(TypeProxy.MethodCall.Appender.class).refine(new ObjectPropertyAssertion.Refinement<TypeDescription>(){
    @Override public void apply(    TypeDescription mock){
      FieldDescription.InDefinedShape fieldDescription=Mockito.mock(FieldDescription.InDefinedShape.class);
      when(fieldDescription.getActualName()).thenReturn(TypeProxy.INSTANCE_FIELD);
      when(mock.getDeclaredFields()).thenReturn(new FieldList.Explicit<FieldDescription.InDefinedShape>(fieldDescription));
    }
  }
).skipSynthetic().apply();
  ObjectPropertyAssertion.of(TypeProxy.MethodCall.Appender.AccessorMethodInvocation.class).skipSynthetic().apply();
  ObjectPropertyAssertion.of(TypeProxy.SilentConstruction.Appender.class).skipSynthetic().apply();
  ObjectPropertyAssertion.of(TypeProxy.InvocationFactory.Default.class).apply();
}
