{
  try {
    SignatureWriter signatureWriter=new SignatureWriter();
    boolean generic=false;
    for (    Generic typeVariable : getTypeVariables()) {
      signatureWriter.visitFormalTypeParameter(typeVariable.getSymbol());
      for (      Generic upperBound : typeVariable.getUpperBounds()) {
        upperBound.accept(new Generic.Visitor.ForSignatureVisitor(upperBound.asErasure().isInterface() ? signatureWriter.visitInterfaceBound() : signatureWriter.visitClassBound()));
      }
      generic=true;
    }
    Generic superType=getSuperClass();
    if (superType == null) {
      superType=TypeDescription.Generic.OBJECT;
    }
    superType.accept(new Generic.Visitor.ForSignatureVisitor(signatureWriter.visitSuperclass()));
    generic=generic || !superType.getSort().isNonGeneric();
    for (    Generic interfaceType : getInterfaces()) {
      interfaceType.accept(new Generic.Visitor.ForSignatureVisitor(signatureWriter.visitInterface()));
      generic=generic || !interfaceType.getSort().isNonGeneric();
    }
    return generic ? signatureWriter.toString() : NON_GENERIC_SIGNATURE;
  }
 catch (  GenericSignatureFormatError ignored) {
    return NON_GENERIC_SIGNATURE;
  }
}
