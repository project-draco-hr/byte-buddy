{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.main);
  Button runTest=(Button)findViewById(R.id.run_test);
  runTest.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      ByteBuddy byteBuddy;
      try {
        byteBuddy=new ByteBuddy(ClassFileVersion.JAVA_V6);
      }
 catch (      Throwable e) {
        Log.w(BYTE_BUDDY_TAG,e);
        Toast.makeText(TestActivity.this,"Failure: Could not create Byte Buddy instance. (" + e.getMessage() + ")",Toast.LENGTH_LONG).show();
        return;
      }
      try {
        File file=TestActivity.this.getDir(RandomString.make(),Context.MODE_PRIVATE);
        if (!file.isDirectory()) {
          throw new IOException("Not a directory: " + file);
        }
        DynamicType.Loaded<?> dynamicType;
        try {
          dynamicType=byteBuddy.subclass(Object.class).method(named("toString")).intercept(MethodDelegation.to(Interceptor.class)).make().load(TestActivity.class.getClassLoader(),new AndroidClassLoadingStrategy(file));
        }
 catch (        Throwable e) {
          Log.w(BYTE_BUDDY_TAG,e);
          Toast.makeText(TestActivity.this,"Failure: Could not load dynamic type. (" + e.getMessage() + ")",Toast.LENGTH_LONG).show();
          return;
        }
        try {
          String value=dynamicType.getLoaded().newInstance().toString();
          Toast.makeText(TestActivity.this,FOO.equals(value) ? "Success: Created type and verified instrumentation." : "Failure: Expected different value by instrumented method. (was: " + value + ")",Toast.LENGTH_LONG).show();
        }
 catch (        Throwable e) {
          Log.w(BYTE_BUDDY_TAG,e);
          Toast.makeText(TestActivity.this,"Failure: Could create dynamic instance. (" + e.getMessage() + ")",Toast.LENGTH_LONG).show();
        }
      }
 catch (      Throwable e) {
        Log.w(BYTE_BUDDY_TAG,e);
        Toast.makeText(TestActivity.this,"Failure: Could not create temporary file. (" + e.getMessage() + ")",Toast.LENGTH_LONG).show();
      }
    }
  }
);
}
