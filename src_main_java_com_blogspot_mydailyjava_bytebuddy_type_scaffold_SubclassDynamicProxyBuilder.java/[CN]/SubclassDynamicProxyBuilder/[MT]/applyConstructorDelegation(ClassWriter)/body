{
  for (  Constructor<?> constructor : superClass.getDeclaredConstructors()) {
    if (!Modifier.isPrivate(constructor.getModifiers())) {
      MethodVisitor methodVisitor=classWriter.visitMethod(constructor.getModifiers(),CONSTRUCTOR_METHOD_NAME,Type.getConstructorDescriptor(constructor),null,makeInternalNameArray(Arrays.asList(constructor.getExceptionTypes())));
      methodVisitor.visitCode();
      ByteCodeAppender.Size size=new SuperClassDelegationByteCodeAppender(superClass).apply(methodVisitor,constructor);
      methodVisitor.visitMaxs(size.getOperandStackSize(),size.getLocalVariableSize());
      methodVisitor.visitEnd();
    }
  }
}
