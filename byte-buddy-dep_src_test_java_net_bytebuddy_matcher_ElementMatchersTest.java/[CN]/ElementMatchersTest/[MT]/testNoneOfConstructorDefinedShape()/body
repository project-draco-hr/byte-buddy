{
  Constructor<?> constructor=GenericConstructorType.class.getDeclaredConstructor(Exception.class);
  MethodDescription methodDescription=new TypeDescription.ForLoadedType(GenericConstructorType.Inner.class).getSuperClass().getDeclaredMethods().filter(isConstructor()).getOnly();
  assertThat(ElementMatchers.noneOf(constructor).matches(methodDescription),is(false));
  assertThat(ElementMatchers.definedMethod(ElementMatchers.noneOf(methodDescription.asDefined())).matches(methodDescription),is(false));
  assertThat(ElementMatchers.noneOf(methodDescription.asDefined()).matches(methodDescription.asDefined()),is(false));
  assertThat(ElementMatchers.noneOf(methodDescription.asDefined()).matches(methodDescription),is(true));
  assertThat(ElementMatchers.noneOf(methodDescription).matches(methodDescription.asDefined()),is(true));
}
