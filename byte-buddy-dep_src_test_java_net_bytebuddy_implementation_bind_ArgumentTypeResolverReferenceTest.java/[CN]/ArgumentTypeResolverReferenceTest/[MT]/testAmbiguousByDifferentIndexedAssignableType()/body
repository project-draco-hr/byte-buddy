{
  when(sourceParameterList.size()).thenReturn(2);
  when(leftParameterList.get(0)).thenReturn(dominantTargetParameter);
  when(leftParameterList.get(1)).thenReturn(weakTargetParameter);
  when(left.getTargetParameterIndex(any(ArgumentTypeResolver.ParameterIndexToken.class))).thenAnswer(new TokenAnswer(new int[][]{{0,0},{1,1}}));
  when(rightParameterList.get(0)).thenReturn(weakTargetParameter);
  when(rightParameterList.get(1)).thenReturn(dominantTargetParameter);
  when(right.getTargetParameterIndex(any(ArgumentTypeResolver.ParameterIndexToken.class))).thenAnswer(new TokenAnswer(new int[][]{{0,0},{1,1}}));
  MethodDelegationBinder.AmbiguityResolver.Resolution resolution=ArgumentTypeResolver.INSTANCE.resolve(source,left,right);
  assertThat(resolution,is(MethodDelegationBinder.AmbiguityResolver.Resolution.AMBIGUOUS));
  verify(source,atLeast(1)).getParameters();
  verify(leftMethod,atLeast(1)).getParameters();
  verify(rightMethod,atLeast(1)).getParameters();
  verify(left,atLeast(1)).getTargetParameterIndex(argThat(describesArgument(0)));
  verify(left,atLeast(1)).getTargetParameterIndex(argThat(describesArgument(1)));
  verify(left,never()).getTargetParameterIndex(argThat(not(describesArgument(0,1))));
  verify(right,atLeast(1)).getTargetParameterIndex(argThat(describesArgument(0)));
  verify(right,atLeast(1)).getTargetParameterIndex(argThat(describesArgument(1)));
  verify(right,never()).getTargetParameterIndex(argThat(not(describesArgument(0,1))));
}
