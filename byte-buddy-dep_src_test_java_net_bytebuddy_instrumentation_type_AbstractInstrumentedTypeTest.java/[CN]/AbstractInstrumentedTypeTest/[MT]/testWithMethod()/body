{
  TypeDescription returnType=mock(TypeDescription.class);
  TypeDescription parameterType=mock(TypeDescription.class);
  TypeDescription exceptionType=mock(TypeDescription.class);
  when(returnType.getName()).thenReturn(FOO);
  when(parameterType.getName()).thenReturn(QUX);
  when(parameterType.getStackSize()).thenReturn(StackSize.ZERO);
  when(exceptionType.getName()).thenReturn(BAZ);
  InstrumentedType instrumentedType=makePlainInstrumentedType();
  assertThat(instrumentedType.getDeclaredFields().size(),is(0));
  instrumentedType=instrumentedType.withMethod(BAR,returnType,Arrays.asList(parameterType),Arrays.asList(exceptionType),Opcodes.ACC_PUBLIC);
  assertThat(instrumentedType.getDeclaredMethods().size(),is(1));
  MethodDescription methodDescription=instrumentedType.getDeclaredMethods().get(0);
  assertThat(methodDescription.getReturnType(),is(returnType));
  assertThat(methodDescription.getParameters().size(),is(1));
  assertThat(methodDescription.getParameters().asTypeList(),is(Arrays.asList(parameterType)));
  assertThat(methodDescription.getExceptionTypes().size(),is(1));
  assertThat(methodDescription.getExceptionTypes(),is(Arrays.asList(exceptionType)));
  assertThat(methodDescription.getModifiers(),is(Opcodes.ACC_PUBLIC));
  assertThat(methodDescription.getName(),is(BAR));
}
