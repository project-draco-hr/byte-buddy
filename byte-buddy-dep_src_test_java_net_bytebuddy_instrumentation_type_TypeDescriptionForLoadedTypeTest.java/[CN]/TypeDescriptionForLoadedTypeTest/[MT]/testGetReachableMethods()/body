{
  assertThat(objectType.getReachableMethods().size(),is(Object.class.getDeclaredMethods().length + Object.class.getDeclaredConstructors().length));
  Set<String> signatures=new HashSet<String>();
  for (  Method method : Object.class.getDeclaredMethods()) {
    if (!(Modifier.isAbstract(method.getModifiers()) || Modifier.isPrivate(method.getModifiers()))) {
      signatures.add(method.getName() + Type.getMethodDescriptor(method));
    }
  }
  for (  Method method : Number.class.getDeclaredMethods()) {
    if (!(Modifier.isAbstract(method.getModifiers()) || Modifier.isPrivate(method.getModifiers()))) {
      signatures.add(method.getName() + Type.getMethodDescriptor(method));
    }
  }
  for (  Method method : Comparable.class.getDeclaredMethods()) {
    signatures.add(method.getName() + Type.getMethodDescriptor(method));
  }
  for (  Method method : Integer.class.getDeclaredMethods()) {
    signatures.add(method.getName() + Type.getMethodDescriptor(method));
  }
  for (  Constructor<?> constructor : Integer.class.getDeclaredConstructors()) {
    signatures.add(constructor.getName() + Type.getConstructorDescriptor(constructor));
  }
  assertThat(integerType.getReachableMethods().size(),is(signatures.size()));
}
