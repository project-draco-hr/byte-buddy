{
  TypeDescription typeDescription=typePool.describe(sample.getName());
  assertThat(typeDescription.getDeclaredMethods().filter(isMethod()).size(),is(3));
  assertThat(typeDescription.getDeclaredMethods().filter(isConstructor()).getOnly().isConstructor(),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(isConstructor()).getOnly().represents(sample.getDeclaredConstructor()),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(named(METHOD)).getOnly().getReturnType().represents(type),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(named(METHOD)).getOnly().getParameterTypes().get(0).represents(type),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(named(METHOD)).getOnly().getDeclaringType(),is(typeDescription));
  assertThat(typeDescription.getDeclaredMethods().filter(named(METHOD)).getOnly().getModifiers(),is(Opcodes.ACC_ABSTRACT));
  assertThat(typeDescription.getDeclaredMethods().filter(named(METHOD)).getOnly().isMethod(),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(named(ARRAY_METHOD)).getOnly().getReturnType().isArray(),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(named(ARRAY_METHOD)).getOnly().getReturnType().getComponentType().represents(type),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(named(ARRAY_METHOD)).getOnly().getParameterTypes().get(0).isArray(),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(named(ARRAY_METHOD)).getOnly().getParameterTypes().get(0).getComponentType().represents(type),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(named(NESTED_ARRAY)).getOnly().getReturnType().isArray(),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(named(NESTED_ARRAY)).getOnly().getReturnType().getComponentType().isArray(),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(named(NESTED_ARRAY)).getOnly().getReturnType().getComponentType().getComponentType().represents(type),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(named(NESTED_ARRAY)).getOnly().getParameterTypes().get(0).isArray(),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(named(NESTED_ARRAY)).getOnly().getParameterTypes().get(0).getComponentType().isArray(),is(true));
  assertThat(typeDescription.getDeclaredMethods().filter(named(NESTED_ARRAY)).getOnly().getParameterTypes().get(0).getComponentType().getComponentType().represents(type),is(true));
}
