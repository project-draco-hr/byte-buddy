{
  TypeDescription proxyType=instrumentationContext.register(new TypeProxy(proxiedType,instrumentedType,ignoreFinalizer));
  return new Compound(MethodInvocation.invoke(proxyType.getDeclaredMethods().filter(named(REFLECTION_METHOD).and(takesArguments(0))).getOnly()),Duplication.SINGLE,MethodVariableAccess.forType(instrumentedType).loadFromIndex(0),FieldAccess.forField(proxyType.getDeclaredFields().named(INSTANCE_FIELD)).putter()).apply(methodVisitor,instrumentationContext);
}
