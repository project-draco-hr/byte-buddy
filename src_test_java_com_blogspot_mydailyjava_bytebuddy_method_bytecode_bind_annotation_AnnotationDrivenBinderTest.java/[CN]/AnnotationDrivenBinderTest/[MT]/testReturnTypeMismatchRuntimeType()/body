{
  when(assigner.assign(any(Class.class),any(Class.class),anyBoolean())).thenReturn(IllegalAssignment.INSTANCE);
  doReturn(Object.class).when(source).getReturnType();
  doReturn(Void.class).when(target).getReturnType();
  RuntimeType runtimeType=mock(RuntimeType.class);
  doReturn(RuntimeType.class).when(runtimeType).annotationType();
  when(target.getAnnotations()).thenReturn(new Annotation[]{runtimeType});
  MethodDelegationBinder methodDelegationBinder=new AnnotationDrivenBinder(Collections.<AnnotationDrivenBinder.ArgumentBinder<?>>emptyList(),defaultProvider,assigner);
  assertThat(methodDelegationBinder.bind(typeDescription,source,target).isValid(),is(false));
  verify(assigner).assign(Void.class,Object.class,true);
  verifyNoMoreInteractions(assigner);
  verify(source,atLeast(1)).getReturnType();
  verify(target,atLeast(1)).getReturnType();
  verifyZeroInteractions(defaultProvider);
}
