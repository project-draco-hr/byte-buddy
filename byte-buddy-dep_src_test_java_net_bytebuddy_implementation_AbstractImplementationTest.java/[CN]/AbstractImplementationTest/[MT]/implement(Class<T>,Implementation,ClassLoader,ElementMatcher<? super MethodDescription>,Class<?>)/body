{
  assertThat(target.isInterface(),CoreMatchers.is(false));
  for (  Class<?> anInterface : interfaces) {
    assertThat(anInterface.isInterface(),CoreMatchers.is(true));
  }
  return new SubclassDynamicTypeBuilder<T>(ClassFileVersion.forCurrentJavaVersion(),new NamingStrategy.SuffixingRandom(SUFFIX),new AuxiliaryType.NamingStrategy.SuffixingRandom(SUFFIX),Implementation.Context.Default.Factory.INSTANCE,new TypeDescription.ForLoadedType(target),new TypeList.ForLoadedType(Arrays.asList(interfaces)),Opcodes.ACC_PUBLIC,TypeAttributeAppender.NoOp.INSTANCE,isSynthetic(),new ClassVisitorWrapper.Compound(),new FieldRegistry.Default(),new MethodRegistry.Default(),MethodGraph.Compiler.DEFAULT,FieldAttributeAppender.NoOp.INSTANCE,MethodAttributeAppender.NoOp.INSTANCE,ConstructorStrategy.Default.IMITATE_SUPER_TYPE).invokable(targetMethods).intercept(implementation).make().load(classLoader,ClassLoadingStrategy.Default.WRAPPER);
}
