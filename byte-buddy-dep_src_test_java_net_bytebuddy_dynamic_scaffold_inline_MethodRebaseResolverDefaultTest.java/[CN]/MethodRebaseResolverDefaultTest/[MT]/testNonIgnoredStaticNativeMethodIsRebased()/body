{
  when(methodDescription.isStatic()).thenReturn(true);
  when(methodDescription.isNative()).thenReturn(true);
  MethodRebaseResolver.Resolution resolution=new MethodRebaseResolver.Default(methodMatcher,placeholderType,methodNameTransformer).resolve(methodDescription);
  assertThat(resolution.isRebased(),is(true));
  assertThat(resolution.getResolvedMethod().getInternalName(),is(BAR));
  assertThat(resolution.getResolvedMethod().getModifiers(),is(MethodRebaseResolver.REBASED_METHOD_MODIFIER | Opcodes.ACC_NATIVE | Opcodes.ACC_STATIC));
  assertThat(resolution.getResolvedMethod().getDeclaringType(),is(instrumentedType));
  assertThat(resolution.getResolvedMethod().getParameterTypes(),is((TypeList)new TypeList.Empty()));
  assertThat(resolution.getResolvedMethod().getReturnType(),is(returnType));
  assertThat(resolution.getAdditionalArguments().isValid(),is(true));
  StackManipulation.Size size=resolution.getAdditionalArguments().apply(methodVisitor,instrumentationContext);
  assertThat(size.getSizeImpact(),is(0));
  assertThat(size.getMaximalSize(),is(0));
  verifyZeroInteractions(methodVisitor);
  verifyZeroInteractions(instrumentationContext);
}
