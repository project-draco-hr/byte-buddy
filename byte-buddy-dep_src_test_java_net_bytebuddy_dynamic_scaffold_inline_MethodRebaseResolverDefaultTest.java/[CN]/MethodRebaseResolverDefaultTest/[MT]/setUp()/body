{
  when(methodDescription.asDefined()).thenReturn(methodDescription);
  when(methodDescription.getParameters()).thenReturn(new ParameterList.Empty<ParameterDescription.InDefinedShape>());
  when(methodDescription.getReturnType()).thenReturn(TypeDescription.Generic.VOID);
  when(methodDescription.getInternalName()).thenReturn(FOO);
  when(methodDescription.asToken(ElementMatchers.is(instrumentedType))).thenReturn(token);
  when(methodDescription.asSignatureToken()).thenReturn(signatureToken);
  when(instrumentedType.getDeclaredMethods()).thenReturn(new MethodList.Explicit<MethodDescription.InDefinedShape>(methodDescription));
  when(otherMethod.asToken(ElementMatchers.is(instrumentedType))).thenReturn(otherToken);
  when(methodNameTransformer.transform(methodDescription)).thenReturn(BAR);
  when(auxiliaryTypeNamingStrategy.name(instrumentedType)).thenReturn(QUX);
  when(classFileVersion.getMinorMajorVersion()).thenReturn(Opcodes.V1_6);
}
