{
  List<Entry> prefixedEntries=new LinkedList<Entry>();
  Set<Prepareable> prepareables=new HashSet<Prepareable>(entries.size());
  for (  Entry entry : entries) {
    if (prepareables.add(entry.getPrepareable())) {
      MethodList beforePreparation=instrumentedType.getDeclaredMethods();
      instrumentedType=entry.getPrepareable().prepare(instrumentedType);
      if (beforePreparation.size() < instrumentedType.getDeclaredMethods().size()) {
        prefixedEntries.add(new Entry(new ListDifferenceMethodMatcher(beforePreparation,instrumentedType.getDeclaredMethods()),entry.getPrepareable(),MethodAttributeAppender.NoOp.INSTANCE));
      }
    }
  }
  return new Prepared(instrumentedType.detach(),instrumentedType.getLoadedTypeInitializer(),instrumentedType.getTypeInitializer(),enforcedMethods.manifest(instrumentedType),join(prefixedEntries,entries));
}
