{
  MethodLookupEngine.Finding finding=methodLookupEngine.process(instrumentedType);
  Map<MethodDescription,Entry> instrumentations=new HashMap<MethodDescription,Entry>();
  Set<Prepareable> prepareables=new HashSet<Prepareable>(entries.size());
  int helperMethodIndex=instrumentedType.getDeclaredMethods().size();
  for (  MethodDescription methodDescription : finding.getInvokableMethods().filter(methodFilter)) {
    for (    Entry entry : entries) {
      if (entry.matches(methodDescription,instrumentedType)) {
        if (prepareables.add(entry.getPrepareable())) {
          instrumentedType=entry.getPrepareable().prepare(instrumentedType);
          MethodList helperMethods=instrumentedType.getDeclaredMethods();
          for (          MethodDescription helperMethod : helperMethods.subList(helperMethodIndex,helperMethods.size())) {
            instrumentations.put(helperMethod,entry);
          }
          helperMethodIndex=helperMethods.size();
        }
        instrumentations.put(methodDescription,entry);
      }
    }
  }
  return new Prepared(instrumentations,instrumentedType.detach(),instrumentedType.getLoadedTypeInitializer(),instrumentedType.getTypeInitializer(),finding);
}
