{
  try {
    return new Factory.ForJava9CapableVm(new ByteBuddy().subclass(ExecutingTransformer.class).name(ExecutingTransformer.class.getName() + "$ByteBuddy$ModuleSupport").method(named("transform").and(takesArgument(0,JavaType.MODULE.load()))).intercept(MethodCall.invoke(ExecutingTransformer.class.getDeclaredMethod("transform",Object.class,ClassLoader.class,String.class,Class.class,ProtectionDomain.class,byte[].class)).onSuper().withAllArguments()).make().load(ExecutingTransformer.class.getClassLoader(),ClassLoadingStrategy.Default.WRAPPER_PERSISTENT.with(ExecutingTransformer.class.getProtectionDomain())).getLoaded().getDeclaredConstructor(ByteBuddy.class,Listener.class,PoolStrategy.class,TypeStrategy.class,LocationStrategy.class,NativeMethodStrategy.class,InitializationStrategy.class,BootstrapInjectionStrategy.class,DescriptionStrategy.class,FallbackStrategy.class,RawMatcher.class,Transformation.class));
  }
 catch (  Exception ignored) {
    return Factory.ForLegacyVm.INSTANCE;
  }
}
