{
  String binaryTypeName=internalTypeName.replace('/','.');
  try {
    BinaryLocator.Initialized initialized=binaryLocator.initialize(binaryTypeName,binaryRepresentation,classLoader);
    TypeDescription typeDescription=initialized.getTypePool().describe(binaryTypeName).resolve();
    return transformation.resolve(typeDescription,classLoader,classBeingRedefined,protectionDomain).apply(initializationStrategy,initialized,typeStrategy,byteBuddy,nativeMethodStrategy.resolve(),bootstrapInjectionStrategy,accessControlContext,listener);
  }
 catch (  Throwable throwable) {
    listener.onError(binaryTypeName,throwable);
    return NO_TRANSFORMATION;
  }
 finally {
    listener.onComplete(binaryTypeName);
  }
}
