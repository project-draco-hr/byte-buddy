{
  if (internalTypeName == null) {
    return NO_TRANSFORMATION;
  }
  String binaryTypeName=internalTypeName.replace('/','.');
  try {
    ClassFileLocator classFileLocator=ClassFileLocator.Simple.of(binaryTypeName,binaryRepresentation,binaryLocator.classFileLocator(classLoader));
    return transformation.resolve(classBeingRedefined == null ? binaryLocator.typePool(classFileLocator,classLoader).describe(binaryTypeName).resolve() : new TypeDescription.ForLoadedType(classBeingRedefined),classLoader,classBeingRedefined,protectionDomain,ignoredTypes).apply(initializationStrategy,classFileLocator,typeStrategy,byteBuddy,nativeMethodStrategy,bootstrapInjectionStrategy,accessControlContext,listener);
  }
 catch (  Throwable throwable) {
    listener.onError(binaryTypeName,throwable);
    return NO_TRANSFORMATION;
  }
 finally {
    listener.onComplete(binaryTypeName);
  }
}
