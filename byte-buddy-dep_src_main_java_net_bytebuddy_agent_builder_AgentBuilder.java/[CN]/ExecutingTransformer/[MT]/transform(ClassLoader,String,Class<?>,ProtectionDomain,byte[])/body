{
  String binaryTypeName=internalTypeName.replace('/','.');
  try {
    BinaryLocator.Initialized initialized=binaryLocator.initialize(classLoader,binaryTypeName,binaryRepresentation);
    try {
      TypeDescription typeDescription=initialized.getTypePool().describe(binaryTypeName).resolve();
      return transformation.resolve(typeDescription,classLoader,classBeingRedefined,protectionDomain).apply(initializationStrategy,initialized,typeStrategy,byteBuddy,nativeMethodStrategy.resolve(),bootstrapInjectionStrategy,accessControlContext,listener);
    }
 catch (    Throwable throwable) {
      listener.onError(binaryTypeName,throwable);
      return NO_TRANSFORMATION;
    }
 finally {
      initialized.getTypePool().clear();
    }
  }
  finally {
    listener.onComplete(binaryTypeName);
  }
}
