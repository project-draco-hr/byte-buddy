{
  if (internalTypeName == null) {
    return NO_TRANSFORMATION;
  }
  String typeName=internalTypeName.replace('/','.');
  try {
    ClassFileLocator classFileLocator=ClassFileLocator.Simple.of(typeName,binaryRepresentation,locationStrategy.classFileLocator(classLoader,module));
    TypePool typePool=poolStrategy.typePool(classFileLocator,classLoader);
    return transformation.resolve(descriptionStrategy.apply(typeName,classBeingRedefined,typePool),classLoader,module,classBeingRedefined,protectionDomain,typePool,ignoredTypeMatcher).apply(initializationStrategy,classFileLocator,typeStrategy,byteBuddy,nativeMethodStrategy,bootstrapInjectionStrategy,accessControlContext,listener);
  }
 catch (  Throwable throwable) {
    listener.onError(typeName,classLoader,module,throwable);
    return NO_TRANSFORMATION;
  }
 finally {
    listener.onComplete(typeName,classLoader,module);
  }
}
