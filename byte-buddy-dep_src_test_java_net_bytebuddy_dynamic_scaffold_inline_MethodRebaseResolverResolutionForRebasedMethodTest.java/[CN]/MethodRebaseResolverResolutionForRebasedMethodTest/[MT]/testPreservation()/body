{
  MethodRebaseResolver.Resolution resolution=new MethodRebaseResolver.Resolution.ForRebasedMethod(methodDescription,methodNameTransformer);
  assertThat(resolution.isRebased(),is(true));
  assertThat(resolution.getResolvedMethod().getDeclaringType(),is(typeDescription));
  assertThat(resolution.getResolvedMethod().getInternalName(),is(QUX));
  assertThat(resolution.getResolvedMethod().getModifiers(),is(MethodRebaseResolver.REBASED_METHOD_MODIFIER));
  assertThat(resolution.getResolvedMethod().getReturnType(),is(returnType));
  assertThat(resolution.getResolvedMethod().getParameters(),is(ParameterList.Explicit.latent(resolution.getResolvedMethod(),Collections.singletonList(parameterType))));
  StackManipulation.Size size=resolution.getAdditionalArguments().apply(methodVisitor,instrumentationContext);
  assertThat(size.getSizeImpact(),is(0));
  assertThat(size.getMaximalSize(),is(0));
  verifyZeroInteractions(methodVisitor);
  verifyZeroInteractions(instrumentationContext);
}
