{
  when(methodDescription.getDeclaringType()).thenReturn(typeDescription);
  when(methodDescription.getReturnType()).thenReturn(returnType);
  when(methodDescription.getInternalName()).thenReturn(FOO);
  when(methodDescription.getDescriptor()).thenReturn(BAZ);
  when(typeDescription.getInternalName()).thenReturn(BAR);
  when(typeDescription.getDescriptor()).thenReturn(BAR);
  when(typeDescription.isClassType()).thenReturn(true);
  when(methodNameTransformer.transform(methodDescription)).thenReturn(QUX);
  when(otherMethodNameTransformer.transform(methodDescription)).thenReturn(FOO + BAR);
  when(parameterType.getStackSize()).thenReturn(StackSize.ZERO);
  when(methodDescription.getParameters()).thenReturn(new ParameterList.Explicit.ForTypes(methodDescription,Collections.singletonList(parameterType)));
  when(returnType.asErasure()).thenReturn(returnType);
  when(returnType.accept(any(GenericTypeDescription.Visitor.class))).thenReturn(returnType);
  when(parameterType.asErasure()).thenReturn(parameterType);
  when(parameterType.accept(any(GenericTypeDescription.Visitor.class))).thenReturn(parameterType);
}
