{
  for (  ModifierContributor modifierContributor : AuxiliaryType.DEFAULT_TYPE_MODIFIER) {
    modifiers=modifiers | modifierContributor.getMask();
  }
  foo=new TypeDescription.ForLoadedType(Foo.class);
  fooMethods=MethodGraph.Compiler.DEFAULT.compile(foo).listNodes().asMethodList().filter(isVirtual().and(not(isFinal())).and(not(isDefaultFinalizer())));
  when(proxyMethod.getParameters()).thenReturn(new ParameterList.Explicit.ForTypes(proxyMethod,Arrays.asList(foo,foo,foo)));
  when(proxyMethod.getDeclaringType()).thenReturn(foo);
  when(proxyMethod.getInternalName()).thenReturn(FOO);
  when(proxyMethod.getDescriptor()).thenReturn(FOO);
  when(proxyMethod.getReturnType()).thenReturn(TypeDescription.OBJECT);
  when(proxyMethod.asDefined()).thenReturn(proxyMethod);
}
