{
  GenericTypeDescription original=TypeDefinition.Sort.describe(Foo.Inner.class.getDeclaredField(FOO).getGenericType());
  GenericTypeDescription detached=original.accept(new GenericTypeDescription.Visitor.Substitutor.ForDetachment(ElementMatchers.is(Foo.Inner.class)));
  assertThat(detached,not(sameInstance(original)));
  assertThat(detached.getSort(),is(TypeDefinition.Sort.PARAMETERIZED));
  assertThat(detached.asErasure(),is(TargetType.DESCRIPTION));
  assertThat(detached.getParameters().size(),is(4));
  assertThat(detached.getParameters().get(0).getSort(),is(TypeDefinition.Sort.VARIABLE_DETACHED));
  assertThat(detached.getParameters().get(0).getSymbol(),is("T"));
  assertThat(detached.getParameters().get(0).getUpperBounds().size(),is(1));
  assertThat(detached.getParameters().get(0).getUpperBounds().getOnly().getSort(),is(TypeDefinition.Sort.NON_GENERIC));
  assertThat(detached.getParameters().get(0).getUpperBounds().getOnly().asErasure().represents(Object.class),is(true));
  assertThat(detached.getParameters().get(1).getSort(),is(TypeDefinition.Sort.NON_GENERIC));
  assertThat(detached.getParameters().get(1).asErasure().represents(String.class),is(true));
  assertThat(detached.getParameters().get(2).getSort(),is(TypeDefinition.Sort.VARIABLE_DETACHED));
  assertThat(detached.getParameters().get(2).getSymbol(),is("U"));
  assertThat(detached.getParameters().get(2).getUpperBounds().size(),is(1));
  assertThat(detached.getParameters().get(2).getUpperBounds().getOnly(),sameInstance(detached.getParameters().get(0)));
  assertThat(detached.getParameters().get(3).getSort(),is(TypeDefinition.Sort.PARAMETERIZED));
  assertThat(detached.getParameters().get(3).getParameters().size(),is(1));
  assertThat(detached.getParameters().get(3).getParameters().getOnly().getSort(),is(TypeDefinition.Sort.VARIABLE_DETACHED));
  assertThat(detached.getParameters().get(3).getParameters().getOnly().getSymbol(),is("S"));
  assertThat(detached.getParameters().get(3).getParameters().getOnly().getUpperBounds().size(),is(1));
  assertThat(detached.getParameters().get(3).getParameters().getOnly().getUpperBounds().getOnly().getSort(),is(TypeDefinition.Sort.NON_GENERIC));
  assertThat(detached.getParameters().get(3).getParameters().getOnly().getUpperBounds().getOnly().asErasure().represents(CharSequence.class),is(true));
  assertThat(detached.getOwnerType(),notNullValue(GenericTypeDescription.class));
  assertThat(detached.getOwnerType().getSort(),is(TypeDefinition.Sort.PARAMETERIZED));
  assertThat(detached.getOwnerType().getParameters().size(),is(1));
  assertThat(detached.getOwnerType().getParameters().getOnly().getSort(),is(TypeDefinition.Sort.VARIABLE_DETACHED));
  assertThat(detached.getOwnerType().getParameters().getOnly().getSymbol(),is("T"));
  assertThat(detached.getOwnerType().getParameters().getOnly(),sameInstance(detached.getParameters().get(0)));
}
