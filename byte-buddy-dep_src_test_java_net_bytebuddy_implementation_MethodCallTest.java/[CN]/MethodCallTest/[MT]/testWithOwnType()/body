{
  DynamicType.Loaded<MethodCallWithOwnType> loaded=implement(MethodCallWithOwnType.class,MethodCall.invokeSuper().withOwnType());
  assertThat(loaded.getLoadedAuxiliaryTypes().size(),is(0));
  assertThat(loaded.getLoaded().getDeclaredMethods().length,is(1));
  assertThat(loaded.getLoaded().getDeclaredMethod(FOO,Class.class),not(nullValue(Method.class)));
  assertThat(loaded.getLoaded().getDeclaredConstructors().length,is(1));
  assertThat(loaded.getLoaded().getDeclaredFields().length,is(0));
  MethodCallWithOwnType instance=loaded.getLoaded().newInstance();
  assertNotEquals(MethodCallWithThis.class,instance.getClass());
  assertThat(instance,instanceOf(MethodCallWithOwnType.class));
  assertEquals(loaded.getLoaded(),instance.foo(null));
}
