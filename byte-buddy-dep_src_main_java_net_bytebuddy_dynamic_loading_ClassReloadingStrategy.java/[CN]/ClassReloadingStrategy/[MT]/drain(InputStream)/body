{
  List<byte[]> previousBytes=new LinkedList<byte[]>();
  byte[] currentArray=new byte[BUFFER_SIZE];
  int currentIndex=0;
  int currentRead;
  do {
    currentRead=inputStream.read(currentArray,currentIndex,BUFFER_SIZE);
    currentIndex+=currentRead;
    if (currentIndex == BUFFER_SIZE) {
      previousBytes.add(currentArray);
      currentArray=new byte[BUFFER_SIZE];
    }
  }
 while (currentRead != END_OF_STREAM);
  byte[] result=new byte[previousBytes.size() * BUFFER_SIZE + currentIndex];
  int arrayIndex=0;
  for (  byte[] previousByte : previousBytes) {
    System.arraycopy(previousByte,FIRST_INDEX,result,arrayIndex++ * BUFFER_SIZE,BUFFER_SIZE);
  }
  System.arraycopy(currentArray,FIRST_INDEX,result,arrayIndex * BUFFER_SIZE,currentIndex);
  return result;
}
