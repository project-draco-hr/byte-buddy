{
  Map<Class<?>,ClassDefinition> classDefinitions=new ConcurrentHashMap<Class<?>,ClassDefinition>(type.length);
  for (  Class<?> aType : type) {
    classDefinitions.put(aType,new ClassDefinition(aType,ClassFileLocator.ForClassLoader.read(aType).resolve()));
  }
  try {
    engine.apply(instrumentation,classDefinitions);
  }
 catch (  ClassNotFoundException exception) {
    throw new IllegalArgumentException("Cannot locate types " + Arrays.toString(type),exception);
  }
catch (  UnmodifiableClassException exception) {
    throw new IllegalStateException("Cannot reset types " + Arrays.toString(type),exception);
  }
  return this;
}
