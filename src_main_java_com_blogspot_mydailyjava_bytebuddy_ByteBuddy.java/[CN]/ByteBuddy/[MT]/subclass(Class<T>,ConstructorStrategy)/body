{
  Class<?> actualSuperType=superType;
  List<Class<?>> interfaceTypes=this.interfaceTypes;
  if (nonNull(superType).isInterface()) {
    actualSuperType=Object.class;
    interfaceTypes=join(superType,interfaceTypes);
  }
  return new LoadedSuperclassDynamicTypeBuilder<T>(classFormatVersion,namingStrategy,actualSuperType,interfaceTypes,Opcodes.ACC_PUBLIC | Opcodes.ACC_SUPER,TypeAttributeAppender.NoOp.INSTANCE,ignoredMethods,classVisitorWrapperChain,new FieldRegistry.Default(),methodRegistry,defaultFieldAttributeAppenderFactory,defaultMethodAttributeAppenderFactory,nonNull(constructorStrategy));
}
