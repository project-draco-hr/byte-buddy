{
  if (methodDescription.isTypeInitializer()) {
    return is(methodDescription);
  }
  TypeList parameterTypes=methodDescription.getParameterTypes();
  List<ElementMatcher<TypeDescription>> matchers=new ArrayList<ElementMatcher<TypeDescription>>(parameterTypes.size());
  for (  TypeDescription typeDescription : parameterTypes) {
    matchers.add(isSuperTypeOf(typeDescription));
  }
  return returns(isSubTypeOf(methodDescription.getReturnType())).and(takesArguments(new ListOneToOneMatcher<TypeDescription>(matchers))).and(named(methodDescription.getName()));
}
