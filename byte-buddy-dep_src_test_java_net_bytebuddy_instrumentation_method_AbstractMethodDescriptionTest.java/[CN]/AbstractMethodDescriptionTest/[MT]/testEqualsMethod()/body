{
  MethodDescription identical=describe(firstMethod);
  assertThat(identical,equalTo(identical));
  assertThat(describe(firstMethod),equalTo(describe(firstMethod)));
  assertThat(describe(firstMethod),not(equalTo(describe(secondMethod))));
  assertThat(describe(firstMethod),not(equalTo(describe(thirdMethod))));
  assertThat(describe(firstMethod),not(equalTo(describe(firstConstructor))));
  assertThat(describe(firstMethod),not(equalTo(describe(secondConstructor))));
  assertThat(describe(firstMethod),equalTo((MethodDescription)new MethodDescription.ForLoadedMethod(firstMethod)));
  assertThat(describe(firstMethod),not(equalTo((MethodDescription)new MethodDescription.ForLoadedMethod(secondMethod))));
  assertThat(describe(firstMethod),not(equalTo((MethodDescription)new MethodDescription.ForLoadedMethod(thirdMethod))));
  assertThat(describe(firstMethod),not(equalTo((MethodDescription)new MethodDescription.ForLoadedConstructor(firstConstructor))));
  assertThat(describe(firstMethod),not(equalTo((MethodDescription)new MethodDescription.ForLoadedConstructor(secondConstructor))));
  MethodDescription equalMethod=mock(MethodDescription.class);
  when(equalMethod.getInternalName()).thenReturn(firstMethod.getName());
  when(equalMethod.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(firstMethod.getDeclaringClass()));
  when(equalMethod.getReturnType()).thenReturn(new TypeDescription.ForLoadedType(firstMethod.getReturnType()));
  when(equalMethod.getParameterTypes()).thenReturn(new TypeList.ForLoadedType(firstMethod.getParameterTypes()));
  assertThat(describe(firstMethod),equalTo(equalMethod));
  MethodDescription equalMethodButName=mock(MethodDescription.class);
  when(equalMethodButName.getInternalName()).thenReturn(secondMethod.getName());
  when(equalMethodButName.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(firstMethod.getDeclaringClass()));
  when(equalMethodButName.getReturnType()).thenReturn(new TypeDescription.ForLoadedType(firstMethod.getReturnType()));
  when(equalMethodButName.getParameterTypes()).thenReturn(new TypeList.ForLoadedType(firstMethod.getParameterTypes()));
  assertThat(describe(firstMethod),not(equalTo(equalMethodButName)));
  MethodDescription equalMethodButReturnType=mock(MethodDescription.class);
  when(equalMethodButReturnType.getInternalName()).thenReturn(firstMethod.getName());
  when(equalMethodButReturnType.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(Object.class));
  when(equalMethodButReturnType.getReturnType()).thenReturn(new TypeDescription.ForLoadedType(firstMethod.getReturnType()));
  when(equalMethodButReturnType.getParameterTypes()).thenReturn(new TypeList.ForLoadedType(firstMethod.getParameterTypes()));
  assertThat(describe(firstMethod),not(equalTo(equalMethodButReturnType)));
  MethodDescription equalMethodButDeclaringType=mock(MethodDescription.class);
  when(equalMethodButDeclaringType.getInternalName()).thenReturn(firstMethod.getName());
  when(equalMethodButDeclaringType.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(firstMethod.getDeclaringClass()));
  when(equalMethodButDeclaringType.getReturnType()).thenReturn(new TypeDescription.ForLoadedType(secondMethod.getReturnType()));
  when(equalMethodButDeclaringType.getParameterTypes()).thenReturn(new TypeList.ForLoadedType(firstMethod.getParameterTypes()));
  assertThat(describe(firstMethod),not(equalTo(equalMethodButDeclaringType)));
  MethodDescription equalMethodButParameterTypes=mock(MethodDescription.class);
  when(equalMethodButParameterTypes.getInternalName()).thenReturn(firstMethod.getName());
  when(equalMethodButParameterTypes.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(firstMethod.getDeclaringClass()));
  when(equalMethodButParameterTypes.getReturnType()).thenReturn(new TypeDescription.ForLoadedType(firstMethod.getReturnType()));
  when(equalMethodButParameterTypes.getParameterTypes()).thenReturn(new TypeList.ForLoadedType(secondMethod.getParameterTypes()));
  assertThat(describe(firstMethod),not(equalTo(equalMethodButParameterTypes)));
  assertThat(describe(firstMethod),not(equalTo(new Object())));
  assertThat(describe(firstMethod),not(equalTo(null)));
}
