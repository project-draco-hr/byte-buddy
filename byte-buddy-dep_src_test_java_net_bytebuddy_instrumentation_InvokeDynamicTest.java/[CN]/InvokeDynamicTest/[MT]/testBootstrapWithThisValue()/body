{
  Class<?> type=classLoader.loadClass(ARGUMENT_BOOTSTRAP);
  TypeDescription typeDescription=new TypeDescription.ForLoadedType(type);
  DynamicType.Loaded<Simple> dynamicType=instrument(Simple.class,InvokeDynamic.bootstrap(typeDescription.getDeclaredMethods().filter(named(BOOTSTRAP)).getOnly()).invoke(BAZ,String.class).withoutImplicitArguments().withThis(Object.class),classLoader,isDeclaredBy(Simple.class));
  assertThat(dynamicType.getLoaded().getDeclaredFields().length,is(0));
  Simple simple=dynamicType.getLoaded().newInstance();
  assertThat(simple.foo(),is(simple.toString()));
}
