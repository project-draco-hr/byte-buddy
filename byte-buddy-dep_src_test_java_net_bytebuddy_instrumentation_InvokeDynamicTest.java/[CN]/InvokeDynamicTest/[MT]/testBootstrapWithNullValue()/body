{
  Class<?> type=classLoader.loadClass(ARGUMENT_BOOTSTRAP);
  TypeDescription typeDescription=new TypeDescription.ForLoadedType(type);
  DynamicType.Loaded<Simple> dynamicType=instrument(Simple.class,InvokeDynamic.bootstrap(typeDescription.getDeclaredMethods().filter(named(BOOTSTRAP)).getOnly()).invoke(QUX,String.class).withoutImplicitArguments().withNullValue(String.class),classLoader,isDeclaredBy(Simple.class));
  assertThat(dynamicType.getLoaded().getDeclaredFields().length,is(0));
  assertThat(dynamicType.getLoaded().newInstance().foo(),nullValue(String.class));
}
