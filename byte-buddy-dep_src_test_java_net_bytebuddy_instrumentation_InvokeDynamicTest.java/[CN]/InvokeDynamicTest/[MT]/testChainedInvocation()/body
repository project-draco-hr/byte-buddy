{
  Class<?> type=classLoader.loadClass(ARGUMENT_BOOTSTRAP);
  TypeDescription typeDescription=new TypeDescription.ForLoadedType(type);
  DynamicType.Loaded<SimpleWithArgument> dynamicType=instrument(SimpleWithArgument.class,InvokeDynamic.bootstrap(typeDescription.getDeclaredMethods().filter(named(BOOTSTRAP)).getOnly()).invoke(QUX,String.class).withArgument(0).andThen(FixedValue.value(BAZ)),classLoader,isDeclaredBy(SimpleWithArgument.class));
  assertThat(dynamicType.getLoaded().getDeclaredFields().length,is(0));
  assertThat(dynamicType.getLoaded().newInstance().foo(FOO),is(BAZ));
}
