{
  super.visitCode();
  mv.visitMethodInsn(Opcodes.INVOKESTATIC,"java/lang/Thread","currentThread","()Ljava/lang/Thread;",false);
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,"java/lang/Thread","getId","()J",false);
  mv.visitVarInsn(Opcodes.LSTORE,2);
  mv.visitInsn(Opcodes.ICONST_3);
  mv.visitIntInsn(Opcodes.NEWARRAY,Opcodes.T_LONG);
  int index=0;
  for (  long id : this.id) {
    mv.visitInsn(Opcodes.DUP);
    mv.visitLdcInsn(index++);
    mv.visitLdcInsn(id);
    mv.visitInsn(Opcodes.LASTORE);
  }
  mv.visitVarInsn(Opcodes.ASTORE,4);
  mv.visitVarInsn(Opcodes.ALOAD,4);
  mv.visitInsn(Opcodes.ARRAYLENGTH);
  mv.visitVarInsn(Opcodes.ISTORE,5);
  mv.visitInsn(Opcodes.ICONST_0);
  mv.visitVarInsn(Opcodes.ISTORE,6);
  Label startOfLoop=new Label();
  mv.visitLabel(startOfLoop);
  mv.visitFrame(Opcodes.F_FULL,6,new Object[]{"java/security/AccessControlContext","java/security/Permission",Opcodes.LONG,"[J",Opcodes.INTEGER,Opcodes.INTEGER},0,new Object[]{});
  mv.visitVarInsn(Opcodes.ILOAD,6);
  mv.visitVarInsn(Opcodes.ILOAD,5);
  Label endOfLoop=new Label();
  mv.visitJumpInsn(Opcodes.IF_ICMPGE,endOfLoop);
  mv.visitVarInsn(Opcodes.ALOAD,4);
  mv.visitVarInsn(Opcodes.ILOAD,6);
  mv.visitInsn(Opcodes.LALOAD);
  mv.visitVarInsn(Opcodes.LLOAD,2);
  mv.visitInsn(Opcodes.LCMP);
  Label noWhiteList=new Label();
  mv.visitJumpInsn(Opcodes.IFNE,noWhiteList);
  mv.visitInsn(Opcodes.RETURN);
  mv.visitLabel(noWhiteList);
  mv.visitFrame(Opcodes.F_SAME,0,null,0,null);
  mv.visitIincInsn(6,1);
  mv.visitJumpInsn(Opcodes.GOTO,startOfLoop);
  mv.visitLabel(endOfLoop);
  mv.visitFrame(Opcodes.F_FULL,2,new Object[]{"java/security/AccessControlContext","java/security/Permission"},0,new Object[]{});
}
