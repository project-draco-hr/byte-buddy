{
  MethodDescription additionalMethod=new MethodDescription.Latent(internalName,this,returnType,parameterTypes,modifiers,exceptionTypes);
  if (methodDescriptions.contains(additionalMethod)) {
    throw new IllegalArgumentException("Method " + additionalMethod + " is already defined on "+ this);
  }
  return new SubclassInstrumentedType(classFileVersion,superClass,interfaces,this.modifiers,name,typeVariables,fieldDescriptions,join(methodDescriptions,additionalMethod),loadedTypeInitializer,typeInitializer);
}
