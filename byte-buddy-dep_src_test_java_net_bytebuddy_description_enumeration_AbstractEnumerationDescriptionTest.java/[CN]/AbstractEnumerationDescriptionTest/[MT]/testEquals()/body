{
  EnumerationDescription identical=describe(Sample.FIRST);
  assertThat(identical,is(identical));
  EnumerationDescription equalFirst=mock(EnumerationDescription.class);
  when(equalFirst.getValue()).thenReturn(Sample.FIRST.name());
  when(equalFirst.getEnumerationType()).thenReturn(new TypeDescription.ForLoadedType(Sample.class));
  assertThat(describe(Sample.FIRST),is(equalFirst));
  EnumerationDescription equalSecond=mock(EnumerationDescription.class);
  when(equalSecond.getValue()).thenReturn(Sample.SECOND.name());
  when(equalSecond.getEnumerationType()).thenReturn(new TypeDescription.ForLoadedType(Sample.class));
  assertThat(describe(Sample.SECOND),is(equalSecond));
  EnumerationDescription equalFirstTypeOnly=mock(EnumerationDescription.class);
  when(equalFirstTypeOnly.getValue()).thenReturn(Sample.SECOND.name());
  when(equalFirstTypeOnly.getEnumerationType()).thenReturn(new TypeDescription.ForLoadedType(Sample.class));
  assertThat(describe(Sample.FIRST),not(equalFirstTypeOnly));
  EnumerationDescription equalFirstNameOnly=mock(EnumerationDescription.class);
  when(equalFirstNameOnly.getValue()).thenReturn(Sample.FIRST.name());
  when(equalFirstNameOnly.getEnumerationType()).thenReturn(new TypeDescription.ForLoadedType(Other.class));
  assertThat(describe(Sample.FIRST),not(equalFirstNameOnly));
  assertThat(describe(Sample.FIRST),not(equalSecond));
  assertThat(describe(Sample.FIRST),not(new Object()));
  assertThat(describe(Sample.FIRST),not(equalTo(null)));
}
