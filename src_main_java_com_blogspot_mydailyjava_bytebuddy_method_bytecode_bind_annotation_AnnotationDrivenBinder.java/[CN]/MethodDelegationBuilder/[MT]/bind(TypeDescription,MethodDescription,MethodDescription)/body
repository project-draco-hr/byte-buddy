{
  Assignment returningAssignment=assigner.assign(target.getReturnType(),source.getReturnType(),target.isAnnotationPresent(RuntimeType.class));
  if (!returningAssignment.isAssignable()) {
    return IllegalMethodDelegation.INSTANCE;
  }
  MethodDelegationBuilder methodDelegationBuilder=new MethodDelegationBuilder(target,returningAssignment);
  Iterator<? extends Annotation> defaults=annotationDefaultHandler.makeIterator(typeDescription,source,target);
  for (int targetParameterIndex=0; targetParameterIndex < target.getParameterTypes().length; targetParameterIndex++) {
    ArgumentBinder.IdentifiedBinding<?> identifiedBinding=delegationProcessor.handler(target.getParameterAnnotations()[targetParameterIndex],defaults).handle(targetParameterIndex,source,target,typeDescription,assigner);
    if (!identifiedBinding.isValid() || !methodDelegationBuilder.append(identifiedBinding,targetParameterIndex)) {
      return IllegalMethodDelegation.INSTANCE;
    }
  }
  return methodDelegationBuilder.build();
}
