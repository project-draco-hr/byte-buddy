{
  ObjectPropertyAssertion.of(RebaseInstrumentationTarget.class).refine(new ObjectPropertyAssertion.Refinement<MethodLookupEngine.Finding>(){
    @Override public void apply(    MethodLookupEngine.Finding mock){
      when(mock.getTypeDescription()).thenReturn(mock(TypeDescription.class));
      when(mock.getInvokableMethods()).thenReturn(new MethodList.Empty());
      when(mock.getInvokableDefaultMethods()).thenReturn(Collections.<TypeDescription,Set<MethodDescription>>emptyMap());
    }
  }
).refine(new ObjectPropertyAssertion.Refinement<BridgeMethodResolver.Factory>(){
    @Override public void apply(    BridgeMethodResolver.Factory mock){
      when(mock.make(any(MethodList.class))).thenReturn(mock(BridgeMethodResolver.class));
    }
  }
).apply();
}
