{
  assertThat(new MethodRegistry.Default().compile(basicInstrumentedType,methodLookupEngine,instrumentationTargetFactory,fallback).hashCode(),is(new MethodRegistry.Default().compile(basicInstrumentedType,methodLookupEngine,instrumentationTargetFactory,fallback).hashCode()));
  assertThat(new MethodRegistry.Default().compile(basicInstrumentedType,methodLookupEngine,instrumentationTargetFactory,fallback),is(new MethodRegistry.Default().compile(basicInstrumentedType,methodLookupEngine,instrumentationTargetFactory,fallback)));
  assertThat(new MethodRegistry.Default().append(latentMatchesKnownMethod,simpleInstrumentation,simpleAttributeAppenderFactory).compile(basicInstrumentedType,methodLookupEngine,instrumentationTargetFactory,fallback).hashCode(),not(is(new MethodRegistry.Default().hashCode())));
  assertThat(new MethodRegistry.Default().append(latentMatchesKnownMethod,simpleInstrumentation,simpleAttributeAppenderFactory).compile(basicInstrumentedType,methodLookupEngine,instrumentationTargetFactory,fallback),not(is(new MethodRegistry.Default().compile(basicInstrumentedType,methodLookupEngine,instrumentationTargetFactory,fallback))));
}
