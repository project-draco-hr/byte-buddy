{
  MethodRegistry.Compiled compiled=new MethodRegistry.Default().prepend(latentMatchesKnownMethod,simpleInstrumentation,simpleAttributeAppenderFactory).compile(basicInstrumentedType,instrumentationTargetFactory,fallback);
  assertThat(compiled.target(knownMethod).isDefineMethod(),is(true));
  assertThat(compiled.target(knownMethod).getAttributeAppender(),is(simpleAttributeAppender));
  assertThat(compiled.target(knownMethod).getByteCodeAppender(),is(simpleByteCodeAppender));
  assertThat(compiled.target(unknownMethod),is(fallback));
  verify(simpleInstrumentation).prepare(basicInstrumentedType);
  verify(simpleInstrumentation).appender(basicInstrumentationTarget);
  verifyNoMoreInteractions(simpleInstrumentation);
  verify(simpleAttributeAppenderFactory).make(basicInstrumentedType);
  verifyNoMoreInteractions(simpleAttributeAppenderFactory);
}
