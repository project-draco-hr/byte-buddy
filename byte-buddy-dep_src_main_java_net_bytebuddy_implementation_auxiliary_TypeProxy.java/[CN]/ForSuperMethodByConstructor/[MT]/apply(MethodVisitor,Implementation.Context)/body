{
  TypeDescription proxyType=implementationContext.register(new TypeProxy(proxiedType,implementationTarget,InvocationFactory.Default.SUPER_METHOD,ignoreFinalizer,serializableProxy));
  StackManipulation[] constructorValue=new StackManipulation[constructorParameters.size()];
  int index=0;
  for (  TypeDescription parameterType : constructorParameters) {
    constructorValue[index++]=DefaultValue.of(parameterType);
  }
  return new Compound(TypeCreation.forType(proxyType),Duplication.SINGLE,new Compound(constructorValue),MethodInvocation.invoke(proxyType.getDeclaredMethods().filter(isConstructor().and(takesArguments(constructorParameters))).getOnly()),Duplication.SINGLE,MethodVariableAccess.forType(implementationTarget.getTypeDescription()).loadOffset(0),FieldAccess.forField(proxyType.getDeclaredFields().filter((ElementMatchers.named(INSTANCE_FIELD))).getOnly()).putter()).apply(methodVisitor,implementationContext);
}
