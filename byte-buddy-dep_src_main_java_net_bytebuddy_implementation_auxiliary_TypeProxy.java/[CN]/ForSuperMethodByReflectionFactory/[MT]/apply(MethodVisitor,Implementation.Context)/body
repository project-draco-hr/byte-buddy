{
  TypeDescription proxyType=implementationContext.register(new TypeProxy(proxiedType,implementationTarget,InvocationFactory.Default.SUPER_METHOD,ignoreFinalizer,serializableProxy));
  return new Compound(MethodInvocation.invoke(proxyType.getDeclaredMethods().filter(named(REFLECTION_METHOD).and(takesArguments(0))).getOnly()),Duplication.SINGLE,MethodVariableAccess.of(implementationTarget.getInstrumentedType()).loadOffset(0),FieldAccess.forField(proxyType.getDeclaredFields().filter((named(INSTANCE_FIELD))).getOnly()).putter()).apply(methodVisitor,implementationContext);
}
