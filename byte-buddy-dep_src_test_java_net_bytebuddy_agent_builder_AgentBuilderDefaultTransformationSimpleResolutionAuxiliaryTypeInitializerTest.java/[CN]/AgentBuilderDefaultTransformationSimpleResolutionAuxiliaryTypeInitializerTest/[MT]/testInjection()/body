{
  when(classInjector.inject(Collections.singletonMap(auxiliaryType,FOO))).thenReturn(Collections.<TypeDescription,Class<?>>singletonMap(auxiliaryType,Bar.class));
  Map<TypeDescription,LoadedTypeInitializer> loadedTypeInitializers=new HashMap<TypeDescription,LoadedTypeInitializer>();
  loadedTypeInitializers.put(instrumentedType,loadedTypeInitializer);
  loadedTypeInitializers.put(auxiliaryType,auxiliaryInitializer);
  LoadedTypeInitializer loadedTypeInitializer=new AgentBuilder.Default.Transformation.Simple.Resolution.AuxiliaryTypeInitializer.InjectingInitializer(instrumentedType,Collections.singletonMap(auxiliaryType,FOO),loadedTypeInitializers,classInjector);
  assertThat(loadedTypeInitializer.isAlive(),is(true));
  loadedTypeInitializer.onLoad(Foo.class);
  verify(this.loadedTypeInitializer).onLoad(Foo.class);
  verifyNoMoreInteractions(this.loadedTypeInitializer);
  verify(auxiliaryInitializer).onLoad(Bar.class);
  verifyNoMoreInteractions(auxiliaryInitializer);
  verify(classInjector).inject(Collections.singletonMap(auxiliaryType,FOO));
}
