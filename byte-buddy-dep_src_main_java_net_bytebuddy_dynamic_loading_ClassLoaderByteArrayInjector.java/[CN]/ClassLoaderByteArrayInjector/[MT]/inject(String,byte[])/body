{
  try {
synchronized (classLoader) {
      Class<?> type=(Class<?>)REFLECTION_STORE.getFindLoadedClassMethod().invoke(classLoader,name);
      if (type != null) {
        return type;
      }
 else {
        try {
          return AccessController.doPrivileged(new ClassLoadingAction(name,binaryRepresentation),accessControlContext);
        }
 catch (        PrivilegedActionException e) {
          if (e.getCause() instanceof IllegalAccessException) {
            throw (IllegalAccessException)e.getCause();
          }
 else           if (e.getCause() instanceof InvocationTargetException) {
            throw (InvocationTargetException)e.getCause();
          }
 else {
            throw (RuntimeException)e.getCause();
          }
        }
      }
    }
  }
 catch (  IllegalAccessException e) {
    throw new IllegalStateException("Could not access injection method",e);
  }
catch (  InvocationTargetException e) {
    throw new IllegalStateException("Exception on invoking loader method",e.getCause());
  }
}
