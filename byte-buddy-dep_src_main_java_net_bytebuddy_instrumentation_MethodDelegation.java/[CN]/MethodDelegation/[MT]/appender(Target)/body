{
  MethodList methodList=this.targetMethodCandidates.filter(isVisibleTo(instrumentationTarget.getTypeDescription()));
  if (methodList.size() == 0) {
    throw new IllegalStateException("No bindable method is visible to " + instrumentationTarget.getTypeDescription());
  }
  return new MethodDelegationByteCodeAppender(instrumentationDelegate.getPreparingStackAssignment(instrumentationTarget.getTypeDescription()),instrumentationTarget,methodList,new MethodDelegationBinder.Processor(new TargetMethodAnnotationDrivenBinder(parameterBinders,defaultsProvider,assigner,instrumentationDelegate.getMethodInvoker(instrumentationTarget.getTypeDescription())),ambiguityResolver));
}
