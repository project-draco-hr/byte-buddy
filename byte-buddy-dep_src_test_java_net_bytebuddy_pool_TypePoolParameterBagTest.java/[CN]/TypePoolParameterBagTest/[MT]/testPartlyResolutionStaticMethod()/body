{
  Type[] type=new Type[3];
  type[0]=Type.getType(Object.class);
  type[1]=Type.getType(long.class);
  type[2]=Type.getType(String.class);
  TypePool.Default.ParameterBag parameterBag=new TypePool.Default.ParameterBag(type);
  parameterBag.register(0,FOO);
  parameterBag.register(3,QUX);
  List<TypePool.LazyTypeDescription.MethodToken.ParameterToken> tokens=parameterBag.resolve(true);
  assertThat(tokens.size(),is(3));
  assertThat(tokens.get(0).getName(),is(FOO));
  assertThat(tokens.get(1).getName(),nullValue(String.class));
  assertThat(tokens.get(2).getName(),is(QUX));
  assertThat(tokens.get(0).getModifiers(),nullValue(Integer.class));
  assertThat(tokens.get(1).getModifiers(),nullValue(Integer.class));
  assertThat(tokens.get(2).getModifiers(),nullValue(Integer.class));
}
