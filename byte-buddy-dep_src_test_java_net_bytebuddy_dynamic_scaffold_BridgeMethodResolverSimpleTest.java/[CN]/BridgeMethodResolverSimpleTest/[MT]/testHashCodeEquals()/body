{
  MethodList first=new MethodList.ForLoadedType(Baz.class);
  MethodList second=new MethodList.ForLoadedType(Bar.class);
  assertThat(new BridgeMethodResolver.Simple(first,BridgeMethodResolver.Simple.ConflictHandler.Default.CALL_BRIDGE).hashCode(),is(new BridgeMethodResolver.Simple(first,BridgeMethodResolver.Simple.ConflictHandler.Default.CALL_BRIDGE).hashCode()));
  assertThat(new BridgeMethodResolver.Simple(first,BridgeMethodResolver.Simple.ConflictHandler.Default.CALL_BRIDGE),is(new BridgeMethodResolver.Simple(first,BridgeMethodResolver.Simple.ConflictHandler.Default.CALL_BRIDGE)));
  assertThat(new BridgeMethodResolver.Simple(first,BridgeMethodResolver.Simple.ConflictHandler.Default.CALL_BRIDGE).hashCode(),CoreMatchers.not(is(new BridgeMethodResolver.Simple(first,BridgeMethodResolver.Simple.ConflictHandler.Default.FAIL_ON_REQUEST).hashCode())));
  assertThat(new BridgeMethodResolver.Simple(first,BridgeMethodResolver.Simple.ConflictHandler.Default.CALL_BRIDGE),CoreMatchers.not(is(new BridgeMethodResolver.Simple(first,BridgeMethodResolver.Simple.ConflictHandler.Default.FAIL_ON_REQUEST))));
  assertThat(new BridgeMethodResolver.Simple(first,BridgeMethodResolver.Simple.ConflictHandler.Default.CALL_BRIDGE).hashCode(),CoreMatchers.not(is(new BridgeMethodResolver.Simple(second,BridgeMethodResolver.Simple.ConflictHandler.Default.CALL_BRIDGE).hashCode())));
  assertThat(new BridgeMethodResolver.Simple(first,BridgeMethodResolver.Simple.ConflictHandler.Default.CALL_BRIDGE),CoreMatchers.not(is(new BridgeMethodResolver.Simple(second,BridgeMethodResolver.Simple.ConflictHandler.Default.CALL_BRIDGE))));
}
