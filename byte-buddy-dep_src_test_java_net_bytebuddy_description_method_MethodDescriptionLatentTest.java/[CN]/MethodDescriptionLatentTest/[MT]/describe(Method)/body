{
  List<ParameterDescription.Token> tokens=new ArrayList<ParameterDescription.Token>(method.getParameterTypes().length);
  ParameterList parameterList=ParameterList.ForLoadedExecutable.of(method);
  for (  ParameterDescription parameterDescription : parameterList) {
    tokens.add(parameterList.hasExplicitMetaData() ? new ParameterDescription.Token(parameterDescription.getType(),parameterDescription.getDeclaredAnnotations(),parameterDescription.getName(),parameterDescription.getModifiers()) : new ParameterDescription.Token(parameterDescription.getType(),parameterDescription.getDeclaredAnnotations()));
  }
  return new MethodDescription.Latent(new TypeDescription.ForLoadedType(method.getDeclaringClass()),method.getName(),GenericTypeDescription.Sort.describe(method.getGenericReturnType()),tokens,method.getModifiers(),new GenericTypeList.ForLoadedType(method.getGenericExceptionTypes()),new AnnotationList.ForLoadedAnnotation(method.getDeclaredAnnotations()));
}
