{
  List<ParameterDescription.Token> tokens=new ArrayList<ParameterDescription.Token>(constructor.getParameterTypes().length);
  ParameterList parameterList=ParameterList.ForLoadedExecutable.of(constructor);
  for (  ParameterDescription parameterDescription : parameterList) {
    tokens.add(parameterList.hasExplicitMetaData() ? new ParameterDescription.Token(parameterDescription.getType(),parameterDescription.getDeclaredAnnotations(),parameterDescription.getName(),parameterDescription.getModifiers()) : new ParameterDescription.Token(parameterDescription.getType(),parameterDescription.getDeclaredAnnotations()));
  }
  return new MethodDescription.Latent(MethodDescription.CONSTRUCTOR_INTERNAL_NAME,new TypeDescription.ForLoadedType(constructor.getDeclaringClass()),TypeDescription.VOID,tokens,constructor.getModifiers(),new GenericTypeList.ForLoadedType(constructor.getGenericExceptionTypes()),new AnnotationList.ForLoadedAnnotation(constructor.getDeclaredAnnotations()));
}
