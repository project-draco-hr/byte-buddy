{
  assertValue(defaultFirst,"booleanValue",BOOLEAN,BOOLEAN);
  assertValue(defaultSecond,"booleanValue",OTHER_BOOLEAN,OTHER_BOOLEAN);
  assertValue(defaultFirst,"byteValue",BYTE,BYTE);
  assertValue(defaultSecond,"byteValue",OTHER_BYTE,OTHER_BYTE);
  assertValue(defaultFirst,"shortValue",SHORT,SHORT);
  assertValue(defaultSecond,"shortValue",OTHER_SHORT,OTHER_SHORT);
  assertValue(defaultFirst,"charValue",CHARACTER,CHARACTER);
  assertValue(defaultSecond,"charValue",OTHER_CHARACTER,OTHER_CHARACTER);
  assertValue(defaultFirst,"intValue",INTEGER,INTEGER);
  assertValue(defaultSecond,"intValue",OTHER_INTEGER,OTHER_INTEGER);
  assertValue(defaultFirst,"longValue",LONG,LONG);
  assertValue(defaultSecond,"longValue",OTHER_LONG,OTHER_LONG);
  assertValue(defaultFirst,"floatValue",FLOAT,FLOAT);
  assertValue(defaultSecond,"floatValue",OTHER_FLOAT,OTHER_FLOAT);
  assertValue(defaultFirst,"doubleValue",DOUBLE,DOUBLE);
  assertValue(defaultSecond,"doubleValue",OTHER_DOUBLE,OTHER_DOUBLE);
  assertValue(defaultFirst,"stringValue",FOO,FOO);
  assertValue(defaultSecond,"stringValue",BAR,BAR);
  assertValue(defaultFirst,"classValue",new TypeDescription.ForLoadedType(CLASS),CLASS);
  assertValue(defaultSecond,"classValue",new TypeDescription.ForLoadedType(OTHER_CLASS),OTHER_CLASS);
  assertValue(defaultFirst,"arrayClassValue",new TypeDescription.ForLoadedType(ARRAY_CLASS),ARRAY_CLASS);
  assertValue(defaultSecond,"arrayClassValue",new TypeDescription.ForLoadedType(OTHER_ARRAY_CLASS),OTHER_ARRAY_CLASS);
  assertValue(defaultFirst,"enumValue",new EnumerationDescription.ForLoadedEnumeration(ENUMERATION),ENUMERATION);
  assertValue(defaultSecond,"enumValue",new EnumerationDescription.ForLoadedEnumeration(OTHER_ENUMERATION),OTHER_ENUMERATION);
  assertValue(defaultFirst,"annotationValue",AnnotationDescription.ForLoadedAnnotation.of(ANNOTATION),ANNOTATION);
  assertValue(defaultSecond,"annotationValue",AnnotationDescription.ForLoadedAnnotation.of(OTHER_ANNOTATION),OTHER_ANNOTATION);
  assertValue(defaultFirst,"booleanArrayValue",BOOLEAN_ARRAY,BOOLEAN_ARRAY);
  assertValue(defaultSecond,"booleanArrayValue",OTHER_BOOLEAN_ARRAY,OTHER_BOOLEAN_ARRAY);
  assertValue(defaultFirst,"byteArrayValue",BYTE_ARRAY,BYTE_ARRAY);
  assertValue(defaultSecond,"byteArrayValue",OTHER_BYTE_ARRAY,OTHER_BYTE_ARRAY);
  assertValue(defaultFirst,"shortArrayValue",SHORT_ARRAY,SHORT_ARRAY);
  assertValue(defaultSecond,"shortArrayValue",OTHER_SHORT_ARRAY,OTHER_SHORT_ARRAY);
  assertValue(defaultFirst,"charArrayValue",CHARACTER_ARRAY,CHARACTER_ARRAY);
  assertValue(defaultSecond,"charArrayValue",OTHER_CHARACTER_ARRAY,OTHER_CHARACTER_ARRAY);
  assertValue(defaultFirst,"intArrayValue",INTEGER_ARRAY,INTEGER_ARRAY);
  assertValue(defaultSecond,"intArrayValue",OTHER_INTEGER_ARRAY,OTHER_INTEGER_ARRAY);
  assertValue(defaultFirst,"longArrayValue",LONG_ARRAY,LONG_ARRAY);
  assertValue(defaultSecond,"longArrayValue",OTHER_LONG_ARRAY,OTHER_LONG_ARRAY);
  assertValue(defaultFirst,"floatArrayValue",FLOAT_ARRAY,FLOAT_ARRAY);
  assertValue(defaultSecond,"floatArrayValue",OTHER_FLOAT_ARRAY,OTHER_FLOAT_ARRAY);
  assertValue(defaultFirst,"doubleArrayValue",DOUBLE_ARRAY,DOUBLE_ARRAY);
  assertValue(defaultSecond,"doubleArrayValue",OTHER_DOUBLE_ARRAY,OTHER_DOUBLE_ARRAY);
  assertValue(defaultFirst,"stringArrayValue",STRING_ARRAY,STRING_ARRAY);
  assertValue(defaultSecond,"stringArrayValue",OTHER_STRING_ARRAY,OTHER_STRING_ARRAY);
  assertValue(defaultFirst,"classArrayValue",new TypeDescription[]{new TypeDescription.ForLoadedType(CLASS)},CLASS_ARRAY);
  assertValue(defaultSecond,"classArrayValue",new TypeDescription[]{new TypeDescription.ForLoadedType(OTHER_CLASS)},OTHER_CLASS_ARRAY);
  assertValue(defaultFirst,"enumArrayValue",new EnumerationDescription[]{new EnumerationDescription.ForLoadedEnumeration(ENUMERATION)},ENUMERATION_ARRAY);
  assertValue(defaultSecond,"enumArrayValue",new EnumerationDescription[]{new EnumerationDescription.ForLoadedEnumeration(OTHER_ENUMERATION)},OTHER_ENUMERATION_ARRAY);
  assertValue(defaultFirst,"annotationArrayValue",new AnnotationDescription[]{AnnotationDescription.ForLoadedAnnotation.of(ANNOTATION)},ANNOTATION_ARRAY);
  assertValue(defaultSecond,"annotationArrayValue",new AnnotationDescription[]{AnnotationDescription.ForLoadedAnnotation.of(OTHER_ANNOTATION)},OTHER_ANNOTATION_ARRAY);
}
