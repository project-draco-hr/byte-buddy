{
  assertValue(first,"booleanValue",BOOLEAN,BOOLEAN);
  assertValue(second,"booleanValue",BOOLEAN,BOOLEAN);
  assertValue(first,"byteValue",BYTE,BYTE);
  assertValue(second,"byteValue",BYTE,BYTE);
  assertValue(first,"shortValue",SHORT,SHORT);
  assertValue(second,"shortValue",SHORT,SHORT);
  assertValue(first,"charValue",CHARACTER,CHARACTER);
  assertValue(second,"charValue",CHARACTER,CHARACTER);
  assertValue(first,"intValue",INTEGER,INTEGER);
  assertValue(second,"intValue",INTEGER,INTEGER);
  assertValue(first,"longValue",LONG,LONG);
  assertValue(second,"longValue",LONG,LONG);
  assertValue(first,"floatValue",FLOAT,FLOAT);
  assertValue(second,"floatValue",FLOAT,FLOAT);
  assertValue(first,"doubleValue",DOUBLE,DOUBLE);
  assertValue(second,"doubleValue",DOUBLE,DOUBLE);
  assertValue(first,"stringValue",FOO,FOO);
  assertValue(second,"stringValue",BAR,BAR);
  assertValue(first,"classValue",new TypeDescription.ForLoadedType(CLASS),CLASS);
  assertValue(second,"classValue",new TypeDescription.ForLoadedType(CLASS),CLASS);
  assertValue(first,"arrayClassValue",new TypeDescription.ForLoadedType(ARRAY_CLASS),ARRAY_CLASS);
  assertValue(second,"arrayClassValue",new TypeDescription.ForLoadedType(ARRAY_CLASS),ARRAY_CLASS);
  assertValue(first,"enumValue",new EnumerationDescription.ForLoadedEnumeration(ENUMERATION),ENUMERATION);
  assertValue(second,"enumValue",new EnumerationDescription.ForLoadedEnumeration(ENUMERATION),ENUMERATION);
  assertValue(first,"annotationValue",AnnotationDescription.ForLoadedAnnotation.of(ANNOTATION),ANNOTATION);
  assertValue(second,"annotationValue",AnnotationDescription.ForLoadedAnnotation.of(ANNOTATION),ANNOTATION);
  assertValue(first,"booleanArrayValue",BOOLEAN_ARRAY,BOOLEAN_ARRAY);
  assertValue(second,"booleanArrayValue",BOOLEAN_ARRAY,BOOLEAN_ARRAY);
  assertValue(first,"byteArrayValue",BYTE_ARRAY,BYTE_ARRAY);
  assertValue(second,"byteArrayValue",BYTE_ARRAY,BYTE_ARRAY);
  assertValue(first,"shortArrayValue",SHORT_ARRAY,SHORT_ARRAY);
  assertValue(second,"shortArrayValue",SHORT_ARRAY,SHORT_ARRAY);
  assertValue(first,"charArrayValue",CHARACTER_ARRAY,CHARACTER_ARRAY);
  assertValue(second,"charArrayValue",CHARACTER_ARRAY,CHARACTER_ARRAY);
  assertValue(first,"intArrayValue",INTEGER_ARRAY,INTEGER_ARRAY);
  assertValue(second,"intArrayValue",INTEGER_ARRAY,INTEGER_ARRAY);
  assertValue(first,"longArrayValue",LONG_ARRAY,LONG_ARRAY);
  assertValue(second,"longArrayValue",LONG_ARRAY,LONG_ARRAY);
  assertValue(first,"floatArrayValue",FLOAT_ARRAY,FLOAT_ARRAY);
  assertValue(second,"floatArrayValue",FLOAT_ARRAY,FLOAT_ARRAY);
  assertValue(first,"doubleArrayValue",DOUBLE_ARRAY,DOUBLE_ARRAY);
  assertValue(second,"doubleArrayValue",DOUBLE_ARRAY,DOUBLE_ARRAY);
  assertValue(first,"stringArrayValue",STRING_ARRAY,STRING_ARRAY);
  assertValue(second,"stringArrayValue",STRING_ARRAY,STRING_ARRAY);
  assertValue(first,"classArrayValue",new TypeDescription[]{new TypeDescription.ForLoadedType(CLASS)},CLASS_ARRAY);
  assertValue(second,"classArrayValue",new TypeDescription[]{new TypeDescription.ForLoadedType(CLASS)},CLASS_ARRAY);
  assertValue(first,"enumArrayValue",new EnumerationDescription[]{new EnumerationDescription.ForLoadedEnumeration(ENUMERATION)},ENUMERATION_ARRAY);
  assertValue(second,"enumArrayValue",new EnumerationDescription[]{new EnumerationDescription.ForLoadedEnumeration(ENUMERATION)},ENUMERATION_ARRAY);
  assertValue(first,"annotationArrayValue",new AnnotationDescription[]{AnnotationDescription.ForLoadedAnnotation.of(ANNOTATION)},ANNOTATION_ARRAY);
  assertValue(second,"annotationArrayValue",new AnnotationDescription[]{AnnotationDescription.ForLoadedAnnotation.of(ANNOTATION)},ANNOTATION_ARRAY);
}
