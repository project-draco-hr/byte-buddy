{
  DynamicType.Loaded<SuperConstructorCall> loaded=instrument(SuperConstructorCall.class,MethodCall.invoke(Object.class.getDeclaredConstructor()),SuperConstructorCall.class.getClassLoader(),isConstructor());
  assertThat(loaded.getLoadedAuxiliaryTypes().size(),is(0));
  assertThat(loaded.getLoaded().getDeclaredMethods().length,is(0));
  assertThat(loaded.getLoaded().getDeclaredConstructors().length,is(1));
  assertThat(loaded.getLoaded().getDeclaredFields().length,is(0));
  SuperConstructorCall instance=loaded.getLoaded().newInstance();
  assertNotEquals(SuperConstructorCall.class,instance.getClass());
  assertThat(instance,instanceOf(SuperConstructorCall.class));
}
