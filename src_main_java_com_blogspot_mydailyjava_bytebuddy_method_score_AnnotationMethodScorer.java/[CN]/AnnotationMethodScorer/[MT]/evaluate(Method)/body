{
  assertReturnType(targetMethod.getReturnType());
  assertExceptions(targetMethod);
  Annotation[][] targetMethodArgumentAnnotations=targetMethod.getParameterAnnotations();
  Class<?>[] targetMethodArgumentType=targetMethod.getParameterTypes();
  List<MethodCallStackValue> targetMethodCallStack=new ArrayList<MethodCallStackValue>(targetMethodArgumentType.length);
  double score=0;
  boolean[] sourceMethodArgumentIsBound=new boolean[sourceMethodArgumentTypeNames.size()];
  for (int i=0; i < targetMethodArgumentType.length; i++) {
    score+=assertAndScoreParameter(targetMethodArgumentType[i],makeAnnotationMap(targetMethodArgumentAnnotations[i]),sourceMethodArgumentIsBound,targetMethodCallStack);
  }
  score+=scoreMethodNameEquality(targetMethod);
  return new MatchedMethod(score,targetMethodCallStack);
}
