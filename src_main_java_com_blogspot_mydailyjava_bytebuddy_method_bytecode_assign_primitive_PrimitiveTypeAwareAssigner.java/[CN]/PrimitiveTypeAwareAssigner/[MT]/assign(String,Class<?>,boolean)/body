{
  boolean superTypeIsPrimitive=isPrimitive(superTypeName), subTypeIsPrimitive=subType.isPrimitive();
  if (superTypeIsPrimitive && subTypeIsPrimitive) {
    return PrimitiveWideningDelegate.forPrimitive(superTypeName).widenTo(subType);
  }
 else   if (superTypeIsPrimitive) {
    return PrimitiveUnboxingDelegate.forPrimitive(superTypeName).boxAndAssignTo(subType,referenceTypeDelegate,considerRuntimeType);
  }
 else   if (subTypeIsPrimitive) {
    return PrimitiveUnboxingDelegate.forType(superTypeName).unboxAndAssignTo(subType,referenceTypeDelegate,considerRuntimeType);
  }
 else {
    return referenceTypeDelegate.assign(superTypeName,subType,considerRuntimeType);
  }
}
