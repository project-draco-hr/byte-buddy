{
  ObjectPropertyAssertion.of(ClassReloadingStrategy.class).refine(new ObjectPropertyAssertion.Refinement<Instrumentation>(){
    @Override public void apply(    Instrumentation mock){
      when(mock.isRedefineClassesSupported()).thenReturn(true);
      when(mock.isRetransformClassesSupported()).thenReturn(true);
    }
  }
).apply();
  ObjectPropertyAssertion.of(ClassReloadingStrategy.BootstrapInjection.Enabled.class).apply();
  ObjectPropertyAssertion.of(ClassReloadingStrategy.Strategy.class).apply();
  ObjectPropertyAssertion.of(ClassReloadingStrategy.Strategy.ClassRedefinitionTransformer.class).applyBasic();
  ObjectPropertyAssertion.of(ClassReloadingStrategy.Strategy.ClassResettingTransformer.class).apply();
  ObjectPropertyAssertion.of(ClassReloadingStrategy.BootstrapInjection.Enabled.class).apply();
  ObjectPropertyAssertion.of(ClassReloadingStrategy.BootstrapInjection.Disabled.class).apply();
}
