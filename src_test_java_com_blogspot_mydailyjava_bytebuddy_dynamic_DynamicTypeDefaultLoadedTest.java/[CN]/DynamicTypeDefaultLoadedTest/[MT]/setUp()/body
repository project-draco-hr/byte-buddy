{
  byte[] typeByte=new byte[]{0,1,2};
  byte[] auxiliaryTypeByte=new byte[]{4,5,6};
  Map<String,Class<?>> types=new HashMap<String,Class<?>>();
  types.put(FOO,Void.class);
  types.put(BAR,Object.class);
  dynamicType=new DynamicType.Default.Loaded<Object>(FOO,typeByte,mainTypeInitializer,Collections.<DynamicType<?>>singletonList(auxiliaryType),types);
  when(auxiliaryType.getName()).thenReturn(BAR);
  when(auxiliaryType.getBytes()).thenReturn(auxiliaryTypeByte);
  when(auxiliaryType.getTypeInitializers()).thenReturn(Collections.singletonMap(BAR,auxiliaryTypeInitializer));
  when(auxiliaryType.getRawAuxiliaryTypes()).thenReturn(Collections.<String,byte[]>emptyMap());
}
