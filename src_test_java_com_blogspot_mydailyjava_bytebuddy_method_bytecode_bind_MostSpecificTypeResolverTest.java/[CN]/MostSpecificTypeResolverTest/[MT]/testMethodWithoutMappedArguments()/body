{
  when(source.getParameterTypes()).thenReturn(new Class<?>[]{Integer.class});
  when(leftMethod.getParameterTypes()).thenReturn(new Class<?>[]{Number.class});
  when(left.getTargetParameterIndex(argThat(describesArgument(0)))).thenReturn(null);
  when(rightMethod.getParameterTypes()).thenReturn(new Class<?>[]{Object.class});
  when(right.getTargetParameterIndex(argThat(describesArgument(0)))).thenReturn(null);
  MethodDelegationBinder.AmbiguityResolver.Resolution resolution=MostSpecificTypeResolver.INSTANCE.resolve(source,left,right);
  assertThat(resolution,is(MethodDelegationBinder.AmbiguityResolver.Resolution.AMBIGUOUS));
  verify(source,atLeast(1)).getParameterTypes();
  verify(left,atLeast(1)).getTargetParameterIndex(argThat(describesArgument(0)));
  verify(left,never()).getTargetParameterIndex(argThat(not(describesArgument(0))));
  verify(right,atLeast(1)).getTargetParameterIndex(argThat(describesArgument(0)));
  verify(right,never()).getTargetParameterIndex(argThat(not(describesArgument(0))));
}
