{
  when(source.getParameterTypes()).thenReturn(new Class<?>[]{Class.class});
  when(leftMethod.getParameterTypes()).thenReturn(new Class<?>[]{GenericDeclaration.class});
  when(left.getBindingIndex(any(MostSpecificTypeResolver.ParameterIndexToken.class))).thenAnswer(new TokenAnswer(new int[][]{{0,0}}));
  when(rightMethod.getParameterTypes()).thenReturn(new Class<?>[]{Type.class});
  when(right.getBindingIndex(any(MostSpecificTypeResolver.ParameterIndexToken.class))).thenAnswer(new TokenAnswer(new int[][]{{0,0}}));
  MethodDelegationBinder.AmbiguityResolver.Resolution resolution=MostSpecificTypeResolver.INSTANCE.resolve(source,left,right);
  assertThat(resolution,is(MethodDelegationBinder.AmbiguityResolver.Resolution.AMBIGUOUS));
  verify(source,atLeast(1)).getParameterTypes();
  verify(leftMethod,atLeast(1)).getParameterTypes();
  verify(rightMethod,atLeast(1)).getParameterTypes();
  verify(left,atLeast(1)).getBindingIndex(argThat(describesArgument(0)));
  verify(left,never()).getBindingIndex(argThat(not(describesArgument(0))));
  verify(right,atLeast(1)).getBindingIndex(argThat(describesArgument(0)));
  verify(right,never()).getBindingIndex(argThat(not(describesArgument(0))));
}
