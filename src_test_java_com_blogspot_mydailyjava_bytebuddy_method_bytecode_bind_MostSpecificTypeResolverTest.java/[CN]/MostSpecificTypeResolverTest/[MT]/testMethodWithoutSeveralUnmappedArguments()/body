{
  when(source.getParameterTypes()).thenReturn(new Class<?>[]{Void.class,Void.class,Void.class});
  when(left.getTargetParameterIndex(any())).thenReturn(null);
  when(right.getTargetParameterIndex(any())).thenReturn(null);
  MethodDelegationBinder.AmbiguityResolver.Resolution resolution=MostSpecificTypeResolver.INSTANCE.resolve(source,left,right);
  assertThat(resolution,is(MethodDelegationBinder.AmbiguityResolver.Resolution.AMBIGUOUS));
  verify(source,atLeast(1)).getParameterTypes();
  verify(left,atLeast(1)).getTargetParameterIndex(argThat(describesArgument(0)));
  verify(left,atLeast(1)).getTargetParameterIndex(argThat(describesArgument(1)));
  verify(left,atLeast(1)).getTargetParameterIndex(argThat(describesArgument(2)));
  verify(left,never()).getTargetParameterIndex(argThat(not(describesArgument(0,1,2))));
  verify(right,atLeast(1)).getTargetParameterIndex(argThat(describesArgument(0)));
  verify(right,atLeast(1)).getTargetParameterIndex(argThat(describesArgument(1)));
  verify(right,atLeast(1)).getTargetParameterIndex(argThat(describesArgument(2)));
  verify(right,never()).getTargetParameterIndex(argThat(not(describesArgument(0,1,2))));
}
