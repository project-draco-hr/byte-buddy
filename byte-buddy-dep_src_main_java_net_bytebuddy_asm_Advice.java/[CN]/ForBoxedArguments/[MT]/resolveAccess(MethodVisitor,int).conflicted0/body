{
switch (opcode) {
case Opcodes.ALOAD:
    loadInteger(methodVisitor,parameters.size());
  methodVisitor.visitTypeInsn(Opcodes.ANEWARRAY,TypeDescription.OBJECT.getInternalName());
StackSize stackSize=StackSize.ZERO;
for (ParameterDescription parameter : parameters) {
methodVisitor.visitInsn(Opcodes.DUP);
loadInteger(methodVisitor,parameter.getIndex());
if (parameter.getType().isPrimitive()) {
  BoxingDispatcher.of(parameter.getType()).loadBoxed(methodVisitor,parameter.getOffset());
}
 else {
  methodVisitor.visitVarInsn(Opcodes.ALOAD,parameter.getOffset());
}
methodVisitor.visitInsn(Opcodes.AASTORE);
stackSize=stackSize.maximum(parameter.getType().getStackSize());
}
return stackSize.getSize() + 2;
default :
throw new IllegalStateException("Unexpected opcode: " + opcode);
}
}
