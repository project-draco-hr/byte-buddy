{
  if (adviseMethod.getReturnType().represents(boolean.class) || adviseMethod.getReturnType().represents(byte.class) || adviseMethod.getReturnType().represents(short.class)|| adviseMethod.getReturnType().represents(char.class)|| adviseMethod.getReturnType().represents(int.class)) {
    methodVisitor.visitInsn(Opcodes.ICONST_0);
    methodVisitor.visitVarInsn(Opcodes.ISTORE,instrumentedMethod.getStackSize());
  }
 else   if (adviseMethod.getReturnType().represents(long.class)) {
    methodVisitor.visitInsn(Opcodes.LCONST_0);
    methodVisitor.visitVarInsn(Opcodes.LSTORE,instrumentedMethod.getStackSize());
  }
 else   if (adviseMethod.getReturnType().represents(float.class)) {
    methodVisitor.visitInsn(Opcodes.FCONST_0);
    methodVisitor.visitVarInsn(Opcodes.FSTORE,instrumentedMethod.getStackSize());
  }
 else   if (adviseMethod.getReturnType().represents(double.class)) {
    methodVisitor.visitInsn(Opcodes.DCONST_0);
    methodVisitor.visitVarInsn(Opcodes.DSTORE,instrumentedMethod.getStackSize());
  }
 else   if (!adviseMethod.getReturnType().represents(void.class)) {
    methodVisitor.visitInsn(Opcodes.ACONST_NULL);
    methodVisitor.visitVarInsn(Opcodes.ASTORE,instrumentedMethod.getStackSize());
  }
}
