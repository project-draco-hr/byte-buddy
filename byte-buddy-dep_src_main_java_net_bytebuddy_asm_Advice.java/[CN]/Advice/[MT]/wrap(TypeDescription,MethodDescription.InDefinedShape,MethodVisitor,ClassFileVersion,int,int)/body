{
  if (methodDescription.isAbstract() || methodDescription.isNative()) {
    throw new IllegalStateException("Cannot advice abstract or native method " + methodDescription);
  }
 else   if (!methodExit.isAlive()) {
    return new AdviceVisitor.WithoutExitAdvice(methodVisitor,methodDescription,methodEnter,binaryRepresentation,writerFlags,readerFlags);
  }
 else   if (methodExit.isSkipThrowable()) {
    return new AdviceVisitor.WithExitAdvice.WithoutExceptionHandling(methodVisitor,methodDescription,methodEnter,methodExit,binaryRepresentation,writerFlags,readerFlags);
  }
 else   if (methodDescription.isConstructor()) {
    throw new IllegalStateException("Cannot catch exception during constructor call for " + methodDescription);
  }
 else {
    return new AdviceVisitor.WithExitAdvice.WithExceptionHandling(methodVisitor,methodDescription,methodEnter,methodExit,binaryRepresentation,writerFlags,readerFlags);
  }
}
