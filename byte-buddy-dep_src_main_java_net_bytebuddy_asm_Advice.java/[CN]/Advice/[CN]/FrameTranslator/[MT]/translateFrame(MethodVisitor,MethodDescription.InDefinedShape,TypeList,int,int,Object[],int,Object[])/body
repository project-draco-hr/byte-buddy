{
switch (type) {
case Opcodes.F_SAME:
case Opcodes.F_SAME1:
    break;
case Opcodes.F_FULL:
case Opcodes.F_NEW:
  Object[] translated=new Object[localVariableLength - methodDescription.getParameters().size() + instrumentedMethod.getParameters().size() + intermediateTypes.size()];
int index=0;
for (TypeDescription typeDescription : instrumentedMethod.getParameters().asTypeList().asErasures()) {
index+=insertFrame(typeDescription,translated,index);
}
for (TypeDescription typeDescription : intermediateTypes) {
index+=insertFrame(typeDescription,translated,index);
}
System.arraycopy(localVariable,localVariableLength - methodDescription.getParameters().size(),translated,index,translated.length - index);
localVariableLength=translated.length;
localVariable=translated;
case Opcodes.F_APPEND:
case Opcodes.F_CHOP:
requiresFull=true;
break;
default :
throw new IllegalArgumentException("Unexpected frame type: " + type);
}
methodVisitor.visitFrame(type,localVariableLength,localVariable,stackSize,stack);
}
