{
  if (!methodDescription.getReturnType().represents(void.class)) {
    throw new IllegalStateException();
  }
  TypeDescription suppliedType=methodEnter.getInlinedMethod().getReturnType().asErasure();
  boolean valueParameterExpected=!suppliedType.represents(void.class);
  for (  ParameterDescription parameter : methodDescription.getParameters()) {
    if (parameter.getDeclaredAnnotations().isAnnotationPresent(Value.class)) {
      if (valueParameterExpected) {
        if (!suppliedType.isAssignableTo(parameter.getType().asErasure())) {
          throw new IllegalStateException();
        }
        valueParameterExpected=false;
      }
 else {
        throw new IllegalStateException();
      }
    }
  }
  return suppliedType.represents(void.class) ? this : new WithReturnValue(this,suppliedType);
}
