{
  onUserEnd();
  mv.visitLabel(endOfMethod);
  frameTranslator.injectCompletionFrame(mv);
  append(methodExit);
  variable(Opcodes.ALOAD,instrumentedMethod.getReturnType().getStackSize().getSize());
  Label exceptionalReturn=new Label();
  mv.visitJumpInsn(Opcodes.IFNONNULL,exceptionalReturn);
  if (instrumentedMethod.getReturnType().represents(void.class)) {
    mv.visitInsn(Opcodes.RETURN);
  }
 else {
    Type returnType=Type.getType(instrumentedMethod.getReturnType().asErasure().getDescriptor());
    variable(returnType.getOpcode(Opcodes.ILOAD));
    mv.visitInsn(returnType.getOpcode(Opcodes.IRETURN));
  }
  mv.visitLabel(exceptionalReturn);
  mv.visitFrame(Opcodes.F_SAME,0,new Object[0],0,new Object[0]);
  variable(Opcodes.ALOAD,instrumentedMethod.getReturnType().getStackSize().getSize());
  mv.visitInsn(Opcodes.ATHROW);
  super.visitMaxs(frameTranslator.compoundStackSize(maxStack),frameTranslator.compoundLocalVariableSize(maxLocals));
}
