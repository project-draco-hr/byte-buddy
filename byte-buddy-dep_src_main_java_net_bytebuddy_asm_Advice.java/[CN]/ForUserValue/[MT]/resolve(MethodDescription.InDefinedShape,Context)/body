{
  Object userValue=dynamicValue.resolve(instrumentedMethod,mappedParameter,userAnnotation,context.isInitialized());
  if (userValue == null) {
    if (mappedParameter.getType().isPrimitive()) {
      throw new IllegalStateException("Cannot map null to primitive type of " + mappedParameter);
    }
    return Target.ForNullConstant.INSTANCE;
  }
 else   if ((mappedParameter.getType().represents(String.class) && !(userValue instanceof String)) || (mappedParameter.getType().represents(Class.class) && !(userValue instanceof TypeDescription || userValue instanceof Class)) || (mappedParameter.getType().isPrimitive() && !mappedParameter.getType().asErasure().isInstanceOrWrapper(userValue))) {
    throw new IllegalStateException("Cannot map " + userValue + " as constant value of "+ mappedParameter.getType());
  }
 else   if (userValue instanceof TypeDescription) {
    userValue=Type.getType(((TypeDescription)userValue).getDescriptor());
  }
 else   if (userValue instanceof Class) {
    userValue=Type.getType((Class<?>)userValue);
  }
  return new Target.ForConstantPoolValue(userValue);
}
