{
  Object value=dynamicValue.resolve(instrumentedMethod,target,annotation,context.isInitialized());
  if (value == null) {
    if (target.getType().isPrimitive()) {
      throw new IllegalStateException("Cannot map null to primitive type of " + target);
    }
    return Target.ForNullConstant.INSTANCE;
  }
 else   if ((target.getType().represents(String.class) && !(value instanceof String)) || (target.getType().represents(Class.class) && !(value instanceof TypeDescription || value instanceof Class)) || (target.getType().isPrimitive() && !target.getType().asErasure().isInstanceOrWrapper(value))) {
    throw new IllegalStateException("Cannot map " + value + " as constant value of "+ target.getType());
  }
 else   if (value instanceof TypeDescription) {
    value=Type.getType(((TypeDescription)value).getDescriptor());
  }
 else   if (value instanceof Class) {
    value=Type.getType((Class<?>)value);
  }
  return new Target.ForConstantPoolValue(value);
}
