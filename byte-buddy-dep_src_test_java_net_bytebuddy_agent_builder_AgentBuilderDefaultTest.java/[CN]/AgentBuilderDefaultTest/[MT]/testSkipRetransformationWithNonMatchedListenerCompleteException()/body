{
  when(dynamicType.getBytes()).thenReturn(BAZ);
  when(resolution.resolve()).thenReturn(new TypeDescription.ForLoadedType(REDEFINED));
  when(rawMatcher.matches(new TypeDescription.ForLoadedType(REDEFINED),REDEFINED.getClassLoader(),JavaModule.ofType(REDEFINED),REDEFINED,REDEFINED.getProtectionDomain())).thenReturn(false);
  when(instrumentation.isModifiableClass(REDEFINED)).thenReturn(true);
  when(instrumentation.isRetransformClassesSupported()).thenReturn(true);
  doThrow(new RuntimeException()).when(listener).onComplete(REDEFINED.getName(),REDEFINED.getClassLoader(),JavaModule.ofType(REDEFINED));
  ClassFileTransformer classFileTransformer=new AgentBuilder.Default(byteBuddy).with(initializationStrategy).with(AgentBuilder.RedefinitionStrategy.RETRANSFORMATION).with(typeLocator).with(typeStrategy).with(listener).disableNativeMethodPrefix().with(accessControlContext).type(rawMatcher).transform(transformer).installOn(instrumentation);
  verify(listener).onIgnored(new TypeDescription.ForLoadedType(REDEFINED),REDEFINED.getClassLoader(),JavaModule.ofType(REDEFINED));
  verify(listener).onComplete(REDEFINED.getName(),REDEFINED.getClassLoader(),JavaModule.ofType(REDEFINED));
  verifyNoMoreInteractions(listener);
  verify(instrumentation).addTransformer(classFileTransformer,true);
  verify(instrumentation).isModifiableClass(REDEFINED);
  verify(instrumentation).getAllLoadedClasses();
  verify(instrumentation).isRetransformClassesSupported();
  verifyNoMoreInteractions(instrumentation);
  verify(rawMatcher).matches(new TypeDescription.ForLoadedType(REDEFINED),REDEFINED.getClassLoader(),JavaModule.ofType(REDEFINED),REDEFINED,REDEFINED.getProtectionDomain());
  verifyNoMoreInteractions(rawMatcher);
  verifyZeroInteractions(initializationStrategy);
}
