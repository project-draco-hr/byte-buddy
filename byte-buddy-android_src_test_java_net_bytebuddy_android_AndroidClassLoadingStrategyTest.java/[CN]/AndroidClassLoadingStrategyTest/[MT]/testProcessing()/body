{
  AndroidClassLoadingStrategy.DexProcessor dexProcessor=mock(AndroidClassLoadingStrategy.DexProcessor.class);
  AndroidClassLoadingStrategy.DexProcessor.Conversion conversion=mock(AndroidClassLoadingStrategy.DexProcessor.Conversion.class);
  when(dexProcessor.create()).thenReturn(conversion);
  ClassLoadingStrategy classLoadingStrategy=new AndroidClassLoadingStrategy(directory,dexProcessor);
  Map<TypeDescription,byte[]> unloaded=new HashMap<TypeDescription,byte[]>();
  unloaded.put(first,QUX);
  unloaded.put(second,BAZ);
  Map<TypeDescription,Class<?>> loaded=classLoadingStrategy.load(mock(ClassLoader.class),unloaded);
  assertThat(loaded.size(),is(2));
  assertEquals(DexClassLoader.Target.class,loaded.get(first));
  assertEquals(DexClassLoader.Target.class,loaded.get(second));
  verify(dexProcessor).create();
  verifyNoMoreInteractions(dexProcessor);
  verify(conversion).register(FOO,QUX);
  verify(conversion).register(BAR,BAZ);
  verify(conversion).drainTo(any(OutputStream.class));
  verifyNoMoreInteractions(conversion);
}
