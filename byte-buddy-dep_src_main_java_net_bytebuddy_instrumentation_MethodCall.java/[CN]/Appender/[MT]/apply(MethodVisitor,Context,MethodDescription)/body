{
  MethodDescription invokedMethod=methodLocator.resolve(instrumentedMethod);
  TypeList methodParameters=invokedMethod.getParameterTypes();
  if (methodParameters.size() != argumentLoaders.size()) {
    throw new IllegalStateException(invokedMethod + " does not take " + argumentLoaders.size()+ " arguments");
  }
  int index=0;
  StackManipulation[] argumentInstruction=new StackManipulation[argumentLoaders.size()];
  for (  ArgumentLoader argumentLoader : argumentLoaders) {
    argumentInstruction[index]=argumentLoader.resolve(instrumentationTarget.getTypeDescription(),invokedMethod,methodParameters.get(index++),assigner,dynamicallyTyped);
  }
  StackManipulation.Size size=new StackManipulation.Compound(targetHandler.resolve(invokedMethod,instrumentationTarget.getTypeDescription()),new StackManipulation.Compound(argumentInstruction),methodInvoker.invoke(invokedMethod,instrumentationTarget),terminationHandler.resolve(invokedMethod,instrumentedMethod,assigner,dynamicallyTyped)).apply(methodVisitor,instrumentationContext);
  return new Size(size.getMaximalSize(),instrumentedMethod.getStackSize());
}
