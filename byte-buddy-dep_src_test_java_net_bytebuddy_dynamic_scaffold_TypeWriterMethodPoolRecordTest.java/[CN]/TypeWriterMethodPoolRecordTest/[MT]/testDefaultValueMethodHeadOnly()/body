{
  when(methodDescription.getReturnType()).thenReturn(new TypeDescription.Generic.OfNonGenericType.ForLoadedType(String.class));
  when(parameterDescription.hasModifiers()).thenReturn(true);
  when(parameterDescription.isNamed()).thenReturn(true);
  when(methodDescription.isDefaultValue(new AnnotationValue.ForConstant<String>(FOO))).thenReturn(true);
  TypeWriter.MethodPool.Record record=new TypeWriter.MethodPool.Record.ForDefinedMethod.WithAnnotationDefaultValue(methodDescription,new AnnotationValue.ForConstant<String>(FOO),methodAttributeAppender);
  record.applyHead(methodVisitor);
  verify(methodVisitor).visitAnnotationDefault();
  verifyNoMoreInteractions(methodVisitor);
  verify(annotationVisitor).visit(null,FOO);
  verify(annotationVisitor).visitEnd();
  verifyNoMoreInteractions(annotationVisitor);
  verifyZeroInteractions(implementationContext);
  verifyZeroInteractions(methodAttributeAppender);
}
