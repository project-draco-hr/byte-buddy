{
  this.instrumentedType=instrumentedType;
  this.classFileVersion=classFileVersion;
  this.accessorMethodSuffix=accessorMethodSuffix;
  this.fieldCachePrefix=fieldCachePrefix;
  this.auxiliaryTypeNamingStrategy=auxiliaryTypeNamingStrategy;
  registeredAccessorMethods=new HashMap<Instrumentation.SpecialMethodInvocation,MethodDescription>();
  accessorMethodEntries=new HashMap<MethodDescription,TypeWriter.MethodPool.Entry>();
  auxiliaryTypes=new HashMap<AuxiliaryType,DynamicType>();
  registeredFieldCacheEntries=new HashMap<FieldCacheEntry,FieldDescription>();
  random=new Random();
  canRegisterFieldCache=true;
}
