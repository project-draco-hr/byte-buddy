{
  AsmVisitorWrapper asmVisitorWrapper=mock(AsmVisitorWrapper.class);
  when(asmVisitorWrapper.wrap(any(TypeDescription.class),any(ClassVisitor.class),anyInt(),anyInt())).then(new Answer<ClassVisitor>(){
    @Override public ClassVisitor answer(    InvocationOnMock invocationOnMock) throws Throwable {
      return new ClassVisitor(Opcodes.ASM5,(ClassVisitor)invocationOnMock.getArguments()[1]){
        @Override public void visitEnd(){
          MethodVisitor mv=visitMethod(Opcodes.ACC_PUBLIC,FOO,"()Ljava/lang/String;",null,null);
          mv.visitCode();
          mv.visitLdcInsn(FOO);
          mv.visitInsn(Opcodes.ARETURN);
          mv.visitMaxs(-1,-1);
          mv.visitEnd();
        }
      }
;
    }
  }
);
  when(asmVisitorWrapper.mergeWriter(0)).thenReturn(ClassWriter.COMPUTE_MAXS);
  Class<?> type=createPlain().visit(asmVisitorWrapper).make().load(ClassLoadingStrategy.BOOTSTRAP_LOADER,ClassLoadingStrategy.Default.WRAPPER).getLoaded();
  assertThat(type.getDeclaredMethod(FOO).invoke(type.getConstructor().newInstance()),is((Object)FOO));
  verify(asmVisitorWrapper).mergeWriter(0);
  verify(asmVisitorWrapper,atMost(1)).mergeReader(0);
  verify(asmVisitorWrapper).wrap(any(TypeDescription.class),any(ClassVisitor.class),anyInt(),anyInt());
  verifyNoMoreInteractions(asmVisitorWrapper);
}
