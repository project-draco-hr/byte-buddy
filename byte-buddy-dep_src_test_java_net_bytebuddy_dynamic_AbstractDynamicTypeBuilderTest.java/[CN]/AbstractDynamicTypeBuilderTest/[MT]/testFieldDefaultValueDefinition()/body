{
  Class<?> type=create().defineField(BOOLEAN_FIELD,boolean.class,Visibility.PUBLIC,Ownership.STATIC).value(BOOLEAN_VALUE).defineField(BYTE_FIELD,byte.class,Visibility.PUBLIC,Ownership.STATIC).value(INTEGER_VALUE).defineField(SHORT_FIELD,short.class,Visibility.PUBLIC,Ownership.STATIC).value(INTEGER_VALUE).defineField(CHARACTER_FIELD,char.class,Visibility.PUBLIC,Ownership.STATIC).value(INTEGER_VALUE).defineField(INTEGER_FIELD,int.class,Visibility.PUBLIC,Ownership.STATIC).value(INTEGER_VALUE).defineField(LONG_FIELD,long.class,Visibility.PUBLIC,Ownership.STATIC).value(LONG_VALUE).defineField(FLOAT_FIELD,float.class,Visibility.PUBLIC,Ownership.STATIC).value(FLOAT_VALUE).defineField(DOUBLE_FIELD,double.class,Visibility.PUBLIC,Ownership.STATIC).value(DOUBLE_VALUE).defineField(STRING_FIELD,String.class,Visibility.PUBLIC,Ownership.STATIC).value(FOO).make().load(new URLClassLoader(new URL[0],null),ClassLoadingStrategy.Default.WRAPPER).getLoaded();
  assertThat(type.getDeclaredField(BOOLEAN_FIELD).get(null),is((Object)BOOLEAN_VALUE));
  assertThat(type.getDeclaredField(BYTE_FIELD).get(null),is((Object)(byte)INTEGER_VALUE));
  assertThat(type.getDeclaredField(SHORT_FIELD).get(null),is((Object)(short)INTEGER_VALUE));
  assertThat(type.getDeclaredField(CHARACTER_FIELD).get(null),is((Object)(char)INTEGER_VALUE));
  assertThat(type.getDeclaredField(INTEGER_FIELD).get(null),is((Object)INTEGER_VALUE));
  assertThat(type.getDeclaredField(LONG_FIELD).get(null),is((Object)LONG_VALUE));
  assertThat(type.getDeclaredField(FLOAT_FIELD).get(null),is((Object)FLOAT_VALUE));
  assertThat(type.getDeclaredField(DOUBLE_FIELD).get(null),is((Object)DOUBLE_VALUE));
  assertThat(type.getDeclaredField(STRING_FIELD).get(null),is((Object)FOO));
}
