{
  return instrumentedType.withMethod(new MethodDescription.Token(FOO,MODIFIERS,Collections.<TypeVariableToken>emptyList(),TypeDescription.Generic.OBJECT,Collections.singletonList(new ParameterDescription.Token(TypeDescription.Generic.OBJECT,Collections.singletonList(AnnotationDescription.Builder.ofType(SampleAnnotation.class).define(FOO,QUX).build()))),Collections.singletonList(new TypeDescription.Generic.OfNonGenericType.ForLoadedType(Exception.class)),Collections.singletonList(AnnotationDescription.Builder.ofType(SampleAnnotation.class).define(FOO,BAR).build()),MethodDescription.NO_DEFAULT_VALUE));
}
