{
  return instrumentedType.withMethod(new MethodDescription.Token(FOO,MODIFIERS,Collections.<GenericTypeDescription>emptyList(),GenericTypeDescription.OBJECT,Collections.singletonList(new ParameterDescription.Token(GenericTypeDescription.OBJECT,Collections.singletonList(AnnotationDescription.Builder.forType(SampleAnnotation.class).define(FOO,QUX).make()))),Collections.singletonList(new GenericTypeDescription.ForNonGenericType.OfLoadedType(Exception.class)),Collections.singletonList(AnnotationDescription.Builder.forType(SampleAnnotation.class).define(FOO,BAR).make()),MethodDescription.NO_DEFAULT_VALUE));
}
