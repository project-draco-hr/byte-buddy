{
  return instrumentedType.withMethod(new MethodDescription.Token(FOO,MODIFIERS,Collections.<TypeDescription.Generic>emptyList(),TypeDescription.Generic.OBJECT,Collections.singletonList(new ParameterDescription.Token(TypeDescription.Generic.OBJECT,Collections.singletonList(AnnotationDescription.Builder.forType(SampleAnnotation.class).define(FOO,QUX).make()))),Collections.singletonList(new TypeDescription.Generic.ForNonGenericType.OfLoadedType(Exception.class)),Collections.singletonList(AnnotationDescription.Builder.forType(SampleAnnotation.class).define(FOO,BAR).make()),MethodDescription.NO_DEFAULT_VALUE));
}
