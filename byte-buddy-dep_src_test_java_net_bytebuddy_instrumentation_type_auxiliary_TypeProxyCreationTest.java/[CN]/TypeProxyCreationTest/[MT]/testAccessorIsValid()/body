{
  TypeProxy typeProxy=new TypeProxy(mock(TypeDescription.class),mock(Instrumentation.Target.class),mock(TypeProxy.InvocationFactory.class),false,false);
  TypeProxy.MethodCall methodCall=typeProxy.new MethodCall(mock(AuxiliaryType.MethodAccessorFactory.class));
  TypeDescription instrumentedType=mock(TypeDescription.class);
  FieldList fieldList=mock(FieldList.class);
  when(fieldList.filter(any(ElementMatcher.class))).thenReturn(fieldList);
  when(fieldList.getOnly()).thenReturn(mock(FieldDescription.class));
  when(instrumentedType.getDeclaredFields()).thenReturn(fieldList);
  TypeProxy.MethodCall.Appender appender=methodCall.new Appender(instrumentedType);
  Instrumentation.SpecialMethodInvocation specialMethodInvocation=mock(Instrumentation.SpecialMethodInvocation.class);
  when(specialMethodInvocation.isValid()).thenReturn(true);
  StackManipulation stackManipulation=appender.new AccessorMethodInvocation(mock(MethodDescription.class),specialMethodInvocation);
  assertThat(stackManipulation.isValid(),is(true));
  verify(specialMethodInvocation).isValid();
  verifyNoMoreInteractions(specialMethodInvocation);
}
