{
  MethodRegistry.Compiled compiledMethodRegistry=methodRegistry.compile(applyRecordedMembersTo(new FlatInstrumentedType(classFileVersion,targetType,interfaceTypes,modifiers,namingStrategy)),methodLookupEngineFactory.make(classFileVersion),new SubclassInstrumentationTarget.Factory(bridgeMethodResolverFactory),MethodRegistry.Compiled.Entry.Skip.INSTANCE);
  MethodLookupEngine.Finding finding=compiledMethodRegistry.getFinding();
  TypeExtensionDelegate typeExtensionDelegate=new TypeExtensionDelegate(finding.getTypeDescription(),classFileVersion);
  new TypeWriter.Builder<T>(finding.getTypeDescription(),compiledMethodRegistry.getLoadedTypeInitializer(),typeExtensionDelegate,classFileVersion,TypeWriter.Builder.ClassWriterProvider.CleanCopy.INSTANCE);
  return null;
}
