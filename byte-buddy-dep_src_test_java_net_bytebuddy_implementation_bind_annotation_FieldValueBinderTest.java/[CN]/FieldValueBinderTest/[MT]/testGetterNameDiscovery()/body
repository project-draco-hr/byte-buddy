{
  doReturn(void.class).when(annotation).declaringType();
  when(annotation.value()).thenReturn(FieldValue.Binder.Delegate.BEAN_PROPERTY);
  when(instrumentedType.getDeclaredFields()).thenReturn(new FieldList.Explicit<FieldDescription.InDefinedShape>(fieldDescription));
  when(fieldDescription.getSourceCodeName()).thenReturn(FOO);
  when(fieldDescription.isVisibleTo(instrumentedType)).thenReturn(true);
  when(target.getDeclaredAnnotations()).thenReturn(new AnnotationList.Empty());
  when(stackManipulation.isValid()).thenReturn(true);
  when(source.getInternalName()).thenReturn("getFoo");
  when(source.getSourceCodeName()).thenReturn("getFoo");
  when(source.getReturnType()).thenReturn(TypeDescription.Generic.OBJECT);
  when(source.getParameters()).thenReturn(new ParameterList.Empty<ParameterDescription.InDefinedShape>());
  MethodDelegationBinder.ParameterBinding<?> binding=FieldValue.Binder.INSTANCE.bind(annotationDescription,source,target,implementationTarget,assigner);
  assertThat(binding.isValid(),is(true));
}
