{
  assertThat(primitiveAssigner.assign(boolean.class,boolean.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(boolean.class,byte.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(boolean.class,short.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(boolean.class,char.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(boolean.class,int.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(boolean.class,long.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(boolean.class,float.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(boolean.class,double.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(byte.class,boolean.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(byte.class,byte.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(byte.class,short.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(byte.class,char.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(byte.class,int.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(byte.class,long.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(byte.class,float.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(byte.class,double.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(short.class,boolean.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(short.class,byte.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(short.class,short.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(short.class,char.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(short.class,int.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(short.class,long.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(short.class,float.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(short.class,double.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(char.class,boolean.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(char.class,byte.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(char.class,short.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(char.class,char.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(char.class,int.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(char.class,long.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(char.class,float.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(char.class,double.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(int.class,boolean.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(int.class,byte.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(int.class,short.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(int.class,char.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(int.class,int.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(int.class,long.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(int.class,float.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(int.class,double.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(long.class,boolean.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(long.class,byte.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(long.class,short.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(long.class,char.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(long.class,int.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(long.class,long.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(long.class,float.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(long.class,double.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(float.class,boolean.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(float.class,byte.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(float.class,short.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(float.class,char.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(float.class,int.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(float.class,long.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(float.class,float.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(float.class,double.class,false).isValid(),is(true));
  assertThat(primitiveAssigner.assign(double.class,boolean.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(double.class,byte.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(double.class,short.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(double.class,char.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(double.class,int.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(double.class,long.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(double.class,float.class,false).isValid(),is(false));
  assertThat(primitiveAssigner.assign(double.class,double.class,false).isValid(),is(true));
  verifyZeroInteractions(chainedAssigner);
}
