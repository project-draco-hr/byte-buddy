{
  assertThat(primitiveAssigner.assign(boolean.class,Boolean.class,false).isValid(),is(true));
  verify(chainedAssigner).assign(Boolean.class,Boolean.class,false);
  verifyNoMoreInteractions(chainedAssigner);
  assertThat(primitiveAssigner.assign(byte.class,Byte.class,false).isValid(),is(true));
  verify(chainedAssigner).assign(Byte.class,Byte.class,false);
  verifyNoMoreInteractions(chainedAssigner);
  assertThat(primitiveAssigner.assign(short.class,Short.class,false).isValid(),is(true));
  verify(chainedAssigner).assign(Short.class,Short.class,false);
  verifyNoMoreInteractions(chainedAssigner);
  assertThat(primitiveAssigner.assign(char.class,Character.class,false).isValid(),is(true));
  verify(chainedAssigner).assign(Character.class,Character.class,false);
  verifyNoMoreInteractions(chainedAssigner);
  assertThat(primitiveAssigner.assign(int.class,Integer.class,false).isValid(),is(true));
  verify(chainedAssigner).assign(Integer.class,Integer.class,false);
  verifyNoMoreInteractions(chainedAssigner);
  assertThat(primitiveAssigner.assign(long.class,Long.class,false).isValid(),is(true));
  verify(chainedAssigner).assign(Long.class,Long.class,false);
  verifyNoMoreInteractions(chainedAssigner);
  assertThat(primitiveAssigner.assign(float.class,Float.class,false).isValid(),is(true));
  verify(chainedAssigner).assign(Float.class,Float.class,false);
  verifyNoMoreInteractions(chainedAssigner);
  assertThat(primitiveAssigner.assign(double.class,Double.class,false).isValid(),is(true));
  verify(chainedAssigner).assign(Double.class,Double.class,false);
  verifyNoMoreInteractions(chainedAssigner);
}
