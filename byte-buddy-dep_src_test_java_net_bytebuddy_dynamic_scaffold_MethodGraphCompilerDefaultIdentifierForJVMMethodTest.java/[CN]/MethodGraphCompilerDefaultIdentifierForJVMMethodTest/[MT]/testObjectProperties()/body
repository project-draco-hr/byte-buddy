{
  ObjectPropertyAssertion.of(MethodGraph.Compiler.Default.Identifier.ForJVMMethod.Token.class).create(new ObjectPropertyAssertion.Creator<MethodDescription.Token>(){
    @Override public MethodDescription.Token create(){
      MethodDescription.Token methodToken=mock(MethodDescription.Token.class);
      TypeDescription typeDescription=mock(TypeDescription.class);
      when(typeDescription.asRawType()).thenReturn(typeDescription);
      when(methodToken.getReturnType()).thenReturn(typeDescription);
      when(methodToken.getParameterTokens()).thenReturn(new ByteCodeElement.Token.TokenList<ParameterDescription.Token>(Collections.<ParameterDescription.Token>emptyList()));
      return methodToken;
    }
  }
).applyBasic();
  ObjectPropertyAssertion.of(MethodGraph.Compiler.Default.Identifier.ForJVMMethod.class).apply();
}
