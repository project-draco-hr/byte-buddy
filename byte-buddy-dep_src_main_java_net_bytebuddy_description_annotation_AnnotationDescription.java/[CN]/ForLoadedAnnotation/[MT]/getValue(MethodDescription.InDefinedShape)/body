{
  if (!methodDescription.getDeclaringType().represents(annotation.annotationType())) {
    throw new IllegalArgumentException(methodDescription + " does not represent " + annotation.annotationType());
  }
  try {
    boolean accessible=methodDescription.getDeclaringType().isPublic();
    Method method=methodDescription instanceof MethodDescription.ForLoadedMethod ? ((MethodDescription.ForLoadedMethod)methodDescription).getLoadedMethod() : null;
    if (method == null || (!accessible && !method.isAccessible())) {
      method=annotation.annotationType().getDeclaredMethod(methodDescription.getName());
      if (!accessible) {
        AccessController.doPrivileged(new SetAccessibleAction<Method>(method));
      }
    }
    return describe(method.invoke(annotation),methodDescription.getReturnType().asErasure());
  }
 catch (  Exception exception) {
    throw new IllegalStateException("Cannot access annotation property " + methodDescription,exception.getCause());
  }
}
