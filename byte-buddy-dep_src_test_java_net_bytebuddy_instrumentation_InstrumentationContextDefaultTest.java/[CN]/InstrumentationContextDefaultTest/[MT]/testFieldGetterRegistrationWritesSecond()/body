{
  when(secondField.isStatic()).thenReturn(true);
  Instrumentation.Context.Default instrumentationContext=new Instrumentation.Context.Default(instrumentedType,auxiliaryTypeNamingStrategy,typeInitializer,classFileVersion);
  MethodDescription secondMethodDescription=instrumentationContext.registerGetterFor(secondField);
  assertThat(instrumentationContext.registerGetterFor(secondField),is(secondMethodDescription));
  when(entry.getSort()).thenReturn(TypeWriter.MethodPool.Entry.Sort.SKIP);
  instrumentationContext.drain(classVisitor,methodPool,injectedCode);
  verify(classVisitor).visitMethod(eq(AuxiliaryType.MethodAccessorFactory.ACCESSOR_METHOD_MODIFIER | Opcodes.ACC_STATIC),Matchers.startsWith(BAR),eq("()" + QUX),isNull(String.class),isNull(String[].class));
  verify(methodVisitor).visitCode();
  verify(methodVisitor).visitFieldInsn(Opcodes.GETSTATIC,BAZ,BAR,FOO);
  verify(methodVisitor).visitInsn(Opcodes.ARETURN);
  verify(methodVisitor).visitMaxs(0,0);
  verify(methodVisitor).visitEnd();
}
