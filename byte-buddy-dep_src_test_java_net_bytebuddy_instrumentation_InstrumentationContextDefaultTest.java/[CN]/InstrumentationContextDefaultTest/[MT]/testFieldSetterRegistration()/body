{
  Instrumentation.Context.Default instrumentationContext=new Instrumentation.Context.Default(instrumentedType,typeInitializer,classFileVersion);
  MethodDescription firstFieldSetter=instrumentationContext.registerSetterFor(firstField);
  assertThat(firstFieldSetter.getParameters(),is(ParameterList.Explicit.latent(firstFieldSetter,Collections.singletonList(firstFieldType))));
  assertThat(firstFieldSetter.getReturnType(),is((TypeDescription)new TypeDescription.ForLoadedType(void.class)));
  assertThat(firstFieldSetter.getInternalName(),startsWith(FOO));
  assertThat(firstFieldSetter.getModifiers(),is(AuxiliaryType.MethodAccessorFactory.ACCESSOR_METHOD_MODIFIER));
  assertThat(firstFieldSetter.getExceptionTypes(),is((TypeList)new TypeList.Empty()));
  assertThat(instrumentationContext.registerSetterFor(firstField),is(firstFieldSetter));
  when(secondField.isStatic()).thenReturn(true);
  MethodDescription secondFieldSetter=instrumentationContext.registerSetterFor(secondField);
  assertThat(secondFieldSetter.getParameters(),is(ParameterList.Explicit.latent(secondFieldSetter,Collections.singletonList(secondFieldType))));
  assertThat(secondFieldSetter.getReturnType(),is((TypeDescription)new TypeDescription.ForLoadedType(void.class)));
  assertThat(secondFieldSetter.getInternalName(),startsWith(BAR));
  assertThat(secondFieldSetter.getModifiers(),is(AuxiliaryType.MethodAccessorFactory.ACCESSOR_METHOD_MODIFIER | Opcodes.ACC_STATIC));
  assertThat(secondFieldSetter.getExceptionTypes(),is((TypeList)new TypeList.Empty()));
  assertThat(instrumentationContext.registerSetterFor(firstField),is(firstFieldSetter));
  assertThat(instrumentationContext.registerSetterFor(secondField),is(secondFieldSetter));
  instrumentationContext.drain(classVisitor,methodPool,injectedCode);
  verify(classVisitor).visitMethod(eq(AuxiliaryType.MethodAccessorFactory.ACCESSOR_METHOD_MODIFIER),Matchers.startsWith(FOO),eq("(" + BAR + ")V"),isNull(String.class),isNull(String[].class));
  verify(classVisitor).visitMethod(eq(AuxiliaryType.MethodAccessorFactory.ACCESSOR_METHOD_MODIFIER | Opcodes.ACC_STATIC),Matchers.startsWith(BAR),eq("(" + QUX + ")V"),isNull(String.class),isNull(String[].class));
}
