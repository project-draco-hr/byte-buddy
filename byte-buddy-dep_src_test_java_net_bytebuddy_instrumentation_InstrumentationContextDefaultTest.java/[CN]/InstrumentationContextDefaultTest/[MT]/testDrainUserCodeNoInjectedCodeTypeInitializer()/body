{
  Instrumentation.Context.ExtractableView instrumentationContext=new Instrumentation.Context.Default(instrumentedType,auxiliaryTypeNamingStrategy,typeInitializer,classFileVersion);
  when(entry.getSort()).thenReturn(TypeWriter.MethodPool.Entry.Sort.IMPLEMENT);
  when(typeInitializer.isDefined()).thenReturn(true);
  when(entry.prepend(new ByteCodeAppender.Simple(typeInitializer))).thenReturn(otherEntry);
  instrumentationContext.drain(classVisitor,methodPool,injectedCode);
  verify(entry).getSort();
  verify(entry).prepend(new ByteCodeAppender.Simple(typeInitializer));
  verifyNoMoreInteractions(entry);
  verify(otherEntry).apply(classVisitor,instrumentationContext,MethodDescription.Latent.typeInitializerOf(instrumentedType));
  verify(typeInitializer,atLeast(1)).isDefined();
  verifyNoMoreInteractions(typeInitializer);
  verify(injectedCode,atLeast(1)).isDefined();
  verifyNoMoreInteractions(injectedCode);
}
