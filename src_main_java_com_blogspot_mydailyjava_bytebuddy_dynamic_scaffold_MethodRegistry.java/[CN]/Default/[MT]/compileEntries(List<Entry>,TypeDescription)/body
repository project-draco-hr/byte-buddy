{
  Map<Instrumentation,ByteCodeAppender> byteCodeAppenders=new HashMap<Instrumentation,ByteCodeAppender>(entries.size());
  List<Compiled.Entry> compiledEntries=new LinkedList<Compiled.Entry>();
  for (  Entry entry : entries) {
    if (!byteCodeAppenders.containsKey(entry.instrumentation)) {
      byteCodeAppenders.put(entry.instrumentation,entry.instrumentation.appender(instrumentedType));
    }
    compiledEntries.add(new Compiled.Entry(entry.latentMethodMatcher.manifest(instrumentedType),byteCodeAppenders.get(entry.instrumentation),entry.attributeAppenderFactory.make(instrumentedType)));
  }
  for (  Entry entry : additionalEntries) {
    compiledEntries.add(AT_BEGINNING,new Compiled.Entry(entry.latentMethodMatcher.manifest(instrumentedType),byteCodeAppenders.get(entry.instrumentation),entry.attributeAppenderFactory.make(instrumentedType)));
  }
  return new ArrayList<Compiled.Entry>(compiledEntries);
}
