{
  when(methodDescription.getParameterTypes()).thenReturn(new TypeList.ForLoadedType(new Class<?>[]{int.class,long.class}));
  when(methodDescription.getReturnType()).thenReturn(new TypeDescription.ForLoadedType(void.class));
  when(methodDescription.isStatic()).thenReturn(false);
  when(methodDescription.getParameterSize()).thenReturn(4);
  when(methodDescription.isDeclaredInInterface()).thenReturn(true);
  when(methodDescription.getDeclaringType()).thenReturn(typeDescription);
  when(typeDescription.getInternalName()).thenReturn(FOO);
  when(methodDescription.getInternalName()).thenReturn(BAR);
  when(methodDescription.getDescriptor()).thenReturn(BAZ);
  Assignment assignment=MethodInvocation.of(methodDescription);
  assertThat(assignment.isValid(),is(true));
  Assignment.Size size=assignment.apply(methodVisitor);
  assertThat(size.getSizeImpact(),is(-4));
  assertThat(size.getMaximalSize(),is(0));
  verify(methodDescription,atLeast(1)).isStatic();
  verify(methodDescription,atLeast(1)).getParameterSize();
  verify(methodDescription,atLeast(1)).getReturnType();
  verify(methodDescription,atLeast(1)).getInternalName();
  verify(methodDescription,atLeast(1)).getDeclaringType();
  verify(typeDescription,atLeast(1)).getInternalName();
  verify(methodDescription,atLeast(1)).getDescriptor();
  verify(methodVisitor).visitMethodInsn(Opcodes.INVOKEINTERFACE,FOO,BAR,BAZ);
  verifyNoMoreInteractions(methodVisitor);
  verifyNoMoreInteractions(typeDescription);
}
