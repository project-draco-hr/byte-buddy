{
  when(invokableMethod.isSpecializableFor(rawSuperClass)).thenReturn(true);
  Implementation.SpecialMethodInvocation specialMethodInvocation=makeImplementationTarget().invokeSuper(invokableToken);
  assertThat(specialMethodInvocation.isValid(),is(true));
  assertThat(specialMethodInvocation.getMethodDescription(),is((MethodDescription)invokableMethod));
  assertThat(specialMethodInvocation.getTypeDescription(),is(rawSuperClass));
  MethodVisitor methodVisitor=mock(MethodVisitor.class);
  Implementation.Context implementationContext=mock(Implementation.Context.class);
  StackManipulation.Size size=specialMethodInvocation.apply(methodVisitor,implementationContext);
  verify(methodVisitor).visitMethodInsn(Opcodes.INVOKESPECIAL,BAR,FOO,QUX,false);
  verifyNoMoreInteractions(methodVisitor);
  verifyZeroInteractions(implementationContext);
  assertThat(size.getSizeImpact(),is(0));
  assertThat(size.getMaximalSize(),is(0));
}
