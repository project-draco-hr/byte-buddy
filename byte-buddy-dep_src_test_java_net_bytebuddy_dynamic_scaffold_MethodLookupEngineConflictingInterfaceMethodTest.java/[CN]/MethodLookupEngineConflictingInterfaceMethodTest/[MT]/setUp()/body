{
  when(typeDescription.asRawType()).thenReturn(typeDescription);
  when(firstType.asRawType()).thenReturn(firstType);
  when(secondType.asRawType()).thenReturn(secondType);
  when(thirdType.asRawType()).thenReturn(thirdType);
  when(first.getDeclaringType()).thenReturn(firstType);
  when(second.getDeclaringType()).thenReturn(secondType);
  when(third.getDeclaringType()).thenReturn(thirdType);
  knownMethods=MethodLookupEngine.ConflictingInterfaceMethod.class.getDeclaredField("methodDescriptions");
  knownMethods.setAccessible(true);
}
