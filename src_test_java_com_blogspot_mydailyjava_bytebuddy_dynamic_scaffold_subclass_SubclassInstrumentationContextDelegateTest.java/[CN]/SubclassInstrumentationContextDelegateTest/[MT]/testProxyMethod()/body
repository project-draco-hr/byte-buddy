{
  MethodDescription firstProxyMethod=delegate.requireProxyMethodFor(firstMethod);
  assertThat(firstProxyMethod.isStatic(),is(false));
  assertThat(firstProxyMethod,not(is(firstMethod)));
  MethodDescription secondProxyMethod=delegate.requireProxyMethodFor(secondMethod);
  assertThat(secondProxyMethod.isStatic(),is(true));
  assertThat(secondProxyMethod,not(is(secondMethod)));
  assertThat(delegate.requireProxyMethodFor(firstMethod),is(firstProxyMethod));
  Iterator<MethodDescription> iterator=delegate.getProxiedMethods().iterator();
  assertThat(iterator.hasNext(),is(true));
  MethodDescription next=iterator.next();
  assertThat(next,is(firstProxyMethod));
  assertThat(delegate.target(next),notNullValue());
  assertThat(delegate.target(next).getAttributeAppender(),notNullValue());
  assertThat(delegate.target(next).getByteCodeAppender(),notNullValue());
  assertThat(delegate.target(next).isDefineMethod(),is(true));
  assertThat(iterator.hasNext(),is(true));
  next=iterator.next();
  assertThat(next,is(secondProxyMethod));
  assertThat(delegate.target(next),notNullValue());
  assertThat(delegate.target(next).getAttributeAppender(),notNullValue());
  assertThat(delegate.target(next).getByteCodeAppender(),notNullValue());
  assertThat(delegate.target(next).isDefineMethod(),is(true));
  assertThat(iterator.hasNext(),is(false));
}
