{
  Files.write("plugins {\n" + "    id 'java'\n" + "    id 'application'\n"+ "    id 'net.bytebuddy.byte-buddy'\n"+ "}\n"+ "configurations {\n"+ "    simpleplugin\n"+ "}\n"+ "dependencies {\n"+ "    simpleplugin files(\"" + testPluginJarFile.getAbsolutePath().replace(File.separatorChar,'/') + "\")\n"+ "}\n"+ "byteBuddy {\n"+ "    transformations {\n"+ "        transformation {\n"+ "            plugin = \"net.bytebuddy.test.SimplePlugin\"\n"+ "            classpath = configurations.simpleplugin\n"+ "        }\n"+ "    }\n"+ "}\n"+ "mainClassName = 'foo.Bar'",buildFile,Charset.defaultCharset());
  Files.write("package foo;\npublic class Bar { public String foo() { return \"bar\"; } public static void main(String[] args) { System.out.println(\"foo=\" + new Bar().foo()); } }",new File(testProjectDir.newFolder("src","main","java","foo"),"Bar.java"),Charset.defaultCharset());
  BuildResult result=GradleRunner.create().withPluginClasspath().withProjectDir(testProjectDir.getRoot()).withArguments("-s","run").forwardOutput().build();
  assertEquals(result.task(":classes").getOutcome(),SUCCESS);
  assertTrue(result.getOutput().contains("foo=qux"));
}
