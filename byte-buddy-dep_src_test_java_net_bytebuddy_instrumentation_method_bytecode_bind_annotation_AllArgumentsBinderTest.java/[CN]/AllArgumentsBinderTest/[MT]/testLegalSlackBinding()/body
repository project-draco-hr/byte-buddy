{
  when(annotation.value()).thenReturn(AllArguments.Assignment.SLACK);
  when(stackManipulation.isValid()).thenReturn(false);
  when(sourceTypeList.iterator()).thenReturn(Arrays.asList(firstSourceType,secondSourceType).iterator());
  when(source.isStatic()).thenReturn(false);
  when(targetType.isArray()).thenReturn(true);
  when(targetType.getComponentType()).thenReturn(componentType);
  when(componentType.getStackSize()).thenReturn(StackSize.SINGLE);
  when(targetTypeList.get(1)).thenReturn(targetType);
  when(targetTypeList.size()).thenReturn(2);
  when(target.getParameterAnnotations()).thenReturn(new Annotation[2][0]);
  when(componentType.getInternalName()).thenReturn(FOO);
  MethodDelegationBinder.ParameterBinding<?> parameterBinding=AllArguments.Binder.INSTANCE.bind(annotation,1,source,target,instrumentationTarget,assigner);
  MethodVisitor methodVisitor=mock(MethodVisitor.class);
  Instrumentation.Context instrumentationContext=mock(Instrumentation.Context.class);
  StackManipulation.Size size=parameterBinding.apply(methodVisitor,instrumentationContext);
  assertThat(size.getSizeImpact(),is(1));
  assertThat(size.getMaximalSize(),is(1));
  verify(methodVisitor).visitInsn(Opcodes.ICONST_0);
  verify(methodVisitor).visitTypeInsn(Opcodes.ANEWARRAY,FOO);
  verifyNoMoreInteractions(methodVisitor);
  verifyZeroInteractions(instrumentationContext);
  assertThat(parameterBinding.isValid(),is(true));
  verify(source,atLeast(1)).getParameterTypes();
  verify(source,atLeast(1)).isStatic();
  verify(target,atLeast(1)).getParameterTypes();
  verify(target,atLeast(1)).getParameterAnnotations();
  verify(assigner).assign(firstSourceType,componentType,false);
  verify(assigner).assign(secondSourceType,componentType,false);
  verifyNoMoreInteractions(assigner);
}
