{
  when(instrumentedType.getTypeVariables()).thenReturn(new TypeList.Generic.Explicit(annotatedTypeVariable));
  when(annotatedTypeVariable.getDeclaredAnnotations()).thenReturn(new AnnotationList.ForLoadedAnnotations(new QuxBaz.Instance()));
  when(annotatedTypeVariableBound.getDeclaredAnnotations()).thenReturn(new AnnotationList.ForLoadedAnnotations(new QuxBaz.Instance()));
  when(instrumentedType.getInterfaces()).thenReturn(new TypeList.Generic.Empty());
  when(instrumentedType.getDeclaredAnnotations()).thenReturn(new AnnotationList.Empty());
  TypeAttributeAppender.ForInstrumentedType.INSTANCE.apply(classVisitor,instrumentedType,annotationValueFilter);
  verify(classVisitor).visitTypeAnnotation(TypeReference.newTypeParameterReference(TypeReference.CLASS_TYPE_PARAMETER,0).getValue(),null,Type.getDescriptor(QuxBaz.class),false);
  verify(classVisitor).visitTypeAnnotation(TypeReference.newTypeParameterBoundReference(TypeReference.CLASS_TYPE_PARAMETER_BOUND,0,0).getValue(),null,Type.getDescriptor(QuxBaz.class),false);
  verifyNoMoreInteractions(classVisitor);
  verify(instrumentedType).getDeclaredAnnotations();
  verify(instrumentedType).getSuperClass();
  verify(instrumentedType).getInterfaces();
  verify(instrumentedType).getTypeVariables();
  verifyNoMoreInteractions(instrumentedType);
}
