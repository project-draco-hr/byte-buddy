{
  testClassBase$foo=new MethodDescription.ForMethod(TestClassBase.class.getDeclaredMethod(FOO_METHOD_NAME));
  testClassBase$bar=new MethodDescription.ForMethod(TestClassBase.class.getDeclaredMethod(BAR_METHOD_NAME,Object.class));
  testClassBase$baz=new MethodDescription.ForMethod(TestClassBase.class.getDeclaredMethod(BAZ_METHOD_NAME));
  testClassBase$qux=new MethodDescription.ForMethod(TestClassBase.class.getDeclaredMethod(QUX_METHOD_NAME));
  testClassBase$fin=new MethodDescription.ForMethod(TestClassBase.class.getDeclaredMethod(FIN_METHOD_NAME + "1"));
  testClassBase$stat=new MethodDescription.ForMethod(TestClassBase.class.getDeclaredMethod(STAT_METHOD_NAME));
  testClassBase$compareTo$synth=new MethodDescription.ForMethod(TestClassBase.class.getDeclaredMethod(GENERIC_INTERFACE_METHOD_NAME,Object.class));
  testClassBase$compareTo=new MethodDescription.ForMethod(TestClassBase.class.getDeclaredMethod(GENERIC_INTERFACE_METHOD_NAME,String.class));
  testClassExtension$foo=new MethodDescription.ForMethod(TestClassExtension.class.getDeclaredMethod(FOO_METHOD_NAME));
  testClassExtension$bar=new MethodDescription.ForMethod(TestClassExtension.class.getDeclaredMethod(BAR_METHOD_NAME,Object.class));
  testClassExtension$baz=new MethodDescription.ForMethod(TestClassExtension.class.getDeclaredMethod(BAZ_METHOD_NAME));
  testClassExtension$qux=new MethodDescription.ForMethod(TestClassExtension.class.getDeclaredMethod(QUX_METHOD_NAME));
  testClassExtension$fin=new MethodDescription.ForMethod(TestClassExtension.class.getDeclaredMethod(FIN_METHOD_NAME + "2"));
  testClassExtension$stat=new MethodDescription.ForMethod(TestClassExtension.class.getDeclaredMethod(STAT_METHOD_NAME));
  object$hashCode=new MethodDescription.ForMethod(Object.class.getDeclaredMethod(HASH_CODE_METHOD_NAME));
  object$finalize=new MethodDescription.ForMethod(Object.class.getDeclaredMethod(FINALIZE_METHOD_NAME));
  testModifier$finalize=new MethodDescription.ForMethod(TestModifier.class.getDeclaredMethod(FINALIZE_METHOD_NAME));
  testClassBase$foobar=new MethodDescription.ForMethod(TestClassBase.class.getDeclaredMethod(FOOBAR_METHOD_NAME));
  testClassExtension$fooBar=new MethodDescription.ForMethod(TestClassExtension.class.getDeclaredMethod(FOOBAR_METHOD_NAME));
  testBean$getter=new MethodDescription.ForMethod(TestBean.class.getDeclaredMethod(GET_PROPERTY_METHOD_NAME));
  testBean$setter=new MethodDescription.ForMethod(TestBean.class.getDeclaredMethod(SET_PROPERTY_METHOD_NAME,String.class));
  testModifier$sync=new MethodDescription.ForMethod(TestModifier.class.getDeclaredMethod(SYNC_METHOD_NAME));
  testModifier$varargs=new MethodDescription.ForMethod(TestModifier.class.getDeclaredMethod(VARARGS_METHOD_NAME,Object[].class));
  testModifier$strict=new MethodDescription.ForMethod(TestModifier.class.getDeclaredMethod(STRICT_METHOD_NAME));
  testModifier$constructor=new MethodDescription.ForConstructor(TestModifier.class.getDeclaredConstructor());
  testClassBase$constructor=new MethodDescription.ForConstructor(TestClassBase.class.getDeclaredConstructor());
}
