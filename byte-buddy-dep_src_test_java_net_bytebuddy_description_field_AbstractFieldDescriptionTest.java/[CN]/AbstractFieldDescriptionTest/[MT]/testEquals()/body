{
  FieldDescription identical=describe(first);
  assertThat(identical,is(identical));
  FieldDescription equalFirst=mock(FieldDescription.class);
  when(equalFirst.getName()).thenReturn(first.getName());
  when(equalFirst.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(FirstSample.class));
  assertThat(describe(first),is(equalFirst));
  FieldDescription equalSecond=mock(FieldDescription.class);
  when(equalSecond.getName()).thenReturn(second.getName());
  when(equalSecond.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(SecondSample.class));
  assertThat(describe(second),is(equalSecond));
  FieldDescription equalFirstTypeOnly=mock(FieldDescription.class);
  when(equalFirstTypeOnly.getName()).thenReturn(second.getName());
  when(equalFirstTypeOnly.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(FirstSample.class));
  assertThat(describe(first),not(equalFirstTypeOnly));
  FieldDescription equalFirstNameOnly=mock(FieldDescription.class);
  when(equalFirstNameOnly.getName()).thenReturn(first.getName());
  when(equalFirstNameOnly.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(SecondSample.class));
  assertThat(describe(first),not(equalFirstNameOnly));
  assertThat(describe(first),not(equalSecond));
  assertThat(describe(first),not(new Object()));
  assertThat(describe(first),not(equalTo(null)));
}
