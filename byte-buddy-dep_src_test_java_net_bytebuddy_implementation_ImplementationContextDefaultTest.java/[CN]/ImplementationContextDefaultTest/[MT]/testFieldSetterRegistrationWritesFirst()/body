{
  Implementation.Context.Default implementationContext=new Implementation.Context.Default(instrumentedType,classFileVersion,auxiliaryTypeNamingStrategy,typeInitializer,auxiliaryClassFileVersion);
  MethodDescription firstMethodDescription=implementationContext.registerSetterFor(firstField);
  assertThat(implementationContext.registerSetterFor(firstField),is(firstMethodDescription));
  when(record.getSort()).thenReturn(TypeWriter.MethodPool.Record.Sort.SKIPPED);
  implementationContext.drain(classVisitor,methodPool,injectedCode,annotationValueFilterFactory);
  verify(classVisitor).visitMethod(eq(accessorMethodModifiers),Matchers.startsWith(FOO),eq("(" + BAR + ")V"),isNull(String.class),isNull(String[].class));
  verify(methodVisitor).visitCode();
  verify(methodVisitor).visitVarInsn(Opcodes.ALOAD,0);
  verify(methodVisitor).visitVarInsn(Opcodes.ALOAD,1);
  verify(methodVisitor).visitFieldInsn(Opcodes.PUTFIELD,QUX,FOO,BAR);
  verify(methodVisitor).visitInsn(Opcodes.RETURN);
  verify(methodVisitor).visitMaxs(2,1);
  verify(methodVisitor).visitEnd();
}
