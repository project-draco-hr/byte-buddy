{
  when(secondField.isStatic()).thenReturn(true);
  Implementation.Context.Default implementationContext=new Implementation.Context.Default(instrumentedType,classFileVersion,auxiliaryTypeNamingStrategy,typeInitializer,auxiliaryClassFileVersion);
  MethodDescription secondMethodDescription=implementationContext.registerGetterFor(secondField);
  assertThat(implementationContext.registerGetterFor(secondField),is(secondMethodDescription));
  when(record.getSort()).thenReturn(TypeWriter.MethodPool.Record.Sort.SKIPPED);
  implementationContext.drain(classVisitor,methodPool,injectedCode,annotationValueFilterFactory);
  verify(classVisitor).visitMethod(eq(accessorMethodModifiers | Opcodes.ACC_STATIC),Matchers.startsWith(BAR),eq("()" + QUX),isNull(String.class),isNull(String[].class));
  verify(methodVisitor).visitCode();
  verify(methodVisitor).visitFieldInsn(Opcodes.GETSTATIC,BAZ,BAR,FOO);
  verify(methodVisitor).visitInsn(Opcodes.ARETURN);
  verify(methodVisitor).visitMaxs(0,0);
  verify(methodVisitor).visitEnd();
}
