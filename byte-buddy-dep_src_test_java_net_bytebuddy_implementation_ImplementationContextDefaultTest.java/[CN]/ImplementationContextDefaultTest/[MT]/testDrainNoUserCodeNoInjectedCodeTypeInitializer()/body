{
  Implementation.Context.ExtractableView implementationContext=new Implementation.Context.Default(instrumentedType,classFileVersion,auxiliaryTypeNamingStrategy,typeInitializer,auxiliaryClassFileVersion);
  when(record.getSort()).thenReturn(TypeWriter.MethodPool.Record.Sort.SKIPPED);
  when(typeInitializer.isDefined()).thenReturn(true);
  when(typeInitializer.withReturn()).thenReturn(terminationAppender);
  implementationContext.drain(classVisitor,methodPool,injectedCode,annotationValueFilterFactory,supportsBridges);
  verify(record).getSort();
  verifyNoMoreInteractions(record);
  verify(typeInitializer,atLeast(1)).isDefined();
  verify(typeInitializer).withReturn();
  verifyNoMoreInteractions(typeInitializer);
  verify(injectedCode,atLeast(1)).isDefined();
  verifyNoMoreInteractions(injectedCode);
  verify(terminationAppender).apply(methodVisitor,implementationContext,new MethodDescription.Latent.TypeInitializer(instrumentedType));
  verifyNoMoreInteractions(terminationAppender);
}
