{
  final int sourceIndex=2, targetIndex=1;
  when(assigner.assign(any(Class.class),any(Class.class),anyBoolean())).thenReturn(LegalTrivialAssignment.INSTANCE);
  when(annotation.value()).thenReturn(sourceIndex);
  when(source.getParameterTypes()).thenReturn(new Class<?>[]{null,null,Object.class});
  when(source.isStatic()).thenReturn(false);
  when(target.getParameterTypes()).thenReturn(new Class<?>[]{null,Void.class});
  when(target.getParameterAnnotations()).thenReturn(new Annotation[targetIndex + 1][0]);
  AnnotationDrivenBinder.ArgumentBinder.IdentifiedBinding<?> identifiedBinding=Argument.Binder.INSTANCE.bind(annotation,targetIndex,source,target,typeDescription,assigner);
  assertThat(identifiedBinding.isValid(),is(true));
  Object expectedToken=new MostSpecificTypeResolver.ParameterIndexToken(sourceIndex);
  assertThat(identifiedBinding.getIdentificationToken(),equalTo(expectedToken));
  assertThat(identifiedBinding.getIdentificationToken().hashCode(),equalTo(expectedToken.hashCode()));
  verify(annotation,atLeast(1)).value();
  verify(source,atLeast(1)).getParameterTypes();
  verify(source,atLeast(1)).isStatic();
  verify(target,atLeast(1)).getParameterTypes();
  verify(target,atLeast(1)).getParameterAnnotations();
  verify(assigner).assign(Object.class,Void.class,false);
  verifyNoMoreInteractions(assigner);
}
