{
  assertThat(ByteBuddyAgent.install(),instanceOf(Instrumentation.class));
  assertThat(classLoader.loadClass(SimpleType.class.getName()).getName(),is(SimpleType.class.getName()));
  ClassFileTransformer classFileTransformer=new AgentBuilder.Default().withInitializationStrategy(AgentBuilder.InitializationStrategy.NoOp.INSTANCE).withTypeStrategy(AgentBuilder.TypeStrategy.Default.REDEFINE).withRedefinitionStrategy(AgentBuilder.RedefinitionStrategy.RETRANSFORMATION).type(isAnnotatedWith(ShouldRebase.class),ElementMatchers.is(classLoader)).transform(new AgentBuilder.Transformer(){
    @Override public DynamicType.Builder<?> transform(    DynamicType.Builder<?> builder,    TypeDescription typeDescription){
      return builder.method(named(FOO)).intercept(FixedValue.value(RandomString.make()));
    }
  }
).installOnByteBuddyAgent();
  ByteBuddyAgent.getInstrumentation().removeTransformer(classFileTransformer);
  Class<?> type=classLoader.loadClass(SimpleType.class.getName());
  System.out.println(type.getDeclaredMethod(FOO).invoke(type.newInstance()));
  new AgentBuilder.Default().withInitializationStrategy(AgentBuilder.InitializationStrategy.NoOp.INSTANCE).withTypeStrategy(AgentBuilder.TypeStrategy.Default.REDEFINE).withRedefinitionStrategy(AgentBuilder.RedefinitionStrategy.RETRANSFORMATION).type(isAnnotatedWith(ShouldRebase.class),ElementMatchers.is(classLoader)).transform(new AgentBuilder.Transformer(){
    @Override public DynamicType.Builder<?> transform(    DynamicType.Builder<?> builder,    TypeDescription typeDescription){
      return builder.method(named(FOO)).intercept(FixedValue.value(RandomString.make()));
    }
  }
).installOnByteBuddyAgent();
  Class<?> type2=classLoader.loadClass(SimpleType.class.getName());
  System.out.println(type2.getDeclaredMethod(FOO).invoke(type.newInstance()));
}
