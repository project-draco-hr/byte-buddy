{
  assertThat(ByteBuddyAgent.install(),instanceOf(Instrumentation.class));
  AgentBuilder agentBuilder=new AgentBuilder.Default().with(poolStrategy).ignore(none()).type(isAnnotatedWith(ShouldRebase.class),ElementMatchers.is(classLoader)).transform(new QuxTransformer());
  ClassFileTransformer firstTransformer=agentBuilder.installOnByteBuddyAgent();
  ClassFileTransformer secondTransformer=agentBuilder.installOnByteBuddyAgent();
  try {
    Class<?> type=classLoader.loadClass(Qux.class.getName());
    assertThat(type.getDeclaredMethod(FOO).invoke(type.getDeclaredConstructor().newInstance()),is((Object)(FOO + BAR + BAR)));
  }
  finally {
    ByteBuddyAgent.getInstrumentation().removeTransformer(firstTransformer);
    ByteBuddyAgent.getInstrumentation().removeTransformer(secondTransformer);
  }
}
