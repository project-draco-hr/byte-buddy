{
  assertThat(ByteBuddyAgent.install(),instanceOf(Instrumentation.class));
  ClassLoader classLoader=lambdaSamples();
  ClassFileTransformer classFileTransformer=new AgentBuilder.Default().with(binaryLocator).with(AgentBuilder.LambdaInstrumentationStrategy.ENABLED).installOn(ByteBuddyAgent.install());
  try {
    Class<?> sampleFactory=classLoader.loadClass(LAMBDA_SAMPLE_FACTORY);
    @SuppressWarnings("unchecked") Callable<String> instance=(Callable<String>)sampleFactory.getDeclaredMethod("serializable",String.class).invoke(sampleFactory.newInstance(),FOO);
    assertThat(instance.call(),is(FOO));
    ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
    ObjectOutputStream objectOutputStream=new ObjectOutputStream(outputStream);
    objectOutputStream.writeObject(instance);
    objectOutputStream.close();
    ObjectInputStream objectInputStream=new ObjectInputStream(new ByteArrayInputStream(outputStream.toByteArray()));
    @SuppressWarnings("unchecked") Callable<String> deserialized=(Callable<String>)objectInputStream.readObject();
    assertThat(deserialized.call(),is(FOO));
    objectInputStream.close();
  }
  finally {
    ByteBuddyAgent.getInstrumentation().removeTransformer(classFileTransformer);
    AgentBuilder.Default.releaseLambdaTransformer(classFileTransformer,ByteBuddyAgent.getInstrumentation());
  }
}
