{
  GenericTypeDescription genericTypeDescription=describe(GenericArrayType.class.getDeclaredField(FOO));
  assertThat(genericTypeDescription.getSort(),is(GenericTypeDescription.Sort.GENERIC_ARRAY));
  assertThat(genericTypeDescription.getStackSize(),is(StackSize.SINGLE));
  assertThat(genericTypeDescription.getDeclaredFields().size(),is(0));
  assertThat(genericTypeDescription.getDeclaredMethods().size(),is(0));
  assertThat(genericTypeDescription.getParameters().size(),is(0));
  assertThat(genericTypeDescription.getOwnerType(),nullValue(GenericTypeDescription.class));
  assertThat(genericTypeDescription.getSuperType(),is((GenericTypeDescription)TypeDescription.OBJECT));
  assertThat(genericTypeDescription.getInterfaces(),is(TypeDescription.ARRAY_INTERFACES));
  assertThat(genericTypeDescription.getSourceCodeName(),is(GenericArrayType.class.getDeclaredField(FOO).getGenericType().toString()));
  assertThat(genericTypeDescription.getTypeName(),is(GenericArrayType.class.getDeclaredField(FOO).getGenericType().toString()));
  assertThat(genericTypeDescription.toString(),is(GenericArrayType.class.getDeclaredField(FOO).getGenericType().toString()));
  assertThat(genericTypeDescription.hashCode(),is(GenericTypeDescription.Sort.describe(GenericArrayType.class.getDeclaredField(FOO).getGenericType()).hashCode()));
  assertThat(genericTypeDescription,is(GenericTypeDescription.Sort.describe(GenericArrayType.class.getDeclaredField(FOO).getGenericType())));
  assertThat(genericTypeDescription,CoreMatchers.not(GenericTypeDescription.Sort.describe(GenericArrayType.class.getDeclaredField(FOO).getType())));
  assertThat(genericTypeDescription,CoreMatchers.not(new Object()));
  assertThat(genericTypeDescription.equals(null),is(false));
  assertThat(genericTypeDescription.getComponentType().getSort(),is(GenericTypeDescription.Sort.PARAMETERIZED));
  assertThat(genericTypeDescription.getComponentType().getParameters().size(),is(1));
  assertThat(genericTypeDescription.getComponentType().getParameters().getOnly().getSort(),is(GenericTypeDescription.Sort.NON_GENERIC));
  assertThat(genericTypeDescription.getComponentType().getParameters().getOnly().asErasure().represents(String.class),is(true));
  assertThat(genericTypeDescription.getTypeName(),is(GenericArrayType.class.getDeclaredField(FOO).getGenericType().toString()));
}
