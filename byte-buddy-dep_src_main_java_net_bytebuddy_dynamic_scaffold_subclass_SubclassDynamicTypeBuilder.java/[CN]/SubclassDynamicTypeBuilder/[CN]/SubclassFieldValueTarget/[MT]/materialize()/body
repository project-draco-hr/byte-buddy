{
  return new SubclassDynamicTypeBuilder<S>(classFileVersion,namingStrategy,superType,interfaceTypes,modifiers,attributeAppender,ignoredMethods,bridgeMethodResolverFactory,classVisitorWrapperChain,fieldRegistry.include(fieldToken,attributeAppenderFactory,defaultValue),methodRegistry,methodLookupEngineFactory,defaultFieldAttributeAppenderFactory,defaultMethodAttributeAppenderFactory,join(fieldTokens,fieldToken),methodTokens,constructorStrategy);
}
