{
  return new SubclassDynamicTypeBuilder<T>(classFileVersion,namingStrategy,superType,interfaceTypes,modifiers,new TypeAttributeAppender.Compound(this.attributeAppender,nonNull(attributeAppender)),ignoredMethods,bridgeMethodResolverFactory,classVisitorWrapperChain,fieldRegistry,methodRegistry,methodLookupEngineFactory,defaultFieldAttributeAppenderFactory,defaultMethodAttributeAppenderFactory,fieldTokens,methodTokens);
}
