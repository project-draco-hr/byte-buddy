{
  MethodRegistry.Compiled compiledMethodRegistry=constructorStrategy.inject(methodRegistry).prepare(applyConstructorStrategy(instrumentedType),methodGraphCompiler,new InstrumentableMatcher(ignored)).compile(SubclassImplementationTarget.Factory.SUPER_TYPE);
  return TypeWriter.Default.<T>forCreation(compiledMethodRegistry,fieldRegistry.compile(compiledMethodRegistry.getInstrumentedType()),auxiliaryTypeNamingStrategy,implementationContextFactory,asmVisitorWrapper,typeAttributeAppender,classFileVersion,annotationValueFilterFactory).make();
}
