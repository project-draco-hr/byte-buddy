{
  TypeDescription objectType=new TypeDescription.ForLoadedType(Object.class);
  TypeDescription singleMethodOverridingInterface=new TypeDescription.ForLoadedType(SingleMethodOverridingInterface.class);
  TypeDescription abstractFoldedInterfaceClass=new TypeDescription.ForLoadedType(AbstractFoldedInterfaceClass.class);
  MethodLookupEngine.Finding finding=methodLookupEngine.process(abstractFoldedInterfaceClass);
  assertThat(finding.getTypeDescription(),is(abstractFoldedInterfaceClass));
  assertThat(finding.getInvokableMethods(),containsAllOf(abstractFoldedInterfaceClass.getDeclaredMethods()));
  assertThat(finding.getInvokableMethods(),containsAllOf(singleMethodOverridingInterface.getDeclaredMethods()));
  assertThat(finding.getInvokableMethods(),containsAllOf(objectType.getDeclaredMethods().filter(isVirtualTo(abstractFoldedInterfaceClass))));
  assertThat(finding.getInvokableMethods().size(),is(abstractFoldedInterfaceClass.getDeclaredMethods().size() + singleMethodOverridingInterface.getDeclaredMethods().size() + objectType.getDeclaredMethods().filter(isVirtualTo(abstractFoldedInterfaceClass)).size()));
  assertThat(finding.getInvokableDefaultMethods().size(),is(1));
  assertThat(finding.getInvokableDefaultMethods().get(singleMethodOverridingInterface).size(),is(0));
}
