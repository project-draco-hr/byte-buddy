{
  AnnotationRegistrant annotationRegistrant;
  TypeReference typeReference=new TypeReference(rawTypeReference);
switch (typeReference.getSort()) {
case TypeReference.CLASS_EXTENDS:
    annotationRegistrant=new TypeAnnotationOnExtensionCollector(descriptor,typePath,typeReference.getSuperTypeIndex());
  break;
case TypeReference.CLASS_TYPE_PARAMETER:
annotationRegistrant=new TypeAnnotationOnTypeParameterCollector(descriptor,typePath,typeReference.getTypeParameterIndex());
break;
case TypeReference.CLASS_TYPE_PARAMETER_BOUND:
annotationRegistrant=new TypeAnnotationOnTypeParameterBoundCollector(descriptor,typePath,typeReference.getTypeParameterBoundIndex());
break;
default :
throw new IllegalStateException("Unexpected type reference: " + typeReference.getSort());
}
return new AnnotationExtractor(annotationRegistrant,new ComponentTypeLocator.ForAnnotationProperty(Default.this,descriptor));
}
