{
  AnnotationRegistrant annotationRegistrant;
  TypeReference typeReference=new TypeReference(rawTypeReference);
switch (typeReference.getSort()) {
case TypeReference.CLASS_EXTENDS:
    annotationRegistrant=new AnnotationRegistrant.AbstractBase.ForTypeVariable.WithIndex.Adapter(descriptor,typePath,typeReference.getSuperTypeIndex(),superTypeAnnotationTokens);
  break;
case TypeReference.CLASS_TYPE_PARAMETER:
annotationRegistrant=new AnnotationRegistrant.AbstractBase.ForTypeVariable.WithIndex.Adapter(descriptor,typePath,typeReference.getTypeParameterIndex(),typeVariableAnnotationTokens);
break;
case TypeReference.CLASS_TYPE_PARAMETER_BOUND:
annotationRegistrant=new AnnotationRegistrant.AbstractBase.ForTypeVariable.WithIndex.Adapter(descriptor,typePath,typeReference.getTypeParameterBoundIndex(),typeVariableBoundsAnnotationTokens);
break;
default :
throw new IllegalArgumentException("Unexpected type reference: " + typeReference.getSort());
}
return new AnnotationExtractor(annotationRegistrant,new ComponentTypeLocator.ForAnnotationProperty(Default.this,descriptor));
}
