{
  super(Opcodes.ASM5);
  this.modifiers=modifiers;
  this.internalName=internalName;
  this.descriptor=descriptor;
  this.genericSignature=genericSignature;
  this.exceptionName=exceptionName;
  typeVariableAnnotationTokens=new HashMap<Integer,Map<String,List<LazyTypeDescription.AnnotationToken>>>();
  typeVariableBoundAnnotationTokens=new HashMap<Integer,Map<Integer,Map<String,List<LazyTypeDescription.AnnotationToken>>>>();
  returnTypeAnnotationTokens=new HashMap<String,List<LazyTypeDescription.AnnotationToken>>();
  parameterTypeAnnotationTokens=new HashMap<Integer,Map<String,List<LazyTypeDescription.AnnotationToken>>>();
  exceptionTypeAnnotationTokens=new HashMap<Integer,Map<String,List<LazyTypeDescription.AnnotationToken>>>();
  annotationTokens=new ArrayList<LazyTypeDescription.AnnotationToken>();
  parameterAnnotationTokens=new HashMap<Integer,List<LazyTypeDescription.AnnotationToken>>();
  parameterTokens=new ArrayList<LazyTypeDescription.MethodToken.ParameterToken>();
  legacyParameterBag=new ParameterBag(Type.getMethodType(descriptor).getArgumentTypes());
}
