{
  if (name.contains("/")) {
    throw new IllegalArgumentException(name + " contains the illegal character '/'");
  }
  int arity=0;
  while (name.startsWith(ARRAY_SYMBOL)) {
    arity++;
    name=name.substring(1);
  }
  if (arity > 0) {
    String primitiveName=PRIMITIVE_DESCRIPTORS.get(name);
    name=primitiveName == null ? name.substring(1,name.length() - 1) : primitiveName;
  }
  TypeDescription typeDescription=PRIMITIVE_TYPES.get(name);
  Resolution resolution=typeDescription == null ? cacheProvider.find(name) : new Resolution.Simple(typeDescription);
  if (resolution == null) {
    resolution=cacheProvider.register(name,doDescribe(name));
  }
  return ArrayTypeResolution.of(resolution,arity);
}
