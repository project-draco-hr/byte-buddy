{
  if (self == other) {
    return true;
  }
 else   if (!annotationType.isInstance(other)) {
    return false;
  }
 else   if (Proxy.isProxyClass(other.getClass())) {
    InvocationHandler invocationHandler=Proxy.getInvocationHandler(other);
    if (invocationHandler instanceof AnnotationInvocationHandler) {
      return invocationHandler.equals(this);
    }
  }
  try {
    for (    Method method : annotationType.getDeclaredMethods()) {
      Object thisValue=values.get(method);
      if (!PropertyDispatcher.of(thisValue.getClass()).equals(thisValue,method.invoke(other))) {
        return false;
      }
    }
  }
 catch (  InvocationTargetException ignored) {
    return false;
  }
catch (  IllegalAccessException ignored) {
    throw new AssertionError();
  }
  return true;
}
