{
  if (value instanceof TypeDescription) {
    return new Resolved.ForType((TypeDescription)value);
  }
 else   if (value instanceof TypeDescription[]) {
    return ForComplexArray.of((TypeDescription[])value,annotationMethod);
  }
 else   if (value instanceof AnnotationDescription) {
    return new Resolved.ForAnnotation((AnnotationDescription)value);
  }
 else   if (value instanceof AnnotationDescription[]) {
    return ForComplexArray.of((AnnotationDescription[])value,annotationMethod);
  }
 else   if (value instanceof AnnotationDescription.EnumerationValue) {
    return new Resolved.ForEnumeration((AnnotationDescription.EnumerationValue)value);
  }
 else   if (value instanceof AnnotationDescription.EnumerationValue[]) {
    return ForComplexArray.of((AnnotationDescription.EnumerationValue[])value,annotationMethod);
  }
 else   if (value.getClass().isArray()) {
    return new ForArray.Trivial<Object[]>((Object[])value);
  }
 else {
    return new Trivial<Object>(value);
  }
}
