{
  InstrumentedType instrumentedType=makePlainInstrumentedType();
  assertThat(instrumentedType.getDeclaredFields().size(),is(0));
  instrumentedType=instrumentedType.withMethod(BAR,TypeDescription.ArrayProjection.of(instrumentedType,1),Collections.singletonList(TypeDescription.ArrayProjection.of(instrumentedType,1)),Collections.<TypeDescription>emptyList(),Opcodes.ACC_PUBLIC);
  assertThat(instrumentedType.getDeclaredMethods().size(),is(1));
  MethodDescription methodDescription=instrumentedType.getDeclaredMethods().get(0);
  assertThat(methodDescription.getReturnType().isArray(),is(true));
  assertThat(methodDescription.getReturnType().getComponentType(),sameInstance((TypeDescription)instrumentedType));
  assertThat(methodDescription.getParameters().size(),is(1));
  assertThat(methodDescription.getParameters().asTypeList().get(0).isArray(),is(true));
  assertThat(methodDescription.getParameters().asTypeList().get(0).getComponentType(),sameInstance((TypeDescription)instrumentedType));
  assertThat(methodDescription.getExceptionTypes().size(),is(0));
  assertThat(methodDescription.getModifiers(),is(Opcodes.ACC_PUBLIC));
  assertThat(methodDescription.getName(),is(BAR));
  assertThat(methodDescription.getDeclaringType(),sameInstance((TypeDescription)instrumentedType));
}
