{
  when(methodDescription.getReturnType()).thenReturn(TypeDescription.STRING);
  when(methodDescription.isDefaultValue(FOO)).thenReturn(true);
  TypeWriter.MethodPool.Entry entry=new TypeWriter.MethodPool.Entry.ForAnnotationDefaultValue(FOO,methodAttributeAppender,modifierResolver);
  assertThat(entry.getSort(),is(TypeWriter.MethodPool.Entry.Sort.DEFINE));
  entry.apply(classVisitor,implementationContext,methodDescription);
  verify(classVisitor).visitMethod(MODIFIERS,FOO,BAR,QUX,new String[]{BAZ});
  verifyNoMoreInteractions(classVisitor);
  verify(methodVisitor).visitAnnotationDefault();
  verify(methodVisitor).visitEnd();
  verifyNoMoreInteractions(methodVisitor);
  verify(annotationVisitor).visit(null,FOO);
  verify(annotationVisitor).visitEnd();
  verifyNoMoreInteractions(annotationVisitor);
  verifyZeroInteractions(implementationContext);
  verify(methodAttributeAppender).apply(methodVisitor,methodDescription);
  verifyNoMoreInteractions(methodAttributeAppender);
}
