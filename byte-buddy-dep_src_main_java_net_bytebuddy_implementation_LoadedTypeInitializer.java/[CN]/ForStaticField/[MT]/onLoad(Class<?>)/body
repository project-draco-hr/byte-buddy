{
  try {
    Field field=type.getDeclaredField(fieldName);
    if (!Modifier.isPublic(field.getModifiers()) || !Modifier.isPublic(field.getDeclaringClass().getModifiers())) {
      AccessController.doPrivileged(AccessAction.of(field));
    }
    field.set(STATIC_FIELD,value);
  }
 catch (  IllegalAccessException exception) {
    throw new IllegalArgumentException("Cannot access " + fieldName + " from "+ type,exception);
  }
catch (  NoSuchFieldException exception) {
    throw new IllegalStateException("There is no field " + fieldName + " defined on "+ type,exception);
  }
}
