{
  DynamicType.Loaded<Foo> loaded=implement(Foo.class,ExceptionMethod.throwing(RuntimeException.class));
  assertThat(loaded.getLoadedAuxiliaryTypes().size(),is(0));
  assertThat(loaded.getLoaded().getDeclaredMethods().length,is(1));
  assertThat(loaded.getLoaded().getDeclaredFields().length,is(0));
  Foo instance=loaded.getLoaded().getConstructor().newInstance();
  assertThat(instance.getClass(),not(CoreMatchers.<Class<?>>is(Foo.class)));
  assertThat(instance,instanceOf(Foo.class));
  try {
    instance.foo();
    fail();
  }
 catch (  RuntimeException exception) {
    assertThat(exception.getClass(),CoreMatchers.<Class<?>>is(RuntimeException.class));
    assertThat(exception.getMessage(),nullValue());
  }
  instance.assertZeroCalls();
}
