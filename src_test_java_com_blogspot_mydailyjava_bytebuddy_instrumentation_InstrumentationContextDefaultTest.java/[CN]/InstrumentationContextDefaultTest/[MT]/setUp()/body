{
  defaultContext=new Instrumentation.Context.Default(auxiliaryTypeNamingStrategy,methodProxyFactory);
  when(firstAuxiliary.make(any(String.class),any(AuxiliaryType.MethodProxyFactory.class))).thenReturn((DynamicType)firstDynamic);
  when(secondAuxiliary.make(any(String.class),any(AuxiliaryType.MethodProxyFactory.class))).thenReturn((DynamicType)secondDynamic);
  when(firstDynamic.getName()).thenReturn(FOO);
  when(secondDynamic.getName()).thenReturn(BAR);
  when(auxiliaryTypeNamingStrategy.name(any(AuxiliaryType.class))).thenReturn(QUX,BAZ);
  when(methodProxyFactory.requireProxyMethodFor(firstMethod)).thenReturn(firstProxyMethod);
  when(methodProxyFactory.requireProxyMethodFor(secondMethod)).thenReturn(secondProxyMethod);
}
