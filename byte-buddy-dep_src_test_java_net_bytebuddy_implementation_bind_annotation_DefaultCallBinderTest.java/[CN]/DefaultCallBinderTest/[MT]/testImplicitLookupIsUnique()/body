{
  when(targetParameterType.represents(any(Class.class))).thenReturn(true);
  when(specialMethodInvocation.isValid()).thenReturn(true,false);
  doReturn(VOID_TYPE).when(annotation).targetType();
  when(source.getUniqueSignature()).thenReturn(FOO);
  when(source.isSpecializableFor(interface1)).thenReturn(true);
  when(instrumentedType.getInterfaces()).thenReturn(new TypeList.Explicit(Arrays.asList(interface1,interface2)));
  MethodDelegationBinder.ParameterBinding<?> parameterBinding=DefaultCall.Binder.INSTANCE.bind(annotationDescription,source,target,implementationTarget,assigner);
  assertThat(parameterBinding.isValid(),is(true));
  verify(implementationTarget).getTypeDescription();
  verify(implementationTarget).invokeDefault(interface1,FOO);
  verifyNoMoreInteractions(implementationTarget);
}
