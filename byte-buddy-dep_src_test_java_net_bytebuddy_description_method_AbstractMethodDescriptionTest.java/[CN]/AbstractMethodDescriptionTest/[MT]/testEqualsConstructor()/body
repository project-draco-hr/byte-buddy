{
  MethodDescription identical=describe(firstConstructor);
  assertThat(identical,is(identical));
  assertThat(describe(firstConstructor),is(describe(firstConstructor)));
  assertThat(describe(firstConstructor),not(describe(secondConstructor)));
  assertThat(describe(firstConstructor),not(describe(firstMethod)));
  assertThat(describe(firstConstructor),not(describe(secondMethod)));
  assertThat(describe(firstConstructor),not(describe(thirdMethod)));
  assertThat(describe(firstConstructor),is((MethodDescription)new MethodDescription.ForLoadedConstructor(firstConstructor)));
  assertThat(describe(firstConstructor),not((MethodDescription)new MethodDescription.ForLoadedConstructor(secondConstructor)));
  assertThat(describe(firstConstructor),not((MethodDescription)new MethodDescription.ForLoadedMethod(firstMethod)));
  assertThat(describe(firstConstructor),not((MethodDescription)new MethodDescription.ForLoadedMethod(secondMethod)));
  assertThat(describe(firstConstructor),not((MethodDescription)new MethodDescription.ForLoadedMethod(thirdMethod)));
  MethodDescription.InDefinedShape equalMethod=mock(MethodDescription.InDefinedShape.class);
  when(equalMethod.getInternalName()).thenReturn(MethodDescription.CONSTRUCTOR_INTERNAL_NAME);
  when(equalMethod.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(firstConstructor.getDeclaringClass()));
  when(equalMethod.getReturnType()).thenReturn(new TypeDescription.ForLoadedType(void.class));
  when(equalMethod.getParameters()).thenReturn(new ParameterList.Explicit.ForTypes(equalMethod,new TypeList.ForLoadedTypes(firstConstructor.getParameterTypes())));
  assertThat(describe(firstConstructor),is(equalMethod));
  MethodDescription.InDefinedShape equalMethodButName=mock(MethodDescription.InDefinedShape.class);
  when(equalMethodButName.getInternalName()).thenReturn(firstMethod.getName());
  when(equalMethodButName.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(firstConstructor.getDeclaringClass()));
  when(equalMethodButName.getReturnType()).thenReturn(new TypeDescription.ForLoadedType(void.class));
  when(equalMethodButName.getParameters()).thenReturn(new ParameterList.Explicit.ForTypes(equalMethodButName,new TypeList.ForLoadedTypes(firstConstructor.getParameterTypes())));
  assertThat(describe(firstConstructor),not(equalMethodButName));
  MethodDescription.InDefinedShape equalMethodButReturnType=mock(MethodDescription.InDefinedShape.class);
  when(equalMethodButReturnType.getInternalName()).thenReturn(MethodDescription.CONSTRUCTOR_INTERNAL_NAME);
  when(equalMethodButReturnType.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(Object.class));
  when(equalMethodButReturnType.getReturnType()).thenReturn(new TypeDescription.ForLoadedType(void.class));
  when(equalMethodButReturnType.getParameters()).thenReturn(new ParameterList.Explicit.ForTypes(equalMethodButReturnType,new TypeList.ForLoadedTypes(firstConstructor.getParameterTypes())));
  assertThat(describe(firstConstructor),not(equalMethodButReturnType));
  MethodDescription.InDefinedShape equalMethodButDeclaringType=mock(MethodDescription.InDefinedShape.class);
  when(equalMethodButDeclaringType.getInternalName()).thenReturn(MethodDescription.CONSTRUCTOR_INTERNAL_NAME);
  when(equalMethodButDeclaringType.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(firstConstructor.getDeclaringClass()));
  when(equalMethodButDeclaringType.getReturnType()).thenReturn(new TypeDescription.ForLoadedType(Object.class));
  when(equalMethodButDeclaringType.getParameters()).thenReturn(new ParameterList.Explicit.ForTypes(equalMethodButDeclaringType,new TypeList.ForLoadedTypes(firstConstructor.getParameterTypes())));
  assertThat(describe(firstConstructor),not(equalMethodButDeclaringType));
  MethodDescription.InDefinedShape equalMethodButParameterTypes=mock(MethodDescription.InDefinedShape.class);
  when(equalMethodButParameterTypes.getInternalName()).thenReturn(MethodDescription.CONSTRUCTOR_INTERNAL_NAME);
  when(equalMethodButParameterTypes.getDeclaringType()).thenReturn(new TypeDescription.ForLoadedType(firstConstructor.getDeclaringClass()));
  when(equalMethodButParameterTypes.getReturnType()).thenReturn(new TypeDescription.ForLoadedType(void.class));
  when(equalMethodButParameterTypes.getParameters()).thenReturn(new ParameterList.Explicit.ForTypes(equalMethodButParameterTypes,new TypeList.ForLoadedTypes(secondConstructor.getParameterTypes())));
  assertThat(describe(firstConstructor),not(equalMethodButParameterTypes));
  assertThat(describe(firstConstructor),not(new Object()));
  assertThat(describe(firstConstructor),not(equalTo(null)));
}
