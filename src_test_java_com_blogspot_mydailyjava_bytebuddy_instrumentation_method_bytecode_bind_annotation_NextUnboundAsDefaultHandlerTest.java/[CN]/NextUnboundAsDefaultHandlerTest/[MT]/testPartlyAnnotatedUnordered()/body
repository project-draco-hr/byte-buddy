{
  Argument indexOneArgument=mock(Argument.class);
  when(indexOneArgument.value()).thenReturn(1);
  doReturn(Argument.class).when(indexOneArgument).annotationType();
  when(source.getParameterTypes()).thenReturn(makeTypeList(Void.class,Void.class));
  when(target.getParameterAnnotations()).thenReturn(new Annotation[][]{{indexOneArgument},{}});
  Iterator<Argument> iterator=Argument.NextUnboundAsDefaultProvider.INSTANCE.makeIterator(typeDescription,source,target);
  assertThat(iterator.hasNext(),is(true));
  assertThat(iterator.next().value(),is(0));
  assertThat(iterator.hasNext(),is(false));
  verify(source,atLeast(1)).getParameterTypes();
  verify(target,atLeast(1)).getParameterAnnotations();
  verifyZeroInteractions(typeDescription);
}
