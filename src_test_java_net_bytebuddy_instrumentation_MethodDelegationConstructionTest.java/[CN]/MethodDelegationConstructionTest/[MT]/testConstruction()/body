{
  DynamicType.Loaded<T> loaded=instrument(sourceType,MethodDelegation.construct(targetType));
  assertThat(loaded.getLoadedAuxiliaryTypes().size(),is(0));
  assertThat(loaded.getLoaded().getDeclaredMethods().length,is(1));
  assertThat(loaded.getLoaded().getDeclaredFields().length,is(0));
  T instance=loaded.getLoaded().newInstance();
  assertNotEquals(sourceType,instance.getClass());
  assertThat(instance,instanceOf(sourceType));
  Object value=loaded.getLoaded().getDeclaredMethod(FOO,parameterTypes).invoke(instance,arguments);
  assertThat(value,instanceOf(targetType));
  Field field=targetType.getDeclaredField("value");
  field.setAccessible(true);
  assertThat(field.get(value),(Matcher)matcher);
  instance.assertZeroCalls();
}
