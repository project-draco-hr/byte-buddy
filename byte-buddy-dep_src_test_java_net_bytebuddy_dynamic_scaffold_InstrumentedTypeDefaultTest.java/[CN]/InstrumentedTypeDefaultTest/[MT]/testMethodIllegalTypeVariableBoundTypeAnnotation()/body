{
  makePlainInstrumentedType().withMethod(new MethodDescription.Token(FOO,ModifierContributor.EMPTY_MASK,Collections.singletonList(new TypeVariableToken(FOO,Collections.singletonList(TypeDescription.Generic.Builder.rawType(Object.class).build(AnnotationDescription.Builder.ofType(IncompatibleAnnotation.class).build())))),TypeDescription.Generic.OBJECT,Collections.<ParameterDescription.Token>emptyList(),Collections.<TypeDescription.Generic>emptyList(),Collections.<AnnotationDescription>emptyList(),MethodDescription.NO_DEFAULT_VALUE,TypeDescription.Generic.UNDEFINED)).validated();
}
