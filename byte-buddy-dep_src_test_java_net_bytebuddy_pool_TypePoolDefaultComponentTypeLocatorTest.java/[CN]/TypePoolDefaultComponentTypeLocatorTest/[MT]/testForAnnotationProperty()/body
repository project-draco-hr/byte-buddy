{
  TypePool typePool=mock(TypePool.class);
  TypeDescription typeDescription=mock(TypeDescription.class);
  when(typePool.describe(BAR)).thenReturn(new TypePool.Resolution.Simple(typeDescription));
  MethodDescription.InDefinedShape methodDescription=mock(MethodDescription.InDefinedShape.class);
  when(typeDescription.getDeclaredMethods()).thenReturn(new MethodList.Explicit<MethodDescription.InDefinedShape>(Collections.singletonList(methodDescription)));
  when(methodDescription.getSourceCodeName()).thenReturn(FOO);
  TypeDescription returnType=mock(TypeDescription.class);
  when(returnType.asErasure()).thenReturn(returnType);
  when(methodDescription.getReturnType()).thenReturn(returnType);
  TypeDescription componentType=mock(TypeDescription.class);
  when(returnType.getComponentType()).thenReturn(componentType);
  when(componentType.getName()).thenReturn(QUX);
  assertThat(new TypePool.Default.ComponentTypeLocator.ForAnnotationProperty(typePool,BAR_DESCRIPTOR).bind(FOO).lookup(),is(QUX));
}
