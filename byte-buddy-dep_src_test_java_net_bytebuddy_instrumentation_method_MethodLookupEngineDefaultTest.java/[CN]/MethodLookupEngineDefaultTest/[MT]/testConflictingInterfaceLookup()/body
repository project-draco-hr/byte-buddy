{
  TypeDescription objectType=new TypeDescription.ForLoadedType(Object.class);
  TypeDescription conflictingInterfaceClass=new TypeDescription.ForLoadedType(ConflictingInterfaceClass.class);
  MethodLookupEngine.Finding finding=methodLookupEngine.process(conflictingInterfaceClass);
  assertThat(finding.getInvokableMethods(),containsAllOf(conflictingInterfaceClass.getDeclaredMethods()));
  assertThat(finding.getInvokableMethods(),containsAllOf(objectType.getDeclaredMethods().filter(isVirtualTo(conflictingInterfaceClass))));
  assertThat(finding.getInvokableMethods().size(),is(conflictingInterfaceClass.getDeclaredMethods().size() + objectType.getDeclaredMethods().filter(isVirtualTo(conflictingInterfaceClass)).size() + 1));
  MethodDescription conflictMethod=finding.getInvokableMethods().filter(named(FOO)).getOnly();
  assertEquals(MethodLookupEngine.ConflictingInterfaceMethod.class,conflictMethod.getClass());
  assertThat(conflictMethod.getDeclaringType(),is(conflictingInterfaceClass));
  assertThat(finding.getInvokableDefaultMethods().size(),is(0));
}
