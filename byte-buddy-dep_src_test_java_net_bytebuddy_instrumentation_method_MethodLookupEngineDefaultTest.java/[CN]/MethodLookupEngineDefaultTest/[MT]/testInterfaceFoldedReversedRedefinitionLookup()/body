{
  TypeDescription objectType=new TypeDescription.ForLoadedType(Object.class);
  TypeDescription singleMethodOverridingInterface=new TypeDescription.ForLoadedType(SingleMethodOverridingInterface.class);
  TypeDescription abstractFoldedReverseInterfaceClass=new TypeDescription.ForLoadedType(AbstractFoldedReverseInterfaceClass.class);
  MethodLookupEngine.Finding finding=methodLookupEngine.process(abstractFoldedReverseInterfaceClass);
  assertThat(finding.getInvokableMethods(),containsAllOf(abstractFoldedReverseInterfaceClass.getDeclaredMethods()));
  assertThat(finding.getInvokableMethods(),containsAllOf(singleMethodOverridingInterface.getDeclaredMethods()));
  assertThat(finding.getInvokableMethods(),containsAllOf(objectType.getDeclaredMethods().filter(isVirtualTo(abstractFoldedReverseInterfaceClass))));
  assertThat(finding.getInvokableMethods().size(),is(abstractFoldedReverseInterfaceClass.getDeclaredMethods().size() + singleMethodOverridingInterface.getDeclaredMethods().size() + objectType.getDeclaredMethods().filter(isVirtualTo(abstractFoldedReverseInterfaceClass)).size()));
  assertThat(finding.getInvokableDefaultMethods().size(),is(0));
}
