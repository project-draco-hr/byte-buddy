{
  TypeDescription objectType=new TypeDescription.ForLoadedType(Object.class);
  TypeDescription abstractSingleInterfaceClass=new TypeDescription.ForLoadedType(AbstractSingleInterfaceClass.class);
  TypeDescription singleMethodInterface=new TypeDescription.ForLoadedType(SingleMethodInterface.class);
  MethodLookupEngine.Finding finding=methodLookupEngine.process(abstractSingleInterfaceClass);
  assertThat(finding.getLookedUpType(),is(abstractSingleInterfaceClass));
  assertThat(finding.getInvokableMethods(),containsAllOf(abstractSingleInterfaceClass.getDeclaredMethods()));
  assertThat(finding.getInvokableMethods(),containsAllOf(objectType.getDeclaredMethods().filter(isVirtualTo(abstractSingleInterfaceClass))));
  assertThat(finding.getInvokableMethods(),containsAllOf(singleMethodInterface.getDeclaredMethods()));
  assertThat(finding.getInvokableMethods().size(),is(abstractSingleInterfaceClass.getDeclaredMethods().size() + singleMethodInterface.getDeclaredMethods().size() + objectType.getDeclaredMethods().filter(isVirtualTo(abstractSingleInterfaceClass)).size()));
  assertThat(finding.getInvokableDefaultMethods().size(),is(1));
  assertThat(finding.getInvokableDefaultMethods().get(singleMethodInterface).size(),is(0));
}
