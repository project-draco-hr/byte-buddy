{
  ObjectPropertyAssertion.of(MethodInvocation.class).apply();
  ObjectPropertyAssertion.of(MethodInvocation.OfGenericMethod.class).apply();
  ObjectPropertyAssertion.of(MethodInvocation.IllegalInvocation.class).apply();
  ObjectPropertyAssertion.of(MethodInvocation.Invocation.class).refine(new ObjectPropertyAssertion.Refinement<MethodDescription>(){
    @Override public void apply(    MethodDescription mock){
      when(mock.asToken()).thenReturn(mock(MethodDescription.Token.class));
      TypeDescription declaringType=mock(TypeDescription.class);
      when(declaringType.asErasure()).thenReturn(declaringType);
      when(mock.getDeclaringType()).thenReturn(declaringType);
    }
  }
).apply();
  ObjectPropertyAssertion.of(MethodInvocation.DynamicInvocation.class).apply();
}
