{
  assertThat(byteBuddy.typeAttributeAppender,is(typeAttributeAppender));
  assertThat(byteBuddy.classFileVersion,is(classFileVersion));
  assertThat(byteBuddy.defaultFieldAttributeAppenderFactory,is(fieldAttributeAppenderFactory));
  assertThat(byteBuddy.defaultMethodAttributeAppenderFactory,is(methodAttributeAppenderFactory));
  assertThat(byteBuddy.ignoredMethods,is((ElementMatcher)methodMatcher));
  assertThat(byteBuddy.interfaceTypes.size(),is(1));
  assertThat(byteBuddy.interfaceTypes,hasItem(interfaceType));
  assertThat(byteBuddy.methodGraphCompiler,is(methodGraphCompiler));
  assertThat(byteBuddy.modifiers.isDefined(),is(true));
  assertThat(byteBuddy.modifiers.resolve(0),is(MASK));
  assertThat(byteBuddy.namingStrategy,is(namingStrategy));
  assertThat(byteBuddy.auxiliaryTypeNamingStrategy,is(auxiliaryTypeNamingStrategy));
  assertThat(byteBuddy.implementationContextFactory,is(implementationContextFactory));
  assertThat(byteBuddy.asmVisitorWrapper,instanceOf(AsmVisitorWrapper.Compound.class));
  ClassVisitor classVisitor=mock(ClassVisitor.class);
  TypeDescription instrumentedType=mock(TypeDescription.class);
  byteBuddy.asmVisitorWrapper.wrap(instrumentedType,classVisitor);
  verify(asmVisitorWrapper).wrap(instrumentedType,classVisitor);
  verifyNoMoreInteractions(asmVisitorWrapper);
}
