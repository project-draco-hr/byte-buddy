{
  return new SubclassDynamicTypeBuilder<Object>(classFileVersion,namingStrategy.create(),auxiliaryTypeNamingStrategy,TypeDescription.OBJECT,join(interfaceTypes,toList(nonNull(typeDescriptions))),modifiers.resolve(Opcodes.ACC_PUBLIC) | TypeManifestation.INTERFACE.getMask(),typeAttributeAppender,ignoredMethods,classVisitorWrapperChain,new FieldRegistry.Default(),methodRegistry,methodGraphCompiler,defaultFieldAttributeAppenderFactory,defaultMethodAttributeAppenderFactory,ConstructorStrategy.Default.NO_CONSTRUCTORS);
}
