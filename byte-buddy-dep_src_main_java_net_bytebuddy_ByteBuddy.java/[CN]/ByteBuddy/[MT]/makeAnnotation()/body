{
  return (DynamicType.Builder<? extends Annotation>)(Object)new SubclassDynamicTypeBuilder<Object>(classFileVersion,namingStrategy.create(),auxiliaryTypeNamingStrategy,TypeDescription.OBJECT,Collections.<TypeDescription>singletonList(new TypeDescription.ForLoadedType(Annotation.class)),modifiers.resolve(Opcodes.ACC_PUBLIC) | TypeManifestation.ANNOTATION.getMask(),typeAttributeAppender,ignoredMethods,classVisitorWrapperChain,new FieldRegistry.Default(),methodRegistry,methodGraphCompiler,defaultFieldAttributeAppenderFactory,defaultMethodAttributeAppenderFactory,ConstructorStrategy.Default.NO_CONSTRUCTORS);
}
