{
  return (DynamicType.Builder<? extends Annotation>)(Object)new SubclassDynamicTypeBuilder<Object>(classFileVersion,namingStrategy.create(),auxiliaryTypeNamingStrategy,implementationContextFactory,Collections.<GenericTypeDescription>singletonList(new GenericTypeDescription.ForNonGenericType.OfLoadedType(Annotation.class)),modifiers.resolve(Opcodes.ACC_PUBLIC) | TypeManifestation.ANNOTATION.getMask(),typeAttributeAppender,ignoredMethods,classVisitorWrapper,new FieldRegistry.Default(),methodRegistry,methodGraphCompiler,defaultFieldAttributeAppenderFactory,defaultMethodAttributeAppenderFactory,GenericTypeDescription.OBJECT,ConstructorStrategy.Default.NO_CONSTRUCTORS);
}
