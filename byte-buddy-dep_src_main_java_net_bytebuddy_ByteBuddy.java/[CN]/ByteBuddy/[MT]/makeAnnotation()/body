{
  return new SubclassDynamicTypeBuilder<Annotation>(InstrumentedType.Default.subclass(namingStrategy.subclass(TypeDescription.Generic.ANNOTATION),ModifierContributor.Resolver.of(Visibility.PUBLIC,TypeManifestation.ANNOTATION).resolve(),TypeDescription.Generic.OBJECT).withInterfaces(Collections.singletonList(TypeDescription.Generic.ANNOTATION)),ignoredMethods,annotationValueFilterFactory,classFileVersion,methodGraphCompiler,auxiliaryTypeNamingStrategy,implementationContextFactory,ConstructorStrategy.Default.NO_CONSTRUCTORS);
}
