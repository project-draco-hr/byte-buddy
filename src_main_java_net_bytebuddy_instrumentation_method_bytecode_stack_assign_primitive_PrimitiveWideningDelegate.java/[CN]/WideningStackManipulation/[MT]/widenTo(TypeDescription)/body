{
  if (typeDescription.represents(boolean.class)) {
    return toBooleanStackManipulation;
  }
 else   if (typeDescription.represents(byte.class)) {
    return toByteStackManipulation;
  }
 else   if (typeDescription.represents(short.class)) {
    return toShortStackManipulation;
  }
 else   if (typeDescription.represents(char.class)) {
    return toCharacterStackManipulation;
  }
 else   if (typeDescription.represents(int.class)) {
    return toIntegerStackManipulation;
  }
 else   if (typeDescription.represents(long.class)) {
    return toLongStackManipulation;
  }
 else   if (typeDescription.represents(float.class)) {
    return toFloatStackManipulation;
  }
 else   if (typeDescription.represents(double.class)) {
    return toDoubleStackManipulation;
  }
 else {
    throw new IllegalArgumentException("Not a primitive non-void type: " + typeDescription);
  }
}
