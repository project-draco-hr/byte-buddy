{
  MethodRegistry.Compiled compiledMethodRegistry=methodRegistry.prepare(instrumentedType,methodGraphCompiler,InliningImplementationMatcher.of(ignored,originalType)).compile(SubclassImplementationTarget.Factory.LEVEL_TYPE);
  return TypeWriter.Default.<T>forRedefinition(compiledMethodRegistry,fieldRegistry.compile(compiledMethodRegistry.getInstrumentedType()),auxiliaryTypeNamingStrategy,implementationContextFactory,asmVisitorWrapper,typeAttributeAppender,classFileVersion,classFileLocator,originalType,annotationValueFilterFactory).make();
}
