{
  assertThat(Exceptional.throwing(RuntimeException.class).hashCode(),is(Exceptional.throwing(RuntimeException.class).hashCode()));
  assertThat(Exceptional.throwing(RuntimeException.class),is(Exceptional.throwing(RuntimeException.class)));
  assertThat(Exceptional.throwing(RuntimeException.class).hashCode(),not(is(Exceptional.throwing(Exception.class).hashCode())));
  assertThat(Exceptional.throwing(RuntimeException.class),not(is(Exceptional.throwing(Exception.class))));
  assertThat(Exceptional.throwing(RuntimeException.class).hashCode(),not(is(Exceptional.throwing(RuntimeException.class,FOO).hashCode())));
  assertThat(Exceptional.throwing(RuntimeException.class),not(is(Exceptional.throwing(RuntimeException.class,FOO))));
  assertThat(Exceptional.throwing(RuntimeException.class,FOO).hashCode(),is(Exceptional.throwing(RuntimeException.class,FOO).hashCode()));
  assertThat(Exceptional.throwing(RuntimeException.class,FOO),is(Exceptional.throwing(RuntimeException.class,FOO)));
  assertThat(Exceptional.throwing(RuntimeException.class,FOO).hashCode(),not(is(Exceptional.throwing(Exception.class,FOO).hashCode())));
  assertThat(Exceptional.throwing(RuntimeException.class,FOO),not(is(Exceptional.throwing(Exception.class,FOO))));
  assertThat(Exceptional.throwing(RuntimeException.class,FOO).hashCode(),not(is(Exceptional.throwing(RuntimeException.class,BAR).hashCode())));
  assertThat(Exceptional.throwing(RuntimeException.class,FOO),not(is(Exceptional.throwing(RuntimeException.class,BAR))));
}
