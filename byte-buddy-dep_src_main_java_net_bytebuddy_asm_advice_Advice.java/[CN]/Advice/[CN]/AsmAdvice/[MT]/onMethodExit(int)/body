{
  int stackIncrement;
switch (opcode) {
case Opcodes.RETURN:
    stackIncrement=0;
  break;
case Opcodes.ARETURN:
case Opcodes.ATHROW:
case Opcodes.IRETURN:
case Opcodes.FRETURN:
stackIncrement=1;
break;
case Opcodes.DRETURN:
case Opcodes.LRETURN:
stackIncrement=2;
break;
default :
throw new IllegalStateException("Unexpected termination opcode: " + opcode);
}
classReader.accept(new CodeInliner(methodExit,stackIncrement),ClassReader.SKIP_DEBUG);
}
